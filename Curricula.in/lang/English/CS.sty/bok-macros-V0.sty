\KA{AL}{<<Algoritmos y Complejidad>>}{}	
"\KADescription{AL}{<<Algorithms are fundamental to computer science and software engineering. The real-world
performance of any software system depends on: (1) the algorithms chosen and (2) the suitability and efficiency of the various layers of implementation. Good algorithm design is therefore crucial for the performance of all software systems. Moreover, the study of algorithms provides insight into the intrinsic nature of the problem as well as possible solution techniques independent of programming language, programming paradigm, computer hardware, or any other implementation aspect.

An important part of computing is the ability to select algorithms appropriate to particular
purposes and to apply them, recognizing the possibility that no suitable algorithm may exist. This facility relies on understanding the range of algorithms that address an important set of welldefined problems, recognizing their strengths and weaknesses, and their suitability in particular contexts. Efficiency is a pervasive theme throughout this area. This knowledge area defines the central concepts and skills required to design, implement, and analyze algorithms for solving problems. Algorithms are essential in all advanced areas of computer science: artificial intelligence, databases, distributed computing, graphics, networking, operating systems, programming languages, security, and so on. Algorithms that have specific utility in each of these are listed in the relevant knowledge areas. Cryptography, for example, appears in the new Knowledge Area on \xref{IAS}, while parallel and distributed algorithms appear the Knowledge Area in \xref{PD}.

As with all knowledge areas, the order of topics and their groupings do not necessarily correlate to a specific order of presentation. Different programs will teach the topics in different courses and should do so in the order they believe is most appropriate for their students.>>}"	
	
\KU{AL}{BasicAnalysis}{<<Basic Analysis>>}{}{2}{2}	
\KUDescription{AL}{BasicAnalysis}{<<~>>}	
\KUItem{AL}{BasicAnalysis}{Core-Tier1}{Differences}{}{<<Differences among best, expected, and worst case behaviors of an algorithm >>}	\LO{AL}{BasicAnalysis}{Core-Tier1}{Familiarity}{Explain}{<<Explique a que se refiere con ``mejor", ``esperado" y ``peor" caso de comportamiento de un algoritmo.>>}
\KUItem{AL}{BasicAnalysis}{Core-Tier1}{Asymptotic}{}{<<Asymptotic analysis of upper and expected complexity bounds >>}	\LO{AL}{BasicAnalysis}{Core-Tier1}{Assessment}{In}{<<En el contexto de a algoritmos específicos, identifique las características de data y/o otras condiciones o suposiciones que lleven a diferentes comportamientos.>>}
\KUItem{AL}{BasicAnalysis}{Core-Tier1}{Big}{}{<<Big O notation: formal definition>>}	\LO{AL}{BasicAnalysis}{Core-Tier1}{Usage}{Determine}{<<Determine informalmente el tiempo y el espacio de complejidad de simples algoritmos.>>}
\KUItem{AL}{BasicAnalysis}{Core-Tier1}{Complexity}{}{<<Complexity classes, such as constant, logarithmic, linear, quadratic, and exponential>>}	\LO{AL}{BasicAnalysis}{Core-Tier1}{Familiarity}{State}{<<Indique la definición formal de Big O.>>}
\KUItem{AL}{BasicAnalysis}{Core-Tier1}{Empirical}{}{<<Empirical measurements of performance >>}	\LO{AL}{BasicAnalysis}{Core-Tier1}{Familiarity}{List}{<<Lista y contraste de clases estándares de complejidad.>>}
\KUItem{AL}{BasicAnalysis}{Core-Tier1}{Time}{}{<<Time and space trade-offs in algorithms>>}	\LO{AL}{BasicAnalysis}{Core-Tier1}{Assessment}{Perform}{<<Realizar estúdios empíricos para validar una hipótesis sobre runtime stemming desde un análisis matemático Ejecute algoritmos con entrada de varios tamaños y compare el desempeño.>>}
\KUItem{AL}{BasicAnalysis}{Core-Tier2}{BigO}{}{<<Big O notation: use>>}	\LO{AL}{BasicAnalysis}{Core-Tier1}{Familiarity}{Give}{<<Da ejemplos que ilustran las compensaciones entre espacio y tiempo que se dan en los algoritmos.>>}
\KUItem{AL}{BasicAnalysis}{Core-Tier2}{Little}{}{<<Little o, big omega and big theta notation >>}	\LO{AL}{BasicAnalysis}{Core-Tier2}{Usage}{Use}{<<Use la notación formal de la Big O para dar límites superiores asintóticos en la complejidad de tiempo y espacio de los algoritmos.>>}
\KUItem{AL}{BasicAnalysis}{Core-Tier2}{Recurrence}{}{<<Recurrence relations >>}	\LO{AL}{BasicAnalysis}{Core-Tier2}{Usage}{UseBig}{<<Usar la notación formal Big O para dar límites de casos esperados en el tiempo de complejidad de los algoritmos>>}
\KUItem{AL}{BasicAnalysis}{Core-Tier2}{Analysis}{}{<<Analysis of iterative and recursive algorithms >>}	\LO{AL}{BasicAnalysis}{Core-Tier2}{Familiarity}{ExplainThe}{<<Explicar el uso de la notación theta grande, omega grande y o pequeña para describir la cantidad de trabajo hecho por un algoritmo.>>}
\KUItem{AL}{BasicAnalysis}{Core-Tier2}{Some}{}{<<Some version of a Master Theorem >>}	\LO{AL}{BasicAnalysis}{Core-Tier2}{Usage}{UseRecurrence}{<<Usar relaciones recurrentes para determinar el tiempo de complejidad de algoritmos recursivamente definidos.>>}
	\LO{AL}{BasicAnalysis}{Core-Tier2}{Usage}{Solve}{<<Resuelve relaciones de recurrencia básicas, por ejemplo. usando alguna forma del Teorema Maestro.>>}
	
\KU{AL}{AlgorithmicStrategies}{<<Algorithmic Strategies >>}{}{5}{1}	
\KUDescription{AL}{AlgorithmicStrategies}{<<An instructor might choose to cover these algorithmic strategies in the context of the algorithms presented in “Fundamental Data Structures and Algorithms” below. While the total number of hours for the two knowledge units (18) could be divided differently between them, our sense is that the 1:2 ratio is reasonable.>>}	
\KUItem{AL}{AlgorithmicStrategies}{Core-Tier1}{Brute}{}{<<Brute-force algorithms>>}	\LO{AL}{AlgorithmicStrategies}{Core-Tier1}{Familiarity}{For}{<<Para cada una de las estrategias (fuerza bruta, algoritmo goloso, divide y vencerás, recursividad en reversa y programación dinámica), identifica un ejemplo práctico en el cual se pueda aplicar.>>}
\KUItem{AL}{AlgorithmicStrategies}{Core-Tier1}{Greedy}{}{<<Greedy algorithms>>}	\LO{AL}{AlgorithmicStrategies}{Core-Tier1}{Assessment}{UseA}{<<Utiliza un enfoque voraz para resolver un problema específico y determina si la regla escogida lo guía a una solución óptima.>>}
\KUItem{AL}{AlgorithmicStrategies}{Core-Tier1}{Divide}{SDFAlgorithmsandDesign,SDFAlgorithmsandDesignTopicProblemSolving}{<<Divide-and-conquer >>}	\LO{AL}{AlgorithmicStrategies}{Core-Tier1}{Usage}{UseAConquer}{<<Usa un algoritmo de divide-y-vencerás para resolver un determinado problema.>>}
\KUItem{AL}{AlgorithmicStrategies}{Core-Tier1}{Recursive}{}{<<Recursive backtracking>>}	\LO{AL}{AlgorithmicStrategies}{Core-Tier1}{Usage}{UseRecursive}{<<Usa recursividad en reversa a fin de resover un problema como en el caso de recorrer un laberinto.>>}
\KUItem{AL}{AlgorithmicStrategies}{Core-Tier1}{Dynamic}{}{<<Dynamic Programming >>}	\LO{AL}{AlgorithmicStrategies}{Core-Tier1}{Usage}{UseDynamic}{<<Usa programación dinámica para resolver un problema determinado.>>}
\KUItem{AL}{AlgorithmicStrategies}{Core-Tier2}{Branch}{}{<<Branch-and-bound>>}	\LO{AL}{AlgorithmicStrategies}{Core-Tier1}{Assessment}{DetermineAn}{<<Determina el enfoque algorítmico adecuado para un problema.>>}
\KUItem{AL}{AlgorithmicStrategies}{Core-Tier2}{Heuristics}{}{<<Heuristics>>}	\LO{AL}{AlgorithmicStrategies}{Core-Tier2}{Familiarity}{Describe}{<<Describe varios métodos basados en heurísticas para resolver problemas.>>}
\KUItem{AL}{AlgorithmicStrategies}{Core-Tier2}{Reduction}{}{<<Reduction: transform-and-conquer>>}	\LO{AL}{AlgorithmicStrategies}{Core-Tier2}{Usage}{UseATo}{<<Usa en enfoque heurístico para resolver un problema determinado.>>}
	\LO{AL}{AlgorithmicStrategies}{Core-Tier2}{Assessment}{DescribeThe}{<<Describe las compensaciones que se dan entre usar estrategias de fuerza bruta y aquellas basadas en heurísticas.>>}
	\LO{AL}{AlgorithmicStrategies}{Core-Tier2}{Familiarity}{DescribeHow}{<<Describe como un enfoque de ramificación y poda puede ser usado para mejorar el rendimiento de un método heurístico.>>}
	
\KU{AL}{FundamentalDataStructuresandAlgorithms}{<<Fundamental Data Structures and Algorithms>>}{}{9}{3}	
\KUDescription{AL}{FundamentalDataStructuresandAlgorithms}{<<This knowledge unit builds directly on the foundation provided by \xref{SDF}, particularly the material in \xref{SDFFundamentalDataStructures} and \xref{SDFAlgorithmsandDesign}.>>}	
\KUItem{AL}{FundamentalDataStructuresandAlgorithms}{Core-Tier1}{Simple}{}{<<Simple numerical algorithms, such as computing the average of a list of numbers, finding the min, max, >>}	\LO{AL}{FundamentalDataStructuresandAlgorithms}{Core-Tier1}{Usage}{Implement}{<<Implementar algoritmos numéricos básicos.>>}
\KUItem{AL}{FundamentalDataStructuresandAlgorithms}{Core-Tier1}{Sequential}{}{<<Sequential and binary search algorithms>>}	\LO{AL}{FundamentalDataStructuresandAlgorithms}{Core-Tier1}{Assessment}{ImplementSimple}{<<Implementar algoritmos de busqueda simple y explicar las diferencias en sus tiempos de complejidad.>>}
\KUItem{AL}{FundamentalDataStructuresandAlgorithms}{Core-Tier1}{Worst}{}{<<Worst case quadratic sorting algorithms (selection, insertion)>>}	\LO{AL}{FundamentalDataStructuresandAlgorithms}{Core-Tier1}{Usage}{Be}{<<Ser capaz de implementar algoritmos de ordenamiento comunes cuádraticos y O(N log N).>>}
\KUItem{AL}{FundamentalDataStructuresandAlgorithms}{Core-Tier1}{WorstOr}{}{<<Worst or average case O(N log N) sorting algorithms (quicksort, heapsort, mergesort) >>}	\LO{AL}{FundamentalDataStructuresandAlgorithms}{Core-Tier1}{Familiarity}{DescribeTheHash}{<<Describir la implementación de tablas hash, incluyendo resolución y el evitamiento de colisiones.>>}
\KUItem{AL}{FundamentalDataStructuresandAlgorithms}{Core-Tier1}{Hash}{}{<<Hash tables, including strategies for avoiding and resolving collisions >>}	\LO{AL}{FundamentalDataStructuresandAlgorithms}{Core-Tier1}{Familiarity}{Discuss}{<<Discutir el tiempo de ejecución y eficiencia de memoria de los principales algoritmos de ordenamiento, busqueda y hashing.>>}
"\KUItem{AL}{FundamentalDataStructuresandAlgorithms}{Core-Tier1}{Binary}{}{<<Binary search trees 
\begin{subtopics} 
\item Common operations on binary search trees such as select min, max, insert, delete, iterate over tree 
\end{subtopics}>>}"	\LO{AL}{FundamentalDataStructuresandAlgorithms}{Core-Tier1}{Familiarity}{DiscussFactors}{<<Discutir factores otros que no sean eficiencia computacional que influyan en la elección de algoritmos, tales como tiempo de programación, mantenibilidad, y el uso de patrones específicos de la aplicación en los datos de entrada.>>}
"\KUItem{AL}{FundamentalDataStructuresandAlgorithms}{Core-Tier1}{Graphs}{}{<<Graphs and graph algorithms 
\begin{subtopics} 
\item Representations of graphs (e.g., adjacency list, adjacency matrix) 
\item Depth- and breadth-first traversals 
\end{subtopics}>>}"	\LO{AL}{FundamentalDataStructuresandAlgorithms}{Core-Tier1}{Familiarity}{ExplainHow}{<<Explicar como el balanceamiento del arbol afecta la eficiencia de varias operaciones de un arbol de búsqueda binaria.>>}
\KUItem{AL}{FundamentalDataStructuresandAlgorithms}{Core-Tier2}{Heaps}{}{<<Heaps>>}	\LO{AL}{FundamentalDataStructuresandAlgorithms}{Core-Tier1}{Usage}{SolveProblems}{<<Resolver problemas usando algoritmos básicos de grafos, incluyendo busqueda por profundidad y busqueda por amplitud.>>}
"\KUItem{AL}{FundamentalDataStructuresandAlgorithms}{Core-Tier2}{GraphsAnd}{}{<<Graphs and graph algorithms
\begin{subtopics} 
\item Shortest-path algorithms (Dijkstra’s and Floyd’s algorithms)
\item Minimum spanning tree (Prim’s and Kruskal’s algorithms) 
\end{subtopics}>>}"	\LO{AL}{FundamentalDataStructuresandAlgorithms}{Core-Tier1}{Assessment}{Demonstrate}{<<Demostrar habilidad para evaluar algoritmos, para seleccionar de un rango de posibles opciones, para proveer una  justificación por esa selección,y para implementar el algoritmo en un contexto en específico.>>}
\KUItem{AL}{FundamentalDataStructuresandAlgorithms}{Core-Tier2}{Pattern}{}{<<Pattern matching and string/text algorithms (e.g., substring matching, regular expression matching, longest common subsequence algorithms) >>}	\LO{AL}{FundamentalDataStructuresandAlgorithms}{Core-Tier2}{Familiarity}{DescribeTheAnd}{<<Describir la propiedad del heap y el uso de heaps como una implementación de colas de prioridad.>>}
	\LO{AL}{FundamentalDataStructuresandAlgorithms}{Core-Tier2}{Usage}{SolveProblemsAlgorithms}{<<Resolver problemas usando algoritmos de grafos, incluyendo camino más corto de una sola fuente y camino más corto de todos los pares, y como mínimo un algoritmo de arbol de expansion minima.>>}
	\LO{AL}{FundamentalDataStructuresandAlgorithms}{Core-Tier2}{Usage}{Trace}{<<Trazar y/o implementar un algoritmo de comparación de string.>>}
	
\KU{AL}{BasicAutomataComputabilityandComplexity}{<<Basic Automata Computability and Complexity>>}{}{3}{3}	
\KUDescription{AL}{BasicAutomataComputabilityandComplexity}{<<~>>}	
\KUItem{AL}{BasicAutomataComputabilityandComplexity}{Core-Tier1}{Finite}{}{<<Finite-state machines >>}	\LO{AL}{BasicAutomataComputabilityandComplexity}{Core-Tier1}{Familiarity}{DiscussThe}{<<Discute el concepto de máquina de estado finito>>}
\KUItem{AL}{BasicAutomataComputabilityandComplexity}{Core-Tier1}{Regular}{}{<<Regular expressions>>}	\LO{AL}{BasicAutomataComputabilityandComplexity}{Core-Tier1}{Usage}{Design}{<<Diseñe una máquina de estado finito determinista para aceptar un determinado lenguaje>>}
\KUItem{AL}{BasicAutomataComputabilityandComplexity}{Core-Tier1}{The}{}{<<The halting problem>>}	\LO{AL}{BasicAutomataComputabilityandComplexity}{Core-Tier1}{Usage}{Generate}{<<Genere una expresión regular para representar un lenguaje específico>>}
\KUItem{AL}{BasicAutomataComputabilityandComplexity}{Core-Tier2}{Context}{PLSyntaxAnalysis,PLSyntaxAnalysis}{<<Context-free grammars>>}	\LO{AL}{BasicAutomataComputabilityandComplexity}{Core-Tier1}{Familiarity}{ExplainWhy}{<<Explique porque el problema de la parada no tiene solucion algorítmica>>}
\KUItem{AL}{BasicAutomataComputabilityandComplexity}{Core-Tier2}{Introduction}{}{<<Introduction to the P and NP classes and the P vs. NP problem>>}	\LO{AL}{BasicAutomataComputabilityandComplexity}{Core-Tier2}{Usage}{DesignA}{<<Diseñe una gramática libre de contexto para representar un lenguaje especificado>>}
\KUItem{AL}{BasicAutomataComputabilityandComplexity}{Core-Tier2}{IntroductionTo}{}{<<Introduction to the NP-complete class and exemplary NP-complete problems (e.g., SAT, Knapsack)>>}	\LO{AL}{BasicAutomataComputabilityandComplexity}{Core-Tier2}{Familiarity}{Define}{<<Define las clases P y NP>>}
	\LO{AL}{BasicAutomataComputabilityandComplexity}{Core-Tier2}{Familiarity}{ExplainTheNp}{<<Explique el significado de NP-Completitud>>}
	
\KU{AL}{AdvancedComputationalComplexity}{<<Advanced Computational Complexity>>}{}{0}{0}	
\KUDescription{AL}{AdvancedComputationalComplexity}{<<~>>}	
\KUItem{AL}{AdvancedComputationalComplexity}{Elective}{Review}{}{<<Review of the classes P and NP; introduce P-space and EXP>>}	\LO{AL}{AdvancedComputationalComplexity}{Elective}{Familiarity}{DefineThe}{<<Define las clases P y NP (También aparece en AL / Automata Básico, Computalidad y Complejidad)>>}
\KUItem{AL}{AdvancedComputationalComplexity}{Elective}{Polynomial}{}{<<Polynomial hierarchy>>}	\LO{AL}{AdvancedComputationalComplexity}{Elective}{Familiarity}{DefineTheClass}{<<Define la clase P-Space y su relación con la clase EXP>>}
\KUItem{AL}{AdvancedComputationalComplexity}{Elective}{Np}{}{<<NP-completeness (Cook’s theorem) >>}	\LO{AL}{AdvancedComputationalComplexity}{Elective}{Familiarity}{ExplainTheNpAppears}{<<Explique el significado de NP-Completo  (También aparece en AL / Automata Básico, Computalidad y Complejidad)>>}
\KUItem{AL}{AdvancedComputationalComplexity}{Elective}{Classic}{}{<<Classic NP-complete problems >>}	\LO{AL}{AdvancedComputationalComplexity}{Elective}{Familiarity}{Provide}{<<Muestre ejemplos de problemas clásicos en NP - Completo>>}
\KUItem{AL}{AdvancedComputationalComplexity}{Elective}{Reduction}{}{<<Reduction Techniques >>}	\LO{AL}{AdvancedComputationalComplexity}{Elective}{Usage}{Prove}{<<Pruebe que un problema es NP- Completo reduciendo un problema conocido como NP-Completo>>}
	
\KU{AL}{AdvancedAutomataTheoryandComputability}{<<Advanced Automata Theory and Computability>>}{}{0}{0}	
\KUDescription{AL}{AdvancedAutomataTheoryandComputability}{<<~>>}	
"\KUItem{AL}{AdvancedAutomataTheoryandComputability}{Elective}{Sets}{}{<<Sets and languages 
\begin{subtopics} 
\item Regular languages 
\item Review of deterministic finite automata (DFAs) 
\item Nondeterministic finite automata (NFAs) 
\item Equivalence of DFAs and NFAs 
\item Review of regular expressions; their equivalence to finite automata 
\item Closure properties 
\item Proving languages non-regular, via the pumping lemma or alternative means 
\end{subtopics}>>}"	\LO{AL}{AdvancedAutomataTheoryandComputability}{Elective}{Assessment}{DetermineA}{<<Determina la ubicación de un lenguaje en la jerarquía de Chomsky (regular, libre de contexto, enumerable recursivamente)>>}
"\KUItem{AL}{AdvancedAutomataTheoryandComputability}{Elective}{Context}{}{<<Context-free languages 
\begin{subtopics} 
\item Push-down automata (PDAs) 
\item Relationship of PDAs and context-free grammars 
\item Properties of context-free languages 
\end{subtopics}>>}"	\LO{AL}{AdvancedAutomataTheoryandComputability}{Elective}{Usage}{Convert}{<<Convierte entre notaciones igualmente poderosas para un lenguaje, incluyendo entre estas AFDs, AFNDs, expresiones regulares, y entre AP y GLCs.>>}
\KUItem{AL}{AdvancedAutomataTheoryandComputability}{Elective}{Turing}{}{<<Turing machines, or an equivalent formal model of universal computation >>}	\LO{AL}{AdvancedAutomataTheoryandComputability}{Elective}{Familiarity}{ExplainTheThesis}{<<Explica la tesis de Church-Turing y su importancia.>>}
\KUItem{AL}{AdvancedAutomataTheoryandComputability}{Elective}{Nondeterministic}{}{<<Nondeterministic Turing machines>>}	\LO{AL}{AdvancedAutomataTheoryandComputability}{Elective}{Familiarity}{ExplainRices}{<<Explica el teorema de Rice y su importancia.>>}
\KUItem{AL}{AdvancedAutomataTheoryandComputability}{Elective}{Chomsky}{}{<<Chomsky hierarchy>>}	\LO{AL}{AdvancedAutomataTheoryandComputability}{Elective}{Familiarity}{ProvideExamples}{<<Da ejemplos de funciones no computables.>>}
\KUItem{AL}{AdvancedAutomataTheoryandComputability}{Elective}{The}{}{<<The Church-Turing thesis >>}	\LO{AL}{AdvancedAutomataTheoryandComputability}{Elective}{Usage}{ProveThat}{<<Demuestra que un problema es no computable al reducir un problema clásico no computable en base a él.>>}
\KUItem{AL}{AdvancedAutomataTheoryandComputability}{Elective}{Computability}{}{<<Computability>>}	
\KUItem{AL}{AdvancedAutomataTheoryandComputability}{Elective}{Rices}{}{<<Rice’s Theorem>>}	
\KUItem{AL}{AdvancedAutomataTheoryandComputability}{Elective}{Examples}{}{<<Examples of uncomputable functions>>}	
\KUItem{AL}{AdvancedAutomataTheoryandComputability}{Elective}{Implications}{}{<<Implications of uncomputability>>}	
	
\KU{AL}{AdvancedDataStructuresAlgorithmsandAnalysis}{<<Advanced Data Structures Algorithms and Analysis>>}{}{0}{0}	
\KUDescription{AL}{AdvancedDataStructuresAlgorithmsandAnalysis}{<<Many programs will want their students to have exposure to more advanced algorithms or methods of analysis. Below is a selection of possible advanced topics that are current and timely but by no means exhaustive.>>}	
\KUItem{AL}{AdvancedDataStructuresAlgorithmsandAnalysis}{Elective}{Balanced}{}{<<Balanced trees (e.g., AVL trees, red-black trees, splay trees, treaps)>>}	\LO{AL}{AdvancedDataStructuresAlgorithmsandAnalysis}{Elective}{Assessment}{Understand}{<<Entender el mapeamento de problemas del mundo real a soluciones algorítmicas (ejemplo, problemas de grafos, programas lineares,etc)>>}
\KUItem{AL}{AdvancedDataStructuresAlgorithmsandAnalysis}{Elective}{Graphs}{}{<<Graphs (e.g, topological sort, finding strongly connected components, matching)>>}	\LO{AL}{AdvancedDataStructuresAlgorithmsandAnalysis}{Elective}{Assessment}{Select}{<<Seleccionar y aplicar técnicas de algoritmos avanzadas (ejemplo, randonmización, aproximación) para resolver problemas reales.>>}
\KUItem{AL}{AdvancedDataStructuresAlgorithmsandAnalysis}{Elective}{Advanced}{}{<<Advanced data structures (e.g., B-trees, Fibonacci heaps)>>}	\LO{AL}{AdvancedDataStructuresAlgorithmsandAnalysis}{Elective}{Assessment}{SelectAnd}{<<Seleccionar y aplicar técnicas avanzadas de análisis (ejemplo, amortizado, probabilistico,etc) para algoritmos.>>}
\KUItem{AL}{AdvancedDataStructuresAlgorithmsandAnalysis}{Elective}{String}{}{<<String-based data structures and algorithms (e.g., suffix arrays, suffix trees, tries)>>}	
\KUItem{AL}{AdvancedDataStructuresAlgorithmsandAnalysis}{Elective}{Network}{}{<<Network flows (e.g., max flow [Ford-Fulkerson algorithm], max flow - min cut, maximum bipartite matching)>>}	
\KUItem{AL}{AdvancedDataStructuresAlgorithmsandAnalysis}{Elective}{Linear}{}{<<Linear Programming (e.g., duality, simplex method, interior point algorithms)>>}	
\KUItem{AL}{AdvancedDataStructuresAlgorithmsandAnalysis}{Elective}{Number}{}{<<Number-theoretic algorithms (e.g., modular arithmetic, primality testing, integer factorization)>>}	
\KUItem{AL}{AdvancedDataStructuresAlgorithmsandAnalysis}{Elective}{Geometric}{}{<<Geometric algorithms (e.g., points, line segments, polygons. [properties, intersections], finding convex hull,>>}	
\KUItem{AL}{AdvancedDataStructuresAlgorithmsandAnalysis}{Elective}{Randomized}{}{<<Randomized algorithms>>}	
\KUItem{AL}{AdvancedDataStructuresAlgorithmsandAnalysis}{Elective}{Stochastic}{}{<<Stochastic algorithms>>}	
\KUItem{AL}{AdvancedDataStructuresAlgorithmsandAnalysis}{Elective}{Approximation}{}{<<Approximation algorithms>>}	
\KUItem{AL}{AdvancedDataStructuresAlgorithmsandAnalysis}{Elective}{Amortized}{}{<<Amortized analysis>>}	
\KUItem{AL}{AdvancedDataStructuresAlgorithmsandAnalysis}{Elective}{Probabilistic}{}{<<Probabilistic analysis>>}	
\KUItem{AL}{AdvancedDataStructuresAlgorithmsandAnalysis}{Elective}{Online}{}{<<Online algorithms and competitive analysis>>}	
	
\KA{AR}{<<Arquitectura y Organización.>>}{}	
"\KADescription{AR}{<<Computing professionals should not regard the computer as just a black box that executes programs by magic. The knowledge area Architecture and Organization builds on Systems Fundamentals (SF) to develop a deeper understanding of the hardware environment upon which all computing is based, and the interface it provides to higher software layers. Students should acquire an understanding and appreciation of a computer system’s functional components, their characteristics, performance, and interactions, and, in particular, the challenge of harnessing parallelism to sustain performance improvements now and into the future. Students need to understand computer architecture to develop programs that can achieve high performance through a programmer’s awareness of parallelism and latency. In selecting a system to use, students should be able to understand the tradeoff among various components, such as CPU clock speed, cycles per instruction, memory size, and average memory access time.

The learning outcomes specified for these topics correspond primarily to the core and are intended to support programs that elect to require only the minimum 16 hours of computer architecture of their students. For programs that want to teach more than the minimum, the same AR topics can be treated at a more advanced level by implementing a two-course sequence. For programs that want to cover the elective topics, those topics can be introduced within a twocourse sequence and/or be treated in a more comprehensive way in a third course.>>}"	
	
\KU{AR}{Digitallogicanddigitalsystems}{<<Digital logic and digital systems>>}{}{0}{3}	
\KUDescription{AR}{Digitallogicanddigitalsystems}{<<~>>}	
\KUItem{AR}{Digitallogicanddigitalsystems}{Core-Tier2}{Overview}{}{<<Overview and history of computer architecture >>}	\LO{AR}{Digitallogicanddigitalsystems}{Core-Tier2}{Familiarity}{DescribeTheComputer}{<<Describir el avance paulatino de los componentes de la tecnología de computación, desde los tubos de vacío hasta VLSI, desde las arquitecturas mainframe a las arquitecturas en escala warehouse>>}
\KUItem{AR}{Digitallogicanddigitalsystems}{Core-Tier2}{Combinational}{}{<<Combinational vs. sequential logic/Field programmable gate arrays as a fundamental combinational + sequential logic building block>>}	\LO{AR}{Digitallogicanddigitalsystems}{Core-Tier2}{Familiarity}{Comprehend}{<<Comprender que la tendencia de las arquitecturas modernas de computadores es hacia núcleos múltiples y que el paraleliso es inherente en todos los sistemas de hardware>>}
\KUItem{AR}{Digitallogicanddigitalsystems}{Core-Tier2}{Multiple}{}{<<Multiple representations/layers of interpretation (hardware is just another layer) >>}	\LO{AR}{Digitallogicanddigitalsystems}{Core-Tier2}{Familiarity}{ExplainTheThe}{<<Explicar las implicancias de los límites de potencia para mejoras adicionales en el rendimiento de los procesadores y también en el aprovechamiento del paralelismo.>>}
\KUItem{AR}{Digitallogicanddigitalsystems}{Core-Tier2}{Computer}{}{<<Computer-aided design tools that process hardware and architectural representations >>}	\LO{AR}{Digitallogicanddigitalsystems}{Core-Tier2}{Familiarity}{Articulate}{<<Relacionar las varias representaciones equivalentes de la funcionalidad de un computador, incluyendo expresiones y puertas lógicas, y ser capces de utilizar expresiones matemáticas para describir las funciones de circuitos combinacionales y secuenciales sencillos.>>}
\KUItem{AR}{Digitallogicanddigitalsystems}{Core-Tier2}{Register}{}{<<Register transfer notation/Hardware Description Language (Verilog/VHDL)>>}	\LO{AR}{Digitallogicanddigitalsystems}{Core-Tier2}{Usage}{DesignThe}{<<Diseñar los componentes básicos de construcción de un computador: unidad aritmético lógica (a nivel de puertas lógicas), unidad central de procesamiento (a nivel de registros de transferencia), memoria (a nivel de registros de transferencia).>>}
\KUItem{AR}{Digitallogicanddigitalsystems}{Core-Tier2}{Physical}{}{<<Physical constraints (gate delays, fan-in, fan-out, energy/power) >>}	\LO{AR}{Digitallogicanddigitalsystems}{Core-Tier2}{Usage}{UseCad}{<<Usar herramientas CAD para capturar, sistetizar, y simular bloques de construcción (como ALUs, registros, movimiento entre registros) de un computador simple.>>}
	\LO{AR}{Digitallogicanddigitalsystems}{Core-Tier2}{Assessment}{Evaluate}{<<Evaluar el comportamiento de un diagrama de tiempos y funcional de un procesador simple implementado a nivel de circuitos lógicos.>>}
	
\KU{AR}{Machinelevelrepresentationofdata}{<<Machine level representation of data>>}{}{0}{3}	
\KUDescription{AR}{Machinelevelrepresentationofdata}{<<~>>}	
\KUItem{AR}{Machinelevelrepresentationofdata}{Core-Tier2}{Bits}{}{<<Bits, bytes, and words>>}	\LO{AR}{Machinelevelrepresentationofdata}{Core-Tier2}{Familiarity}{ExplainWhyData}{<<Explicar porqué en computación todo es datos, inclusive las instrucciones>>}
\KUItem{AR}{Machinelevelrepresentationofdata}{Core-Tier2}{Numeric}{}{<<Numeric data representation and number bases >>}	\LO{AR}{Machinelevelrepresentationofdata}{Core-Tier2}{Familiarity}{ExplainTheUsing}{<<Explicar las razones de usar formatos alternativos para representar datos numéricos>>}
\KUItem{AR}{Machinelevelrepresentationofdata}{Core-Tier2}{Fixed}{}{<<Fixed- and floating-point systems >>}	\LO{AR}{Machinelevelrepresentationofdata}{Core-Tier2}{Familiarity}{DescribeHowAre}{<<Describir cómo los enteros negativos se almacenan con representaciones de bit de signo y complemento a 2>>}
\KUItem{AR}{Machinelevelrepresentationofdata}{Core-Tier2}{Signed}{}{<<Signed and twos-complement representations>>}	\LO{AR}{Machinelevelrepresentationofdata}{Core-Tier2}{Familiarity}{ExplainHowNumber}{<<Explicar cómo las representaciones de tamaño fijo afectan en la exactitud y la precisión>>}
\KUItem{AR}{Machinelevelrepresentationofdata}{Core-Tier2}{Representation}{}{<<Representation of non-numeric data (character codes, graphical data) >>}	\LO{AR}{Machinelevelrepresentationofdata}{Core-Tier2}{Familiarity}{DescribeTheOf}{<<Describir la representación interna de datos no numéricos como caracteres, cadenas, registros y arreglos>>}
\KUItem{AR}{Machinelevelrepresentationofdata}{Core-Tier2}{RepresentationOf}{}{<<Representation of records and arrays>>}	\LO{AR}{Machinelevelrepresentationofdata}{Core-Tier2}{Usage}{ConvertNumerical}{<<Convertir datos numéricos de un formato a otro>>}
	\LO{AR}{Machinelevelrepresentationofdata}{Core-Tier2}{Usage}{Write}{<<Escribir programas simples a nivel de ensamblador o código máquina para procesamiento y manipulación de cadenas>>}
	
\KU{AR}{Assemblylevelmachineorganization}{<<Assembly level machine organization>>}{}{0}{6}	
\KUDescription{AR}{Assemblylevelmachineorganization}{<<~>>}	
\KUItem{AR}{Assemblylevelmachineorganization}{Core-Tier2}{Basic}{}{<<Basic organization of the von Neumann machine>>}	\LO{AR}{Assemblylevelmachineorganization}{Core-Tier2}{Familiarity}{ExplainTheTheNeumann}{<<Explicar la organización de la maquina clásica de von Neumann y sus principales unidades funcionales>>}
\KUItem{AR}{Assemblylevelmachineorganization}{Core-Tier2}{Control}{}{<<Control unit; instruction fetch, decode, and execution>>}	\LO{AR}{Assemblylevelmachineorganization}{Core-Tier2}{Familiarity}{DescribeHowIs}{<<Describir cómo se ejecuta una instrucción en una máquina de von Neumann con extensión para hebras, sincronización multiproceso y ejecucion SIMD (máquina vectorial)>>}
\KUItem{AR}{Assemblylevelmachineorganization}{Core-Tier2}{Instruction}{}{<<Instruction sets and types (data manipulation, control, I/O)>>}	\LO{AR}{Assemblylevelmachineorganization}{Core-Tier2}{Familiarity}{DescribeInstruction}{<<Describir el paralelismo a nivel de instrucciones y sus peligros, y cómo es esto tratado en pipelines de proceso típicos.>>}
\KUItem{AR}{Assemblylevelmachineorganization}{Core-Tier2}{Assembly}{}{<<Assembly/machine language programming >>}	\LO{AR}{Assemblylevelmachineorganization}{Core-Tier2}{Familiarity}{Summarize}{<<Resumir cómo se representan las instrucciones, tanto a nivel de máquina bajo el contexto de un ensamblador simbólico.>>}
\KUItem{AR}{Assemblylevelmachineorganization}{Core-Tier2}{InstructionFormats}{}{<<Instruction formats>>}	\LO{AR}{Assemblylevelmachineorganization}{Core-Tier2}{Familiarity}{DemonstrateHow}{<<Demostrar cómo se mapean los patrones de lenguajes de alto nivel en notaciones en lenguaje ensamblador o en código máquina>>}
\KUItem{AR}{Assemblylevelmachineorganization}{Core-Tier2}{Addressing}{}{<<Addressing modes >>}	\LO{AR}{Assemblylevelmachineorganization}{Core-Tier2}{Familiarity}{ExplainDifferent}{<<Explicar los diferentes formatos de instrucciones, así como el direccionamiento por instrucción, y comparar formatos de tamaño fijo y variable>>}
\KUItem{AR}{Assemblylevelmachineorganization}{Core-Tier2}{Subroutine}{PLLanguageTranslationandExecutionm,PLLanguageTranslationandExecution}{<<Subroutine call and return mechanisms>>}	\LO{AR}{Assemblylevelmachineorganization}{Core-Tier2}{Familiarity}{ExplainHowAre}{<<Explicar como las llamadas a subrutinas son manejadas a nivel de ensamblador>>}
\KUItem{AR}{Assemblylevelmachineorganization}{Core-Tier2}{I}{}{<<I/O and interrupts>>}	\LO{AR}{Assemblylevelmachineorganization}{Core-Tier2}{Familiarity}{ExplainTheOf}{<<Explicar los conceptos básicos de interrupciones y operaciones de entrada y salida (I/O)>>}
\KUItem{AR}{Assemblylevelmachineorganization}{Core-Tier2}{Heap}{}{<<Heap vs. Static vs. Stack vs. Code segments>>}	\LO{AR}{Assemblylevelmachineorganization}{Core-Tier2}{Usage}{WriteSimple}{<<Escribir segmentos de programa simples en lenguaje ensamblador>>}
\KUItem{AR}{Assemblylevelmachineorganization}{Core-Tier2}{Shared}{}{<<Shared memory multiprocessors/multicore organization>>}	\LO{AR}{Assemblylevelmachineorganization}{Core-Tier2}{Usage}{Show}{<<Ilustrar cómo los bloques constructores fundamentales en lenguajes de alto nivel son implementados a nivel de lenguaje máquina>>}
\KUItem{AR}{Assemblylevelmachineorganization}{Core-Tier2}{Introduction}{}{<<Introduction to SIMD vs. MIMD and the Flynn Taxonomy>>}	
	
\KU{AR}{Memorysystemorganizationandarchitecture}{<<Memory system organization and architecture>>}{OSMemoryManagement,OSVirtualMachines,OSMemoryManagement,OSVirtualMachines}{0}{3}	
\KUDescription{AR}{Memorysystemorganizationandarchitecture}{<<~>>}	
\KUItem{AR}{Memorysystemorganizationandarchitecture}{Core-Tier2}{Storage}{}{<<Storage systems and their technology>>}	\LO{AR}{Memorysystemorganizationandarchitecture}{Core-Tier2}{Familiarity}{Identify}{<<Identifique las principales tecnologías de memoria (Por ejemplo: SRAM, DRAM, Flash,Disco Magnetico) y su  relación costo beneficio>>}
\KUItem{AR}{Memorysystemorganizationandarchitecture}{Core-Tier2}{Memory}{}{<<Memory hierarchy: importance of temporal and spatial locality>>}	\LO{AR}{Memorysystemorganizationandarchitecture}{Core-Tier2}{Familiarity}{ExplainTheMemory}{<<Explique el efecto del retardo de la memoria en tiempo de ejecución>>}
\KUItem{AR}{Memorysystemorganizationandarchitecture}{Core-Tier2}{Main}{}{<<Main memory organization and operations >>}	\LO{AR}{Memorysystemorganizationandarchitecture}{Core-Tier2}{Familiarity}{DescribeHowOf}{<<Describa como el uso de jerarquía de memoria (caché, memoria virtual) es aplicado para reducir el retardo efectivo en la memoria>>}
\KUItem{AR}{Memorysystemorganizationandarchitecture}{Core-Tier2}{Latency}{}{<<Latency, cycle time, bandwidth, and interleaving >>}	\LO{AR}{Memorysystemorganizationandarchitecture}{Core-Tier2}{Familiarity}{DescribeTheMemory}{<<Describa los principios de la administración de memoria>>}
\KUItem{AR}{Memorysystemorganizationandarchitecture}{Core-Tier2}{Cache}{}{<<Cache memories (address mapping, block size, replacement and store policy) >>}	\LO{AR}{Memorysystemorganizationandarchitecture}{Core-Tier2}{Familiarity}{ExplainTheA}{<<Explique el funcionamiento de un sistema con gestión de memoria virtual>>}
\KUItem{AR}{Memorysystemorganizationandarchitecture}{Core-Tier2}{Multiprocessor}{}{<<Multiprocessor cache consistency/Using the memory system for inter-core synchronization/atomic memory operations>>}	\LO{AR}{Memorysystemorganizationandarchitecture}{Core-Tier2}{Usage}{Compute}{<<Calcule el tiempo de acceso promedio a memoria bajo varias configuraciones de caché y memoria y para diversas combinaciones de instrucciones y referencias a datos>>}
\KUItem{AR}{Memorysystemorganizationandarchitecture}{Core-Tier2}{Virtual}{}{<<Virtual memory (page table, TLB)>>}	
\KUItem{AR}{Memorysystemorganizationandarchitecture}{Core-Tier2}{Fault}{}{<<Fault handling and reliability>>}	
\KUItem{AR}{Memorysystemorganizationandarchitecture}{Core-Tier2}{Error}{SFReliabilitythroughRedundancy,SFReliabilitythroughRedundancy}{<<Error coding, data compression, and data integrity>>}	
	
\KU{AR}{Interfacingandcommunication}{<<Interfacing and communication>>}{}{0}{1}	
\KUDescription{AR}{Interfacingandcommunication}{<<\xref{OSOverviewofOperatingSystems}Knowledge Area for a discussion of the operating system view of input/output processing and management. The focus here is on the hardware mechanisms for supporting device interfacing and processor-to-processor communications.>>}	
\KUItem{AR}{Interfacingandcommunication}{Core-Tier2}{I}{}{<<I/O fundamentals: handshaking, buffering, programmed I/O, interrupt-driven I/O >>}	\LO{AR}{Interfacingandcommunication}{Core-Tier2}{Familiarity}{ExplainHowUsed}{<<Explicar como las interrupciones son aplicadas para implementar control de entrada-salida y transferencia de datos>>}
\KUItem{AR}{Interfacingandcommunication}{Core-Tier2}{Interrupt}{}{<<Interrupt structures: vectored and prioritized, interrupt acknowledgment >>}	\LO{AR}{Interfacingandcommunication}{Core-Tier2}{Familiarity}{IdentifyVarious}{<<Identificar diversos tipos de buses en un sistema computacional>>}
\KUItem{AR}{Interfacingandcommunication}{Core-Tier2}{External}{}{<<External storage, physical organization, and drives >>}	\LO{AR}{Interfacingandcommunication}{Core-Tier2}{Familiarity}{DescribeData}{<<Describir el acceso a datos desde una unidad de disco magnético >>}
\KUItem{AR}{Interfacingandcommunication}{Core-Tier2}{Buses}{}{<<Buses: bus protocols, arbitration, direct-memory access (DMA)>>}	\LO{AR}{Interfacingandcommunication}{Core-Tier2}{Familiarity}{Compare}{<<Comparar organizaciones de red conocidas como organizaciones en bus/Ethernet, en anillo y organizaciones conmutadas versus ruteadas>>}
\KUItem{AR}{Interfacingandcommunication}{Core-Tier2}{Introduction}{}{<<Introduction to networks: communications networks as another layer of remote access>>}	\LO{AR}{Interfacingandcommunication}{Core-Tier2}{Familiarity}{IdentifyThe}{<<Identificar las interfaces entre capas necesarios para el acceso y presentación multimedia, desde la captura de la imagen en almacenamiento remoto, a través del transporte por una red de comunicaciones, hasta la puesta en la memoria local y la presentación final en una pantalla gráfica.>>}
\KUItem{AR}{Interfacingandcommunication}{Core-Tier2}{Multimedia}{}{<<Multimedia support >>}	\LO{AR}{Interfacingandcommunication}{Core-Tier2}{Familiarity}{DescribeTheLimitations}{<<Describir las ventajas y limitaciones de las arquitecturas RAID>>}
\KUItem{AR}{Interfacingandcommunication}{Core-Tier2}{Raid}{}{<<RAID architectures>>}	
	
\KU{AR}{Functionalorganization}{<<Functional organization>>}{}{0}{0}	
\KUDescription{AR}{Functionalorganization}{<<Note: elective for computer scientist; would be core for computer engineering curriculum.>>}	
\KUItem{AR}{Functionalorganization}{Elective}{Implementation}{}{<<Implementation of simple datapaths, including instruction pipelining, hazard detection and resolution>>}	\LO{AR}{Functionalorganization}{Elective}{Familiarity}{CompareAlternative}{<<Comparar implementaciones alternativas de ruta de datos.>>}
\KUItem{AR}{Functionalorganization}{Elective}{Control}{}{<<Control unit: hardwired realization vs. microprogrammed realization>>}	\LO{AR}{Functionalorganization}{Elective}{Familiarity}{DiscussTheControl}{<<Discutir el concepto de puntos de control y la generación de señales de control usando implementaciones a nivel de circuito o microprogramadas.>>}
\KUItem{AR}{Functionalorganization}{Elective}{Instruction}{}{<<Instruction pipelining >>}	\LO{AR}{Functionalorganization}{Elective}{Familiarity}{ExplainBasic}{<<Explicar el paralelismo a nivel de instrucciones básicas usando pipelining y los mayores riesgos que pueden ocurrir.>>}
\KUItem{AR}{Functionalorganization}{Elective}{IntroductionTo}{}{<<Introduction to instruction-level parallelism (ILP)>>}	\LO{AR}{Functionalorganization}{Elective}{Usage}{DesignAnd}{<<Diseñar e implementar un procesador completo, incluyendo ruta de datos y control.>>}
	\LO{AR}{Functionalorganization}{Elective}{Assessment}{DetermineFor}{<<Calcular la cantidad promedio de ciclos por instrucción de una implementación con procesador y sistema de memoria determinados>>}
	
\KU{AR}{Multiprocessingandalternativearchitectures}{<<Multiprocessing and alternative architectures>>}{}{0}{0}	
\KUDescription{AR}{Multiprocessingandalternativearchitectures}{<<The view here is on the hardware implementation of SIMD and MIMD architectures. \xref{PDParallelArchitecture}>>}	
\KUItem{AR}{Multiprocessingandalternativearchitectures}{Elective}{Power}{}{<<Power Law>>}	\LO{AR}{Multiprocessingandalternativearchitectures}{Elective}{Familiarity}{DiscussTheParallel}{<<Discutir el concepto de procesamiento paralelo mas allá del clásico modelo de von Neumann>>}
\KUItem{AR}{Multiprocessingandalternativearchitectures}{Elective}{Example}{}{<<Example SIMD and MIMD instruction sets and architectures>>}	\LO{AR}{Multiprocessingandalternativearchitectures}{Elective}{Familiarity}{DescribeAlternative}{<<Describir diferentes arquitecturas paralelas como SIMD y MIMD>>}
\KUItem{AR}{Multiprocessingandalternativearchitectures}{Elective}{Interconnection}{}{<<Interconnection networks (hypercube, shuffle-exchange, mesh, crossbar) >>}	\LO{AR}{Multiprocessingandalternativearchitectures}{Elective}{Familiarity}{ExplainTheInterconnection}{<<Explicar el concepto de redes de interconexión y mostrar diferentes enfoques>>}
\KUItem{AR}{Multiprocessingandalternativearchitectures}{Elective}{Shared}{}{<<Shared multiprocessor memory systems and memory consistency>>}	\LO{AR}{Multiprocessingandalternativearchitectures}{Elective}{Familiarity}{DiscussTheThat}{<<Discutir los principales cuidados en los sistemas de multiprocesamiento presentes con respecto a la gestión de memoria y describir como son tratados>>}
\KUItem{AR}{Multiprocessingandalternativearchitectures}{Elective}{Multiprocessor}{}{<<Multiprocessor cache coherence>>}	\LO{AR}{Multiprocessingandalternativearchitectures}{Elective}{Familiarity}{DescribeTheMemoryMemory}{<<Describir las diferencias entre conectores electricos en paralelo backplane,  interconexión memoria procesador y memoria remota via red, sus implicaciones para la latencia de acceso y el impacto en el  rendimiento de un programa>>}
	
\KU{AR}{Performanceenhancements}{<<Performance enhancements>>}{}{0}{0}	
\KUDescription{AR}{Performanceenhancements}{<<~>>}	
\KUItem{AR}{Performanceenhancements}{Elective}{Superscalar}{}{<<Superscalar architecture>>}	\LO{AR}{Performanceenhancements}{Elective}{Familiarity}{DescribeSuperscalar}{<<Describir las arquitecturas superescalares y sus ventajas.>>}
\KUItem{AR}{Performanceenhancements}{Elective}{Branch}{}{<<Branch prediction, Speculative execution, Out-of-order execution>>}	\LO{AR}{Performanceenhancements}{Elective}{Familiarity}{ExplainTheBranch}{<<Explicar el concepto de predicción de bifurcaciones y su utilidad.>>}
\KUItem{AR}{Performanceenhancements}{Elective}{Prefetching}{}{<<Prefetching>>}	\LO{AR}{Performanceenhancements}{Elective}{Familiarity}{Characterize}{<<Caracterizar los costos y beneficios de la precarga prefetching.>>}
\KUItem{AR}{Performanceenhancements}{Elective}{Vector}{}{<<Vector processors and GPUs>>}	\LO{AR}{Performanceenhancements}{Elective}{Familiarity}{ExplainSpeculative}{<<Explicar la ejecución especulativa e identifique las condiciones que la justifican.>>}
\KUItem{AR}{Performanceenhancements}{Elective}{Hardware}{}{<<Hardware support for multithreading>>}	\LO{AR}{Performanceenhancements}{Elective}{Familiarity}{DiscussTheThatIn}{<<Discutir las ventajas de rendimiento ofrecida en una arquitectura de multihebras junto con los factores que hacen dificil dar el maximo beneficio de estas.>>}
\KUItem{AR}{Performanceenhancements}{Elective}{Scalability}{}{<<Scalability>>}	\LO{AR}{Performanceenhancements}{Elective}{Familiarity}{DescribeTheScalability}{<<Describir la importancia de la escalabilidad en el rendimiento.>>}
\KUItem{AR}{Performanceenhancements}{Elective}{Alternative}{}{<<Alternative architectures, such as VLIW/EPIC, and Accelerators and other kinds of Special-Purpose Processors >>}	
	
\KA{CN}{<<Ciencia Computacional.>>}{}	
"\KADescription{CN}{<<Computational Science is a field of applied computer science, that is, the application of computer science to solve problems across a range of disciplines. In the book Introduction to Computational Science \cref{XXX}, the authors offer the following definition: ``the field of computational science combines computer simulation, scientific visualization, mathematical modeling, computer programming and data structures, networking, database design, symbolic computation, and high performance computing with various disciplines.” Computer science, which largely focuses on the theory, design, and implementation of algorithms for manipulating data and information, can trace its roots to the earliest devices used to assistpeople in computation over four thousand years ago. Various systems were created and used to calculate astronomical positions. Ada Lovelace’s programming achievement was intended to calculate Bernoulli numbers. In the late nineteenth century, mechanical calculators became available, and were immediately put to use by scientists. The needs of scientists and engineers for computation have long driven research and innovation in computing. As computers increase in their problemsolving power, computational science has grown in both breadth and importance. It is a discipline in its own right \cite{xxx} and is considered to be ``one of the five college majors on the rise \cite{xxx} .” An amazing assortment of sub-fields have arisenunder the umbrella of Computational Science, including computational biology, computational chemistry, computational mechanics, computational archeology, computational finance, computational sociology and computational forensics.

Some fundamental concepts of computational science are germane to every computer scientist (e.g., modeling and simulation), and computational science topics are extremely valuable components of an undergraduate program in computer science. This area offers exposure to many valuable ideas and techniques, including precision of numerical representation, error analysis, numerical techniques, parallel architectures and algorithms, modeling and simulation, information visualization, software engineering, and optimization. Topics relevant to computational science include fundamental concepts in program construction (\xref{SDFFundamentalProgrammingConcepts}), algorithm design (\xref{SDFAlgorithmsandDesign}), program testing (\xref{SDFDevelopmentMethods}), data representations (\xref{ARMachinelevelrepresentationofdata}), and basic computer architecture (\xref{ARMemorysystemorganizationandarchitecture}). At the same - 69 - time, students who take courses in this area have an opportunity to apply these techniques in a wide range of application areas, such as molecular and fluid dynamics, celestial mechanics, economics, biology, geology, medicine, and social network analysis. Many of the techniques used in these areas require advanced mathematics such as calculus, differential equations, and linear algebra. The descriptions here assume that students have acquired the needed mathematical background elsewhere. In the computational science community, the terms run, modify, and create are often used to describe levels of understanding. This chapter follows the conventions of other chapters in this volume and uses the terms familiarity, usage, and assessment.>>}"	
	
\KU{CN}{IntroductiontoModelingandSimulation}{<<Introduction to Modeling and Simulation>>}{}{1}{0}	
"\KUDescription{CN}{IntroductiontoModelingandSimulation}{<<Abstraction is a fundamental concept in computer science. A principal approach to computing is to abstract the real world, create a model that can be simulated on a machine. The roots of computer science can be traced to this approach, modeling things such as trajectories of artillery shells and the modeling cryptographic protocols, both of which pushed the development of early computing systems in the early and mid-1940’s.

Modeling and simulation of real world systems represent essential knowledge for computer scientists and provide a foundation for computational sciences. Any introduction to modeling and simulation would either include or presume an introduction to computing. In addition, a general set of modeling and simulation techniques, data visualization methods, and software testing and evaluation mechanisms are also important.>>}"	
\KUItem{CN}{IntroductiontoModelingandSimulation}{Core-Tier1}{Models}{}{<<Models as abstractions of situations>>}	\LO{CN}{IntroductiontoModelingandSimulation}{Core-Tier1}{Familiarity}{DescribeTheModeling}{<<Describir las relaciones entre modelado y simulación, por ejemplo, pensar en la simulación como un modelado dinámico.>>}
\KUItem{CN}{IntroductiontoModelingandSimulation}{Core-Tier1}{Simulations}{}{<<Simulations as dynamic modeling>>}	\LO{CN}{IntroductiontoModelingandSimulation}{Core-Tier1}{Usage}{Create}{<<Crear un modelo matemático formal, simple de una situación del mundo real y usa dicho modelo en una simulación.>>}
\KUItem{CN}{IntroductiontoModelingandSimulation}{Core-Tier1}{Simulation}{}{<<Simulation techniques and tools, such as physical simulations, human-in-the-loop guided simulations, and virtual reality>>}	\LO{CN}{IntroductiontoModelingandSimulation}{Core-Tier1}{Familiarity}{Differentiate}{<<Distinguir entre los distintos tipos de simulación, incluyendo simulaciones físicas, simulaciones guiadas por humanos, y realidad virtual.>>}
\KUItem{CN}{IntroductiontoModelingandSimulation}{Core-Tier1}{Foundational}{}{<<Foundational approaches to validating models (e.g., comparing a simulation’s output to real data or the output of another model)>>}	\LO{CN}{IntroductiontoModelingandSimulation}{Core-Tier1}{Familiarity}{DescribeSeveral}{<<Describir diversos enfoques para la validación de modelos.>>}
\KUItem{CN}{IntroductiontoModelingandSimulation}{Core-Tier1}{Presentation}{}{<<Presentation of results in a form relevant to the system being modeled>>}	\LO{CN}{IntroductiontoModelingandSimulation}{Core-Tier1}{Usage}{CreateA}{<<Crear una visualización simple de los resultados de una simulación.>>}
	
\KU{CN}{ModelingandSimulation}{<<Modeling and Simulation>>}{}{0}{0}	
\KUDescription{CN}{ModelingandSimulation}{<<~>>}	
"\KUItem{CN}{ModelingandSimulation}{Elective}{Purpose}{}{<<Purpose of modeling and simulation including optimization; supporting decision making, forecasting,
safety considerations; for training and education,>>}"	\LO{CN}{ModelingandSimulation}{Elective}{Familiarity}{ExplainAnd}{<<Explicar y dar ejemplos de los beneficios de la simulación y el modelamiento en un rango de áreas de aplicación importantes.>>}
\KUItem{CN}{ModelingandSimulation}{Elective}{Tradeoffs}{}{<<Tradeoffs including performance, accuracy, validity, and complexity>>}	\LO{CN}{ModelingandSimulation}{Elective}{Usage}{DemonstrateThe}{<<Demostrar la habilidad para aplicar las técnicas de modelamiento y simulación a un rango de áreas problemáticas.>>}
"\KUItem{CN}{ModelingandSimulation}{Elective}{The}{}{<<The simulation process; identification of key characteristics or behaviors, simplifying assumptions;
validation of outcomes>>}"	\LO{CN}{ModelingandSimulation}{Elective}{Familiarity}{ExplainTheConcepts}{<<Explicar los constructores y conceptos de un enfoque de modelo en particular.>>}
"\KUItem{CN}{ModelingandSimulation}{Elective}{Model}{}{<<Model building: use of mathematical formulas or equations, graphs, constraints; methodologies and
techniques; use of time stepping for dynamic systems>>}"	\LO{CN}{ModelingandSimulation}{Elective}{Assessment}{ExplainTheValidation}{<<Explicar la diferencia entre verificación y validación de un modelo; demostrar la diferencia con ejemplos específicos.>>}
"\KUItem{CN}{ModelingandSimulation}{Elective}{Formal}{}{<<Formal models and modeling techniques: mathematical descriptions involving simplifying assumptions
and avoiding detail. Examples of techniques include:
\begin{subtopics}
\item Monte Carlo methods
\item Stochastic processes
\item Queuing theory
\item Petri nets and colored Petri nets
\item Graph structures such as directed graphs, trees, networks
\item Games, game theory, the modeling of things using game theory
\item Linear programming and its extensions
\item Dynamic programming
\item Differential equations: ODE, PDE
\item Non-linear techniques
\item State spaces and transitions
\end{subtopics}>>}"	\LO{CN}{ModelingandSimulation}{Elective}{Assessment}{Verify}{<<Verificar y validar el resultado de una simulación>>}
"\KUItem{CN}{ModelingandSimulation}{Elective}{Assessing}{}{<<Assessing and evaluating models and simulations in a variety of contexts; verification and validation of
models and simulations>>}"	\LO{CN}{ModelingandSimulation}{Elective}{Assessment}{EvaluateA}{<<Evaluar una simulación destacando sus beneficios y debilidades>>}
"\KUItem{CN}{ModelingandSimulation}{Elective}{Important}{}{<<Important application areas including health care and diagnostics, economics and finance, city and urban
planning, science, and engineering>>}"	\LO{CN}{ModelingandSimulation}{Elective}{Assessment}{Choose}{<<Escoger una propuesta de modelado apropiada para un determinado problema o situación>>}
\KUItem{CN}{ModelingandSimulation}{Elective}{Software}{}{<<Software in support of simulation and modeling; packages, languages>>}	\LO{CN}{ModelingandSimulation}{Elective}{Assessment}{CompareResults}{<<Comparar resultados de diferentes simulaciones del mismo fenómeno y explicar cualquier diferencia>>}
	\LO{CN}{ModelingandSimulation}{Elective}{Assessment}{Infer}{<<Deducir el comportamiento de un sistema a partir de los resultados de simulación del sistema>>}
	\LO{CN}{ModelingandSimulation}{Elective}{Assessment}{Extend}{<<Extender o adaptar un modelo existente a nuevas situaciones>>}
	
\KU{CN}{Processing}{<<Processing>>}{}{0}{0}	
\KUDescription{CN}{Processing}{<<The processing topic area includes numerous topics from other knowledge areas. Specifically, coverage of processing should include a discussion of hardware architectures, including parallel systems, memory hierarchies, and interconnections among processors. These are covered in AR/Interfacing and Communication, AR/Multiprocessing and Alternative Architectures, AR/Performance Enhancements.>>}	
"\KUItem{CN}{Processing}{Elective}{Fundamental}{}{<<Fundamental programming concepts: 
\begin{subtopics} 
\item The concept of an algorithm consisting of a finite number of well-defined steps, each of which completes in a finite amount of time, as does the entire process. \item Examples of well-known algorithms such as sorting and searching. 
\item The concept of analysis as understanding what the problem is really asking, how a problem can be approached using an algorithm, and how information is represented so that a machine can process it. 
\item The development or identification of a workflow. 
\item The process of converting an algorithm to machine-executable code. 
\item Software processes including lifecycle models, requirements, design, implementation, verification and maintenance. 
\item Machine representation of data computer arithmetic.
\end{subtopics}>>}"	\LO{CN}{Processing}{Elective}{Familiarity}{ExplainTheDefining}{<<Explicar las características y definir las propiedades de los algoritmos y como se relacionan con el procesamiento de la maquina.>>}
"\KUItem{CN}{Processing}{Elective}{Numerical}{}{<<Numerical methods 
\begin{subtopics}
\item Algorithms for numerically fitting data (e.g., Newton’s method)
\item Architectures for numerical computation, including parallel architectures
\end{subtopics}>>}"	\LO{CN}{Processing}{Elective}{Assessment}{Analyze}{<<Analizar declaraciones simples de problemas para identificar información relevante y seleccionar el procedimiento apropiado para resolver el problema.>>}
"\KUItem{CN}{Processing}{Elective}{FundamentalProperties}{}{<<Fundamental properties of parallel and distributed computation:
\begin{subtopics}
\item Bandwidth.
\item Latency.
\item Scalability.
\item Granularity.
\item Parallelism including task, data, and event parallelism.
\item Parallel architectures including processor architectures, memory and caching.
\item Parallel programming paradigms including threading, message passing, event driven techniques,
parallel software architectures, and MapReduce.
\item Grid computing.
\item The impact of architecture on computational time.
\item Total time to science curve for parallelism: continuum of things.
\end{subtopics}>>}"	\LO{CN}{Processing}{Elective}{Familiarity}{IdentifyOr}{<<Identificar o bosquejar un flujo de trabajo para un proceso computacional existente tal como la creación de un grafo basado en datos experimentales.>>}
\KUItem{CN}{Processing}{Elective}{Computing}{}{<<Computing costs, e.g., the cost of re-computing a value vs. the cost of storing and lookup. >>}	\LO{CN}{Processing}{Elective}{Familiarity}{DescribeTheConverting}{<<Describir el proceso de convertir un algoritmo a código maquina ejectuable.>>}
	\LO{CN}{Processing}{Elective}{Familiarity}{SummarizeThe}{<<Resumir las fases del desarrollo de software y comparar varios ciclos de vida en comín.>>}
	\LO{CN}{Processing}{Elective}{Familiarity}{ExplainHowRepresented}{<<Explicar como los datos son representados en una máquina. Comparar representaciones de números enteros a numeros flotantes. Describir underflow, overflow, redondeo, y truncamiento de errores en la representación de datos.>>}
	\LO{CN}{Processing}{Elective}{Usage}{Apply}{<<Aplicar algoritmos numéricos estándar para resolver ecuaciones diferenciales ordinarias y parciales. Usar sistemas computaciones para resolver sistemas de ecuaciones.>>}
	\LO{CN}{Processing}{Elective}{Familiarity}{DescribeTheOfScalability}{<<Describir las propiedades básicas de ancho de banda, latencia, escalabilidad y granularidad.>>}
	\LO{CN}{Processing}{Elective}{Familiarity}{DescribeTheParallelism}{<<Describir los niveles de paralelismo incluyendo tareas, datos, y eventos de paralelismo.>>}
	\LO{CN}{Processing}{Elective}{Assessment}{CompareAnd}{<<Comparar y contrastar paradigmas de programación paralela reconociendo las fortalezas y debilidades de cada una.>>}
	\LO{CN}{Processing}{Elective}{Familiarity}{IdentifyTheCorrectness}{<<Identificar los problemas que afectan la corrección y eficiencia de un cálculo.>>}
	\LO{CN}{Processing}{Elective}{Usage}{DesignCode}{<<Diseñar, codificar, probar y depurar programas para un cálculo paralelo.>>}
	
\KU{CN}{InteractiveVisualization}{<<Interactive Visualization>>}{}{0}{0}	
"\KUDescription{CN}{InteractiveVisualization}{<<This sub-area is related to modeling and simulation. Most topics are discussed in detail in other knowledge areas in this document. There are many ways to present data and information, including immersion, realism, variable perspectives; haptics and heads-up displays, sonification, and gesture mapping.
 
Interactive visualization in general requires understanding of human perception (GV/Basics); graphics pipelines, geometric representationsand data structures (\xref{GV/Fundamental Concepts}); 2D and 3D rendering, surface and volume rendering (\xref{GV/Rendering, GV/Modeling}, and \xref{GV/Advanced Rendering}); and the use of APIs for developing user interfaces using standard input components such as menus, sliders, and buttons; and standard output components for data display, including charts, graphs, tables, and histograms (\xref{HCI/GUI Construction}, \xref{HCI/GUI Programming}).>>}"	
\KUItem{CN}{InteractiveVisualization}{Elective}{Principles}{}{<<Principles of data visualization>>}	\LO{CN}{InteractiveVisualization}{Elective}{Assessment}{CompareCommon}{<<Comparar los mecanismos de interfaz de computadora comunes con respecto a la facilidad de uso, facilidad de aprendizaje, y costo.>>}
\KUItem{CN}{InteractiveVisualization}{Elective}{Graphing}{}{<<Graphing and visualization algorithms >>}	\LO{CN}{InteractiveVisualization}{Elective}{Usage}{UseStandard}{<<Usar APIs estándar y herramientas para crear representaciones visuales de datos, incluyendo grafos, gráficos, tablas, e histogramas.>>}
\KUItem{CN}{InteractiveVisualization}{Elective}{Image}{}{<<Image processing techniques >>}	\LO{CN}{InteractiveVisualization}{Elective}{Familiarity}{DescribeSeveralUsing}{<<Describir varios enfoques para usar una computadora como un medio para interactuar y procesar datos.>>}
\KUItem{CN}{InteractiveVisualization}{Elective}{Scalability}{}{<<Scalability concerns>>}	\LO{CN}{InteractiveVisualization}{Elective}{Assessment}{Extract}{<<Extraér información util de un conjunto de datos.>>}
	\LO{CN}{InteractiveVisualization}{Elective}{Assessment}{AnalyzeAnd}{<<Analizar y seleccionar técnicas visuales para problemas específicos.>>}
	\LO{CN}{InteractiveVisualization}{Elective}{Familiarity}{DescribeIssues}{<<Describir problemas relacionados con la ampliación de análisis de datos, desde pequeñas a grandes conjuntos de datos.>>}
	
\KU{CN}{DataInformationandKnowledge}{<<Data, Information, and Knowledge>>}{}{0}{0}	
\KUDescription{CN}{DataInformationandKnowledge}{<<Many topics are discussed in detail in other knowledge areas in this document, specifically Information Management (\xrefTextAndPage{IMInformationManagementConcepts}, \xrefTextAndPage{IMDatabaseSystems}, and \xrefTextAndPage{IMDataModeling}), Algorithms and Complexity (\xrefTextAndPage{ALBasicAnalysis}, \xrefTextAndPage{ALFundamentalDataStructuresandAlgorithms}), and Fundamentos de Desarrollo de Software(\xrefTextAndPage{SDFFundamentalProgrammingConcepts}, \xrefTextAndPage{SDFDevelopmentMethods}).>>}	
\KUItem{CN}{DataInformationandKnowledge}{Elective}{Content}{}{<<Content management models, frameworks, systems, design methods (as in IM. Information Management) >>}	\LO{CN}{DataInformationandKnowledge}{Elective}{Assessment}{IdentifyAll}{<<Identificar todos los datos, información y elementos de conocimiento y organizaciones afines, para una aplicación de ciencia computacional.>>}
\KUItem{CN}{DataInformationandKnowledge}{Elective}{Digital}{}{<<Digital representations of content including numbers, text, images (e.g., raster and vector), video (e.g., QuickTime, MPEG2, MPEG4), audio (e.g., written score, MIDI, sampled digitized sound track) and animations; complex/composite/aggregate objects; FRBR>>}	\LO{CN}{DataInformationandKnowledge}{Elective}{Familiarity}{DescribeHowData}{<<Describir cómo representar datos e información para su procesamiento.>>}
"\KUItem{CN}{DataInformationandKnowledge}{Elective}{DigitalContent}{}{<<Digital content creation/capture and preservation, including digitization, sampling, compression, 
conversion, transformation/translation, migration/emulation, crawling, harvesting>>}"	\LO{CN}{DataInformationandKnowledge}{Elective}{Familiarity}{DescribeTypical}{<<Describir los requisitos típicos de usuario con respecto a los datos, información y conocimiento.>>}
"\KUItem{CN}{DataInformationandKnowledge}{Elective}{ContentStructure}{}{<<Content structure / management, including digital libraries and static/dynamic/stream aspects for:
\begin{subtopics}
\item Data: data structures, databases
\item Information: document collections, multimedia pools, hyperbases (hypertext, hypermedia), catalogs, repositories
\item Knowledge: ontologies, triple stores, semantic networks, rules
\end{subtopics}>>}"	\LO{CN}{DataInformationandKnowledge}{Elective}{Assessment}{SelectA}{<<Seleccione una adecuada implementación del sistema o el software para gestionar los datos, información y conocimiento.>>}
"\KUItem{CN}{DataInformationandKnowledge}{Elective}{Processing}{}{<<Processing and pattern recognition, including indexing, searching (including: queries and query languages; 
central / federated / P2P), retrieving, clustering, classifying/categorizing, analyzing/mining/extracting, 
rendering, reporting, handling transactions>>}"	\LO{CN}{DataInformationandKnowledge}{Elective}{Familiarity}{ListAnd}{<<Listar y describir los informes, transacciones y otros procesos necesarios para una aplicación de la ciencia computacional.>>}
"\KUItem{CN}{DataInformationandKnowledge}{Elective}{User}{}{<<User / society support for presentation and interaction, including browse, search, filter, route, visualize, 
share, collaborate, rate, annotate, personalize, recommend>>}"	\LO{CN}{DataInformationandKnowledge}{Elective}{Assessment}{CompareAndManagement}{<<Comparar y contrastar el manejo de la base de datos, recuperación de información, y sistemas de bibliotecas digitales en relación con el manejo de las aplicaciones típicas de la ciencia computacional.>>}
\KUItem{CN}{DataInformationandKnowledge}{Elective}{Modeling}{}{<<Modeling, design, logical and physical implementation, using relevant systems/software>>}	\LO{CN}{DataInformationandKnowledge}{Elective}{Usage}{DesignAFor}{<<Diseñar una biblioteca digital para algunos usuarios/sociaedades de la ciencia computacional, con contenido y servicios adecuados.>>}
	
\KU{CN}{NumericalAnalysis}{<<Numerical Analysis>>}{}{0}{0}	
\KUDescription{CN}{NumericalAnalysis}{<<\xref{ARMachinelevelrepresentationofdata}>>}	
\KUItem{CN}{NumericalAnalysis}{Elective}{Error}{}{<<Error, stability, convergence, including truncation and round-of>>}	\LO{CN}{NumericalAnalysis}{Elective}{Familiarity}{DefineError}{<<Definir conceptos de error, estabilidad, precisión de máquina y la inexactitud de las aproximaciones computacionales>>}
\KUItem{CN}{NumericalAnalysis}{Elective}{Function}{}{<<Function approximation including Taylor’s series, interpolation, extrapolation, and regression>>}	\LO{CN}{NumericalAnalysis}{Elective}{Usage}{ImplementTaylor}{<<Implementar series de Taylor, algoritmos de interpolación, extrapolación y regresión para aproximación de funciones.>>}
\KUItem{CN}{NumericalAnalysis}{Elective}{Numerical}{}{<<Numerical differentiation and integration (Simpson’s Rule, explicit and implicit methods) >>}	\LO{CN}{NumericalAnalysis}{Elective}{Usage}{ImplementAlgorithms}{<<Implementar algoritmos de diferenciación e integración>>}
\KUItem{CN}{NumericalAnalysis}{Elective}{Differential}{}{<<Differential equations (Euler’s Method, finite differences) >>}	\LO{CN}{NumericalAnalysis}{Elective}{Usage}{ImplementAlgorithmsDifferential}{<<Implementar algoritmos para solucionar ecuaciones diferenciales>>}
	
\KA{DS}{<<Estructuras Discretas>>}{}	
"\KADescription{DS}{<<Discrete structures are foundational material for computer science. By foundational we mean that relatively few computer scientists will be working primarily on discrete structures, but that many other areas of computer science require the ability to work with concepts from discrete structures. Discrete structures include important material from such areas as set theory, logic, graph theory, and probability theory. 

The material in discrete structures is pervasive in the areas of data structures and algorithms but appears elsewhere in computer science as well. For example, an ability to create and understand a proof—either a formal symbolic proof or a less formal but still mathematically rigorous argument—is important in virtually every area of computer science, including (to name just a few) formal specification, verification, databases, and cryptography. Graph theory concepts are used in networks, operating systems, and compilers. Set theory concepts are used in software engineering and in databases. Probability theory is used in intelligent systems, networking, and a number of computing applications. 

Given that discrete structures serves as a foundation for many other areas in computing, it is worth noting that the boundary between discrete structures and other areas, particularly Algorithms and Complexity, Software Development Fundamentals, Programming Languages, and Intelligent Systems, may not always be crisp. Indeed, different institutions may choose to organize the courses in which they cover this material in very different ways. Some institutions may cover these topics in one or two focused courses with titles like ""discrete structures"" or ""discrete mathematics,""whereas others may integrate these topics in courses on programming, algorithms, and/or artificial intelligence. Combinations of these approaches are also prevalent (e.g., covering many of these topics in a single focused introductory course and covering the remaining topics in more advanced topical courses).>>}"	
	
\KU{DS}{SetsRelationsandFunctions}{<<Sets, Relations, and Functions>>}{}{4}{0}	
\KUDescription{DS}{SetsRelationsandFunctions}{<<~>>}	
"\KUItem{DS}{SetsRelationsandFunctions}{Core-Tier1}{Sets}{}{<<Sets
\begin{subtopics}
\item Venn diagrams
\item Union, intersection, complement
\item Cartesian product
\item Power sets
\item Cardinality of finite sets
\end{subtopics}>>}"	\LO{DS}{SetsRelationsandFunctions}{Core-Tier1}{Familiarity}{ExplainWith}{<<Explicar con ejemplos la terminología básica de funciones, relaciones y conjuntos.>>}
"\KUItem{DS}{SetsRelationsandFunctions}{Core-Tier1}{Relations}{}{<<Relations
\begin{subtopics}
\item Reflexivity, symmetry, transitivity
\item Equivalence relations, partial orders
\end{subtopics}>>}"	\LO{DS}{SetsRelationsandFunctions}{Core-Tier1}{Usage}{PerformThe}{<<Realizar las operaciones asociadas con conjuntos, funciones y relaciones.>>}
"\KUItem{DS}{SetsRelationsandFunctions}{Core-Tier1}{Functions}{}{<<Functions
\begin{subtopics}
\item Surjections, injections, bijections
\item Inverses
\item Composition
\end{subtopics}>>}"	\LO{DS}{SetsRelationsandFunctions}{Core-Tier1}{Assessment}{Relate}{<<Relacionar ejemplos prácticos para conjuntos funciones o modelos de relación apropiados e interpretar la asociación de operaciones y terminología en contexto.>>}
	
\KU{DS}{BasicLogic}{<<Basic Logic>>}{}{9}{0}	
\KUDescription{DS}{BasicLogic}{<<~>>}	
\KUItem{DS}{BasicLogic}{Core-Tier1}{Propositional}{ISBasicKnowledgeRepresentationandReasoning,ISBasicKnowledgeRepresentationandReasoning}{<<Propositional logic>>}	\LO{DS}{BasicLogic}{Core-Tier1}{Usage}{ConvertLogical}{<<Convertir declaraciones lógicas desde el lenguaje informal a expresiones de lógica proposicional y de predicados.>>}
\KUItem{DS}{BasicLogic}{Core-Tier1}{Logical}{}{<<Logical connectives >>}	\LO{DS}{BasicLogic}{Core-Tier1}{Usage}{ApplyFormal}{<<Aplicar métodos formales de simbolismo proposicional y lógica de predicados, como el cálculo de la validez de formulas y cálculo de formas normales.>>}
\KUItem{DS}{BasicLogic}{Core-Tier1}{Truth}{}{<<Truth tables>>}	\LO{DS}{BasicLogic}{Core-Tier1}{Usage}{UseThe}{<<Usar reglas de inferencia para construir demostraciones en lógica proposicional y de predicados.>>}
\KUItem{DS}{BasicLogic}{Core-Tier1}{Normal}{}{<<Normal forms (conjunctive and disjunctive) >>}	\LO{DS}{BasicLogic}{Core-Tier1}{Usage}{DescribeHowCan}{<<Describir como la lógica simbólica puede ser usada para modelar situaciones o aplicaciones de la vida real, incluidos aquellos planteados en el contexto computacional como análisis de software (ejm. programas correctores ), consulta de base de datos y algoritmos.>>}
\KUItem{DS}{BasicLogic}{Core-Tier1}{Validity}{}{<<Validity of well-formed formula>>}	\LO{DS}{BasicLogic}{Core-Tier1}{Usage}{ApplyFormalAnd}{<<Aplicar demostraciones de lógica formal y/o informal, pero rigurosa, razonamiento lógico para problemas reales, como la predicción del comportamiento de software o solución de problemas tales como rompecabezas.>>}
\KUItem{DS}{BasicLogic}{Core-Tier1}{PropositionalInference}{}{<<Propositional inference rules (concepts of modus ponens and modus tollens) >>}	\LO{DS}{BasicLogic}{Core-Tier1}{Familiarity}{DescribeTheLimitationsAnd}{<<Describir las fortalezas y limitaciones de la lógica proposicional y de predicados.>>}
"\KUItem{DS}{BasicLogic}{Core-Tier1}{Predicate}{}{<<Predicate logic
\begin{subtopics}
\item Universal and existential quantification
\end{subtopics}>>}"	
\KUItem{DS}{BasicLogic}{Core-Tier1}{Limitations}{}{<<Limitations of propositional and predicate logic (e.g., expressiveness issues)>>}	
	
\KU{DS}{ProofTechniques}{<<Proof Techniques>>}{}{10}{1}	
\KUDescription{DS}{ProofTechniques}{<<~>>}	
\KUItem{DS}{ProofTechniques}{Core-Tier1}{Notions}{}{<<Notions of implication, equivalence, converse, inverse, contrapositive, negation, and contradiction >>}	\LO{DS}{ProofTechniques}{Core-Tier1}{Familiarity}{IdentifyTheUsed}{<<Identificar la técnica de demostración utilizada en una demostración dada.>>}
\KUItem{DS}{ProofTechniques}{Core-Tier1}{The}{}{<<The structure of mathematical proofs>>}	\LO{DS}{ProofTechniques}{Core-Tier1}{Usage}{Outline}{<<Describir la estructura básica de cada técnica de demostración (demostración directa, demostración por contradicción e inducción) descritas en esta unidad.>>}
\KUItem{DS}{ProofTechniques}{Core-Tier1}{Direct}{}{<<Direct proofs >>}	\LO{DS}{ProofTechniques}{Core-Tier1}{Usage}{ApplyEach}{<<Aplicar las técnicas de demostración (demostración directa, demostración por contradicción e inducción) correctamente en la construcción de un argumento solido.>>}
\KUItem{DS}{ProofTechniques}{Core-Tier1}{Disproving}{}{<<Disproving by counterexample>>}	\LO{DS}{ProofTechniques}{Core-Tier1}{Assessment}{DetermineWhich}{<<Determine que tipo de demostración es la mejor para un problema dado.>>}
\KUItem{DS}{ProofTechniques}{Core-Tier1}{Proof}{}{<<Proof by contradiction >>}	\LO{DS}{ProofTechniques}{Core-Tier1}{Assessment}{ExplainTheIdeas}{<<Explicar el paralelismo entre ideas matemáticas y/o inducción estructural para la recursión y definir estructuras recursivamente.>>}
\KUItem{DS}{ProofTechniques}{Core-Tier1}{Induction}{}{<<Induction over natural numbers>>}	\LO{DS}{ProofTechniques}{Core-Tier1}{Assessment}{ExplainTheWeak}{<<Explicar la relación entre inducción fuerte y débil y dar ejemplos del apropiado uso de cada uno.>>}
\KUItem{DS}{ProofTechniques}{Core-Tier1}{Structural}{}{<<Structural induction>>}	\LO{DS}{ProofTechniques}{Core-Tier2}{Familiarity}{StateThe}{<<Enunciar el principio del buen-orden y su relación con la inducción matemática.>>}
\KUItem{DS}{ProofTechniques}{Core-Tier1}{Weak}{}{<<Weak and strong induction (i.e., First and Second Principle of Induction)>>}	
\KUItem{DS}{ProofTechniques}{Core-Tier1}{Recursive}{}{<<Recursive mathematical definitions>>}	
\KUItem{DS}{ProofTechniques}{Core-Tier2}{Well}{}{<<Well orderings>>}	
	
\KU{DS}{BasicsofCounting}{<<Basics of Counting>>}{}{5}{0}	
\KUDescription{DS}{BasicsofCounting}{<<~>>}	
"\KUItem{DS}{BasicsofCounting}{Core-Tier1}{Counting}{}{<<Counting arguments 
\begin{subtopics}
\item Set cardinality and counting
\item Sum and product rule
\item Inclusion-exclusion principle
\item Arithmetic and geometric progressions
\end{subtopics}>>}"	\LO{DS}{BasicsofCounting}{Core-Tier1}{Usage}{ApplyCounting}{<<Aplicar argumentos de conteo, incluyendo las reglas del producto y de la suma, principio de inclusión-exclusión y progresiones aritméticas/geométricas.>>}
\KUItem{DS}{BasicsofCounting}{Core-Tier1}{ThePigeonhole}{}{<<The pigeonhole principle>>}	\LO{DS}{BasicsofCounting}{Core-Tier1}{Usage}{ApplyThe}{<<Aplicar el principio de las casillas en el contexto de una demostración formal.>>}
"\KUItem{DS}{BasicsofCounting}{Core-Tier1}{Permutations}{}{<<Permutations and combinations 
\begin{subtopics}
\item Basic definitions
\item Pascal’s identity
\item The binomial theorem
\end{subtopics}>>}"	\LO{DS}{BasicsofCounting}{Core-Tier1}{Usage}{ComputePermutations}{<<Calcular permutaciones y combinaciones en un conjunto, e interpreta su significado en el contexto de una aplicación en particular.>>}
"\KUItem{DS}{BasicsofCounting}{Core-Tier1}{Solving}{ALBasicAnalysis,ALBasicAnalysis}{<<Solving recurrence relations
\begin{subtopics}
\item An example of a simple recurrence relation, such as Fibonacci numbers
\item Other examples, showing a variety of solutions
\end{subtopics}>>}"	\LO{DS}{BasicsofCounting}{Core-Tier1}{Usage}{Map}{<<Mapear aplicaciones del mundo real a formalismos de conteo adecuados, como el determinar el número de formas de acomodar a un conjunto de personas alrededor de una mesa, sujeto a restricciones en la disposición de los asientos, o en el número de maneras de determinar ciertas manos en juegos de cartas (ejm. una casa llena).>>}
\KUItem{DS}{BasicsofCounting}{Core-Tier1}{Basic}{}{<<Basic modular arithmetic >>}	\LO{DS}{BasicsofCounting}{Core-Tier1}{Usage}{SolveA}{<<Resolver una variedad de relaciones de recurrencia básicas.>>}
	\LO{DS}{BasicsofCounting}{Core-Tier1}{Usage}{AnalyzeA}{<<Analizar un problema para determinar las relaciones de recurrencia implícitas.>>}
	\LO{DS}{BasicsofCounting}{Core-Tier1}{Usage}{PerformComputations}{<<Realizar cálculos que involucran aritmética modular.>>}
	
\KU{DS}{GraphsandTrees}{<<Graphs and Trees>>}{}{3}{1}	
\KUDescription{DS}{GraphsandTrees}{<<See: \xref{ALFundamentalDataStructuresandAlgorithms} , especially with relation to graph traversal strategies . >>}	
"\KUItem{DS}{GraphsandTrees}{Core-Tier1}{Trees}{}{<<Trees
\begin{subtopics}
\item Properties 
\item Traversal strategies 
\end{subtopics}>>}"	\LO{DS}{GraphsandTrees}{Core-Tier1}{Familiarity}{Illustrate}{<<Ilustrar mediante ejemplos la terminología básica de teoría de grafos, y de alguna de las propiedades y casos especiales de cada tipo de grafos/árboles.>>}
\KUItem{DS}{GraphsandTrees}{Core-Tier1}{Undirected}{}{<<Undirected graphs>>}	\LO{DS}{GraphsandTrees}{Core-Tier1}{Usage}{DemonstrateDifferent}{<<Demostrar diversos métodos de recorrer árboles y grafos, incluyendo recorridos pre, post e inorden de árboles.>>}
\KUItem{DS}{GraphsandTrees}{Core-Tier1}{Directed}{}{<<Directed graphs>>}	\LO{DS}{GraphsandTrees}{Core-Tier1}{Usage}{Model}{<<Modelar una variedad de problemas del mundo real en ciencia de la computación usando formas adecuadas de grafos y árboles, como son la representación de una topología de red o la organización jerárquica de un sistema de archivos.>>}
\KUItem{DS}{GraphsandTrees}{Core-Tier1}{Weighted}{}{<<Weighted graphs>>}	\LO{DS}{GraphsandTrees}{Core-Tier1}{Usage}{ShowHow}{<<Demuestrar como los conceptos de grafos y árboles aparecen en estructuras de datos, algoritmos, técnicas de prueba (inducción estructurada), y conteos.>>}
\KUItem{DS}{GraphsandTrees}{Core-Tier2}{Spanning}{}{<<Spanning trees/forests >>}	\LO{DS}{GraphsandTrees}{Core-Tier2}{Usage}{ExplainHowA}{<<Explicar como construir un árbol de expansión de un grafo.>>}
\KUItem{DS}{GraphsandTrees}{Core-Tier2}{Graph}{}{<<Graph isomorphism>>}	\LO{DS}{GraphsandTrees}{Core-Tier2}{Usage}{DetermineIf}{<<Determinar si dos grafos son isomorfos.>>}
	
\KU{DS}{DiscreteProbability}{<<Discrete Probability>>}{}{6}{2}	
\KUDescription{DS}{DiscreteProbability}{<<~>>}	
\KUItem{DS}{DiscreteProbability}{Core-Tier1}{Finite}{}{<<Finite probability space, events>>}	\LO{DS}{DiscreteProbability}{Core-Tier1}{Usage}{Calculate}{<<Calcular las probablidades de eventos y el valor esperado de variables aleatorias para problemas elementales como en los juegos de azar.>>}
\KUItem{DS}{DiscreteProbability}{Core-Tier1}{Axioms}{}{<<Axioms of probability and probability measures >>}	\LO{DS}{DiscreteProbability}{Core-Tier1}{Usage}{DifferentiateBetween}{<<Distinguir entre eventos dependientes e independientes.>>}
\KUItem{DS}{DiscreteProbability}{Core-Tier1}{Conditional}{}{<<Conditional probability, Bayes’ theorem >>}	\LO{DS}{DiscreteProbability}{Core-Tier1}{Usage}{IdentifyA}{<<Identificar un caso de la distribución binomial y calcula la probabilidad usando dicha distribución.>>}
\KUItem{DS}{DiscreteProbability}{Core-Tier1}{Independence}{}{<<Independence>>}	\LO{DS}{DiscreteProbability}{Core-Tier1}{Usage}{ApplyBayes}{<<Aplicar el teorema de Bayes para determinar las probabilidades condicionales en un problema.>>}
\KUItem{DS}{DiscreteProbability}{Core-Tier1}{Integer}{}{<<Integer random variables (Bernoulli, binomial)>>}	\LO{DS}{DiscreteProbability}{Core-Tier1}{Usage}{ApplyTheProbability}{<<Aplicar herramientas de probabilidades para resolver problemas como el análisis de caso promedio en algoritmos o en el análisis de hash.>>}
\KUItem{DS}{DiscreteProbability}{Core-Tier1}{Expectation}{}{<<Expectation, including Linearity of Expectation >>}	\LO{DS}{DiscreteProbability}{Core-Tier2}{Usage}{ComputeThe}{<<Calcular la varianza para una distribución de probabilidad dada.>>}
\KUItem{DS}{DiscreteProbability}{Core-Tier2}{Variance}{}{<<Variance>>}	\LO{DS}{DiscreteProbability}{Core-Tier2}{Usage}{ExplainHowAreBe}{<<Explicar como los eventos que son independientes pueden ser condicionalmente dependientes (y vice versa) Identificar ejemplos del mundo real para estos casos.>>}
\KUItem{DS}{DiscreteProbability}{Core-Tier2}{ConditionalIndependence}{}{<<Conditional Independence >>}	
	
\KA{GV}{<<Gráficos y Visualización.>>}{}	
"\KADescription{GV}{<<Computer graphicsis the term commonly used to describe the computer generation and manipulation of images. It is the science of enabling visual communication through computation. Its uses include cartoons, film special effects, video games, medical imaging, engineering, as well as scientific, information, and knowledge visualization. Traditionally, graphics at the undergraduate level has focused on rendering, linear algebra, and phenomenological approaches. More recently, the focus has begun to include physics, numerical integration, scalability, and special-purpose hardware. In order for students to become adept at the use and generation of computer graphics, many implementation-specific issues must be addressed, such as file formats, hardware interfaces, and application program interfaces. These issues change rapidly, and the description that follows attempts to avoid being overly prescriptive about them. The area encompassed by Graphics and Visualization is divided into several interrelated fields:
\begin{subtopics}
\item Fundamentals: Computer graphics depends on an understanding of how humans use vision to perceive information and how information can be rendered on a display device. Every computer scientist should have some understanding of where and how graphics can be appropriately applied as well asthe fundamental processes involved in display rendering.
\item  Modeling: Information to be displayed must be encoded in computer memory in some form, often in the form of a mathematical specification of shape and form. 
\item Rendering: Rendering is the process of displaying the information contained in a model.
\item Animation: Animation is the rendering in a manner that makes images appear to move and the synthesis or acquisition of the time variations of models.
\item Visualization:The field of visualization seeks to determine and present underlying correlated structures and relationships in data sets from a wide variety of application areas. The prime objective of the presentation should be to communicate the information in a dataset so as to enhance understanding 
\item Computational Geometry: Computational Geometry is the study of algorithms that are stated in terms of geometry. 
\end{subtopics}

Graphics and Visualization is related to machine vision and image processing, which are found in the Intelligent Systems (IS) KA, and algorithms such as computational geometry, which are found in the Algorithms and Complexity (AL) KA. Topics in virtual reality arefound in the Human-Computer Interaction (HCI) KA.

This description assumes students are familiar with fundamental concepts of data representation, abstraction, and program implementation.>>}"	
	
\KU{GV}{FundamentalConcepts}{<<Fundamental Concepts>>}{}{2}{1}	
\KUDescription{GV}{FundamentalConcepts}{<<For nearly every computer scientist and software developer, an understanding of how humans interact with machines is essential. While these topics may be covered in a standard undergraduate graphics course, they may also be covered in introductory computer science and programming courses. Part of our motivation for including immediate and retained modes is that these modes are analogous to polling vs. event driven programming. This is a fundamental question in computer science: Is there a button object, or is there just the display of a button on the screen? Note that most of the outcomes in this section are at the knowledge level, and many of these topics are revisited in greater depth in later sections.>>}	
\KUItem{GV}{FundamentalConcepts}{Core-Tier1}{Media}{}{<<Media applications including user interfaces, audio and video editing, game engines, cad, visualization, virtual reality >>}	\LO{GV}{FundamentalConcepts}{Core-Tier1}{Familiarity}{IdentifyCommon}{<<Identificar usos comunes de presentaciones digitales de humanos (por ejemplo, computación gráfica,sonido)>>}
\KUItem{GV}{FundamentalConcepts}{Core-Tier1}{Digitization}{HCIFoundations,HCIFoundations}{<<Digitization of analog data, resolution, and the limits of human perception, e.g., pixels for visual display, dots for laser printers, and samples for audio>>}	\LO{GV}{FundamentalConcepts}{Core-Tier1}{Familiarity}{ExplainIn}{<<Explicar en términos generales cómo las señales analógicas pueden ser representadas por muestras discretas, por ejemplo,cómo las imagenes pueden ser representadas por pixeles>>}
\KUItem{GV}{FundamentalConcepts}{Core-Tier1}{Use}{HCIDesigningInteraction,HCIDesigningInteraction}{<<Use of standard APIs for the construction of UIs and display of standard media formats>>}	\LO{GV}{FundamentalConcepts}{Core-Tier1}{Usage}{ExplainHowOf}{<<Explicar cómo las limitaciones en la percepción humana afectan la selección de la representación digital de señales analógicas.>>}
\KUItem{GV}{FundamentalConcepts}{Core-Tier1}{Standard}{}{<<Standard media formats, including lossless and lossy formats>>}	\LO{GV}{FundamentalConcepts}{Core-Tier1}{Familiarity}{Construct}{<<Cronstruir una interfaz de usuario sencilla usando una API estándar.>>}
\KUItem{GV}{FundamentalConcepts}{Core-Tier2}{Additive}{}{<<Additive and subtractive color models (CMYK and RGB) and why these provide a range of colors>>}	\LO{GV}{FundamentalConcepts}{Core-Tier1}{Familiarity}{DescribeTheLossy}{<<Describir las diferencias entre técnicas de compresión de imágenes con pérdida y sin pérdida ejemplificando cómo se reflejan en formatos de archivos de imágenes conocidos como JPG, PNG, MP3, MP4, y GIF.>>}
\KUItem{GV}{FundamentalConcepts}{Core-Tier2}{Tradeoffs}{}{<<Tradeoffs between storing data and re-computing data as embodied by vector and raster representations of images>>}	\LO{GV}{FundamentalConcepts}{Core-Tier2}{Familiarity}{DescribeColor}{<<Describir modelos de color y su uso en los dispositivos de visualización de gráficos.>>}
\KUItem{GV}{FundamentalConcepts}{Core-Tier2}{Animation}{}{<<Animation as a sequence of still images >>}	\LO{GV}{FundamentalConcepts}{Core-Tier2}{Familiarity}{DescribeTheStoring}{<<Describir las ventajas y desventajas entre el almacenamiento de información vs almacenar suficiente información para reproducir la información, como en la diferencia entre el vector y la representación de la trama.>>}
\KUItem{GV}{FundamentalConcepts}{Elective}{Double}{}{<<Double buffering >>}	\LO{GV}{FundamentalConcepts}{Elective}{Familiarity}{DescribeTheOfMotion}{<<Describir los procesos básico de la producción de movimiento continuo a partir de una secuencia de cuadros discretos(algunas veces llamado it flicker fusion ).>>}
	\LO{GV}{FundamentalConcepts}{Elective}{Familiarity}{DescribeHowCanFrom}{<<Describir cómo el doble buffer puede eliminar el parpadeo de la animación>>}
	
\KU{GV}{BasicRendering}{<<Basic Rendering>>}{}{0}{0}	
\KUDescription{GV}{BasicRendering}{<<This section describes basic rendering and fundamental graphics techniques that nearly every undergraduate course in graphics will cover and that areessential for further study in graphics. Sampling and anti-aliasing are related to the effect of digitization and appear in other areas of computing, for example, in audio sampling. >>}	
\KUItem{GV}{BasicRendering}{Elective}{Rendering}{}{<<Rendering in nature, e.g., the emission and scattering of light and its relation to numerical integration>>}	\LO{GV}{BasicRendering}{Elective}{Familiarity}{DiscussTheProblem}{<<Discutir el problema de transporte de la luz y su relación con la integración numérica, es decir, se emite luz, dispersa alrededor de la escena, y es medida por el ojo.>>}
\KUItem{GV}{BasicRendering}{Elective}{Forward}{}{<<Forward and backward rendering (i.e., ray-casting and rasterization) >>}	\LO{GV}{BasicRendering}{Elective}{Familiarity}{DescribeThePipeline}{<<Describir la tubería básica gráficos y cómo el factor de representación va hacia adelante y atrás en esta.>>}
\KUItem{GV}{BasicRendering}{Elective}{Polygonal}{}{<<Polygonal representation>>}	\LO{GV}{BasicRendering}{Elective}{Usage}{CreateADisplay}{<<Crear un programa para visualizar modelos 3D de imagenes gráficas simples.>>}
\KUItem{GV}{BasicRendering}{Elective}{Basic}{}{<<Basic radiometry, similar triangles, and projection model >>}	\LO{GV}{BasicRendering}{Elective}{Usage}{Derive}{<<Derivar la perspectiva lineal de triángulos semejantes por conversión de puntos (x,y,z) a puntos (x/z, y/z, 1).>>}
\KUItem{GV}{BasicRendering}{Elective}{Affine}{}{<<Affine and coordinate system transformations >>}	\LO{GV}{BasicRendering}{Elective}{Usage}{Obtain}{<<Obtener puntos en 2-dimensiones y 3-dimensiones por aplicación de transformaciones afín.>>}
\KUItem{GV}{BasicRendering}{Elective}{Ray}{}{<<Ray tracing>>}	\LO{GV}{BasicRendering}{Elective}{Usage}{ApplyDimensional}{<<Aplicar sistema de coordenadas de 3-dimensiones y los cambios necesarios para extender las operaciones de transformación 2D para manejar las transformaciones en 3D.>>}
\KUItem{GV}{BasicRendering}{Elective}{Visibility}{}{<<Visibility and occlusion, including solutions to this problem such as depth buffering, Painter’s algorithm, and ray tracing>>}	\LO{GV}{BasicRendering}{Elective}{Assessment}{Contrast}{<<Contrastar la renderización hacia adelanate {\it forward} y hacia atras {\it backward}.>>}
\KUItem{GV}{BasicRendering}{Elective}{The}{}{<<The forward and backward rendering equation >>}	\LO{GV}{BasicRendering}{Elective}{Familiarity}{ExplainTheApplications}{<<Explicar el concepto y las aplicaciones de mapeo de texturas, muestreo y el {\it anti-aliasing}.>>}
\KUItem{GV}{BasicRendering}{Elective}{Simple}{}{<<Simple triangle rasterization >>}	\LO{GV}{BasicRendering}{Elective}{Familiarity}{ExplainTheRasterization}{<<Explicar la dualidad de rastreo de rayos/rasterización para el problema de visibilidad.>>}
\KUItem{GV}{BasicRendering}{Elective}{RenderingWith}{}{<<Rendering with a shader-based API>>}	\LO{GV}{BasicRendering}{Elective}{Usage}{ImplementSimplePerform}{<<Implementar simples procedimientos que realicen la transformación y las operaciones de recorte de imágenes simples en 2 dimensiones.>>}
\KUItem{GV}{BasicRendering}{Elective}{Texture}{}{<<Texture mapping, including minification and magnification (e.g., trilinear MIP-mapping) >>}	\LO{GV}{BasicRendering}{Elective}{Usage}{ImplementA}{<<Implementar un sencillo renderizador en tiempo real utilizando una API de rasterización (por ejemplo, OpenGL) utilizando buffers de vértices y {\it shaders}>>}
\KUItem{GV}{BasicRendering}{Elective}{Application}{}{<<Application of spatial data structures to rendering>>}	\LO{GV}{BasicRendering}{Elective}{Assessment}{CompareAndDifferent}{<<Comparar y contrastar las diferentes técnicas de renderización.>>}
\KUItem{GV}{BasicRendering}{Elective}{Sampling}{}{<<Sampling and anti-aliasing>>}	\LO{GV}{BasicRendering}{Elective}{Assessment}{ComputeSpace}{<<Calcular las necesidades de espacio en base a la resolución y codificación de color>>}
\KUItem{GV}{BasicRendering}{Elective}{Scene}{}{<<Scene graphs and the graphics pipeline >>}	\LO{GV}{BasicRendering}{Elective}{Assessment}{ComputeTime}{<<Calcular los requisitos de tiempo sobre la base de las frecuencias de actualización, técnicas de rasterización.>>}
	
\KU{GV}{GeometricModeling}{<<Geometric Modeling>>}{}{0}{0}	
\KUDescription{GV}{GeometricModeling}{<<Visualization has strong ties to the Human-Computer Interaction (HCI) knowledge area as well as Computational Science (CN). Readers should refer to the HCI and CN KAs for additional topics related to user population and interface evaluations.>>}	
\KUItem{GV}{GeometricModeling}{Elective}{BasicGeometric}{}{<<Basic geometric operations such as intersection calculation and proximity tests>>}	\LO{GV}{GeometricModeling}{Elective}{Usage}{Represent}{<<Representar curvas y superficies utilizando formas tanto implícitas y paramétricas.>>}
\KUItem{GV}{GeometricModeling}{Elective}{Volumes}{}{<<Volumes, voxels, and point-based representations >>}	\LO{GV}{GeometricModeling}{Elective}{Usage}{CreateSimple}{<<Crear modelos poliédrico simples por teselación de superficies.>>}
\KUItem{GV}{GeometricModeling}{Elective}{Parametric}{}{<<Parametric polynomial curves and surfaces>>}	\LO{GV}{GeometricModeling}{Elective}{Usage}{GenerateA}{<<Generar una representación de malla de una superficie implícita.>>}
\KUItem{GV}{GeometricModeling}{Elective}{Implicit}{}{<<Implicit representation of curves and surfaces >>}	\LO{GV}{GeometricModeling}{Elective}{Usage}{GenerateAOr}{<<Generar un modelo fractal o terreno usando un método de procedimiento.>>}
\KUItem{GV}{GeometricModeling}{Elective}{Approximation}{}{<<Approximation techniques such as polynomial curves, Bezier curves, spline curves and surfaces, and nonuniform rational basis (NURB) spines, and level set method>>}	\LO{GV}{GeometricModeling}{Elective}{Usage}{GenerateAData}{<<Generar una malla de un conjunto de puntos adquiridos por un scaner laser.>>}
\KUItem{GV}{GeometricModeling}{Elective}{Surface}{}{<<Surface representation techniques including tessellation, mesh representation, mesh fairing, and mesh generation techniques such as Delaunay triangulation, marching cubes>>}	\LO{GV}{GeometricModeling}{Elective}{Usage}{ConstructCsg}{<<Construct modelos de geometría sólida constructiva a partir de simples primitivas, tales como cubos y superficies cuádricas.>>}
\KUItem{GV}{GeometricModeling}{Elective}{Spatial}{}{<<Spatial subdivision techniques>>}	\LO{GV}{GeometricModeling}{Elective}{Assessment}{ContrastModeling}{<<Contrastar métodos de modelización con respecto a espacio y tiempo de complejidad y calidad de imagen.>>}
\KUItem{GV}{GeometricModeling}{Elective}{Procedural}{}{<<Procedural models such as fractals, generative modeling, and L-systems>>}	
\KUItem{GV}{GeometricModeling}{Elective}{Graftals}{}{<<Graftals, cross referenced with programming languages (grammars to generated pictures)>>}	
\KUItem{GV}{GeometricModeling}{Elective}{Elastically}{}{<<Elastically deformable and freeform deformable models>>}	
\KUItem{GV}{GeometricModeling}{Elective}{Subdivision}{}{<<Subdivision surfaces>>}	
\KUItem{GV}{GeometricModeling}{Elective}{Multiresolution}{}{<<Multiresolution modeling>>}	
\KUItem{GV}{GeometricModeling}{Elective}{Reconstruction}{}{<<Reconstruction>>}	
\KUItem{GV}{GeometricModeling}{Elective}{Constructive}{}{<<Constructive Solid Geometry (CSG) representation>>}	
	
\KU{GV}{AdvancedRendering}{<<Advanced Rendering>>}{}{0}{0}	
\KUDescription{GV}{AdvancedRendering}{<<~>>}	
"\KUItem{GV}{AdvancedRendering}{Elective}{Solutions}{}{<<Solutions and approximations to the rendering equation, for example: 
\begin{subtopics} 
\item Distribution ray tracing and path tracing 
\item Photon mapping 
\item Bidirectional path tracing 
\item Reyes (micropolygon) rendering 
\item Metropolis light transport 
\end{subtopics}>>}"	\LO{GV}{AdvancedRendering}{Elective}{Assessment}{DemonstrateHowEstimates}{<<Demostrar como un algoritmo calcula una solución a la ecuación de renderización.>>}
\KUItem{GV}{AdvancedRendering}{Elective}{Time}{}{<<Time (motion blur), lens position (focus), and continuous frequency (color) and their impact on rendering>>}	\LO{GV}{AdvancedRendering}{Elective}{Assessment}{ProveThe}{<<Demostrar las propiedades de un algoritmo de renderización, por ejemplo, completo, consistente, e imparcial.>>}
\KUItem{GV}{AdvancedRendering}{Elective}{Shadow}{}{<<Shadow mapping>>}	\LO{GV}{AdvancedRendering}{Elective}{Assessment}{AnalyzeThe}{<<Analizar las demandas de ancho de banda y cálculo de un simple algoritmo.>>}
\KUItem{GV}{AdvancedRendering}{Elective}{Occlusion}{}{<<Occlusion culling>>}	\LO{GV}{AdvancedRendering}{Elective}{Usage}{ImplementAShading}{<<Implementar un algoritmo no trivial de sombreado(por ejemplo, sombreado caricaturizado({\it toon shading}), mapas de sombras en cascada({\it cascaded shadow maps}) ) bajo una APi de rasterización.>>}
\KUItem{GV}{AdvancedRendering}{Elective}{Bidirectional}{}{<<Bidirectional Scattering Distribution function (BSDF) theory and microfacets >>}	\LO{GV}{AdvancedRendering}{Elective}{Familiarity}{DiscussHow}{<<Discutir como una técnica artística particular puede ser implementada en un renderizador.>>}
\KUItem{GV}{AdvancedRendering}{Elective}{Subsurface}{}{<<Subsurface scattering>>}	\LO{GV}{AdvancedRendering}{Elective}{Familiarity}{ExplainHowThe}{<<Explicar como reconocer las técnicas gráficas usadas para crear una imagen en particular.>>}
\KUItem{GV}{AdvancedRendering}{Elective}{Area}{}{<<Area light sources>>}	\LO{GV}{AdvancedRendering}{Elective}{Usage}{ImplementAny}{<<Implementar cualquiera de las técnicas gráficas especificadas utilizando un sistema gráfico primitivo a nivel de píxel individual.>>}
\KUItem{GV}{AdvancedRendering}{Elective}{Hierarchical}{}{<<Hierarchical depth buffering>>}	\LO{GV}{AdvancedRendering}{Elective}{Usage}{ImplementAFor}{<<Implementar un trazado de rayos({\it ray tracer}) para escenas una simple Función de Distribución de Reflectancia Bidireccional({\it BRDF}) por ejemplo Phong's, además de la reflexión y la refracción.>>}
\KUItem{GV}{AdvancedRendering}{Elective}{The}{}{<<The Light Field, image-based rendering>>}	
\KUItem{GV}{AdvancedRendering}{Elective}{Non}{}{<<Non-photorealistic rendering>>}	
\KUItem{GV}{AdvancedRendering}{Elective}{Gpu}{}{<<GPU architecture>>}	
\KUItem{GV}{AdvancedRendering}{Elective}{Human}{}{<<Human visual systems including adaptation to light, sensitivity to noise, and flicker fusion>>}	
	
\KU{GV}{ComputerAnimation}{<<Computer Animation>>}{}{0}{0}	
\KUDescription{GV}{ComputerAnimation}{<<~>>}	
\KUItem{GV}{ComputerAnimation}{Elective}{Forward}{}{<<Forward and inverse kinematics>>}	\LO{GV}{ComputerAnimation}{Elective}{Usage}{ComputeTheOrientation}{<<Calcular la localización y orientación de partes de un modelo usando un enfoque de cinemática hacia delante.>>}
\KUItem{GV}{ComputerAnimation}{Elective}{Collision}{}{<<Collision detection and response>>}	\LO{GV}{ComputerAnimation}{Elective}{Usage}{ComputeTheArticulated}{<<Calcular la orientación de partes articuladas de un modelo de una localizacion y orientación usando un enfoque de cinemática inversa.>>}
\KUItem{GV}{ComputerAnimation}{Elective}{Procedural}{}{<<Procedural animation using noise, rules (boids/crowds), and particle systems>>}	\LO{GV}{ComputerAnimation}{Elective}{Assessment}{DescribeTheDifferent}{<<Describir las ventajas y desventajas de diferentes representaciones de rotación.>>}
\KUItem{GV}{ComputerAnimation}{Elective}{Skinning}{}{<<Skinning algorithms>>}	\LO{GV}{ComputerAnimation}{Elective}{Usage}{ImplementThe}{<<Implementar el método de interpolación {\it spline} para producir las posiciones y orientaciones en medio.>>}
\KUItem{GV}{ComputerAnimation}{Elective}{Physics}{}{<<Physics based motions including rigid body dynamics, physical particle systems, mass-spring networks for cloth and flesh and hair>>}	\LO{GV}{ComputerAnimation}{Elective}{Usage}{ImplementAlgorithmsModeling}{<<Implementar algoritmos para el modelamiento físico de partículas dinámicas usando simplemente la mecánica de Newton, por ejemplo Witkin \& Kass , serpientes y gusanos, Euler simpléctica, Stormer/Verlet, o métodos de punto medio de Euler.>>}
\KUItem{GV}{ComputerAnimation}{Elective}{Key}{}{<<Key-frame animation>>}	\LO{GV}{ComputerAnimation}{Elective}{Familiarity}{DiscussTheBehind}{<<Discutir las ideas básicas detrás de algunos métodos para dinámica de fluidos para el modelamiento de trayectorias balísticas, por ejemplo salpicaduras, polvo, fuego, o humo.>>}
\KUItem{GV}{ComputerAnimation}{Elective}{Splines}{}{<<Splines>>}	\LO{GV}{ComputerAnimation}{Elective}{Usage}{UseCommon}{<<Usar el software de animación común para construir formas orgánicas simples usando {\it metaball} y el esqueleto.>>}
\KUItem{GV}{ComputerAnimation}{Elective}{Data}{}{<<Data structures for rotations, such as quaternions>>}	
\KUItem{GV}{ComputerAnimation}{Elective}{Camera}{}{<<Camera animation>>}	
\KUItem{GV}{ComputerAnimation}{Elective}{Motion}{}{<<Motion capture>>}	
	
\KU{GV}{Visualization}{<<Visualization>>}{}{0}{0}	
\KUDescription{GV}{Visualization}{<<~>>}	
\KUItem{GV}{Visualization}{Elective}{Visualization}{}{<<Visualization of 2D/3D scalar fields: color mapping, isosurfaces>>}	\LO{GV}{Visualization}{Elective}{Familiarity}{DescribeTheFor}{<<Describir los algitmos básicos para visualización escalar y vectorial.>>}
\KUItem{GV}{Visualization}{Elective}{Direct}{}{<<Direct volume data rendering: ray-casting, transfer functions, segmentation>>}	\LO{GV}{Visualization}{Elective}{Assessment}{DescribeTheVisualization}{<<Describir las ventajas y desventajas de los algoritmos de visualización en terminos de precisión y desempeño.>>}
"\KUItem{GV}{Visualization}{Elective}{VisualizationOf}{}{<<Visualization of:
\begin{subtopics} 
\item Vector fields and flow data 
\item Time-varying data 
\item High-dimensional data: dimension reduction, parallel coordinates 
\item Non-spatial data: multi-variate, tree/graph structured, text 
\end{subtopics}>>}"	\LO{GV}{Visualization}{Elective}{Assessment}{Propose}{<<Proponer un diseño de visualización adecuado para una combinación particular de características de datos y tareas de la aplicación.>>}
\KUItem{GV}{Visualization}{Elective}{Perceptual}{}{<<Perceptual and cognitive foundations that drive visual abstractions >>}	\LO{GV}{Visualization}{Elective}{Assessment}{AnalyzeTheA}{<<Analizar la eficacia de una visualización dada para una tarea en particular.>>}
\KUItem{GV}{Visualization}{Elective}{VisualizationDesign}{}{<<Visualization design >>}	\LO{GV}{Visualization}{Elective}{Assessment}{DesignAEvaluate}{<<Diseñar un proceso para evaluar la utilidad de un algoritmo de visualización o del sistema.>>}
\KUItem{GV}{Visualization}{Elective}{Evaluation}{}{<<Evaluation of visualization methods >>}	\LO{GV}{Visualization}{Elective}{Familiarity}{Recognize}{<<Reconocer una variedad de aplicaciones de visualización incluyendo representaciones de datos científicos, médicos y matemática; visualización de flujo; y análisis espacial.>>}
\KUItem{GV}{Visualization}{Elective}{Applications}{}{<<Applications of visualization >>}	
	
\KA{HCI}{<<Interacción Humano-Computador>>}{}	
"\KADescription{HCI}{<<Human-computer interaction (HCI) is concerned with designing interactions between human activities and thecomputational systems that support them, and with constructing interfaces to afford those interactions. 

Interaction between users and computational artefacts occurs at an interface thatincludes both software and hardware. Thus interface design impacts the software life-cycle in that it should occur early; the design and implementation of core functionality can influence the user interface - for better or worse.

Because it deals with people as well as computational systems, as a knowledge area HCI demands the consideration of cultural, social, organizational, cognitive and perceptual issues. Consequently it draws on a variety of disciplinary traditions, including psychology, ergonomics, computer science, graphic and product design, anthropology and engineering.>>}"	
	
\KU{HCI}{Foundations}{<<Foundations>>}{}{4}{0}	
\KUDescription{HCI}{Foundations}{<<Motivation: For end-users, the interface isthe system. So design in this domain must be interaction-focused and human-centered. Students need a different repertoire of techniques to address this than is provided elsewhere in the curriculum. >>}	
\KUItem{HCI}{Foundations}{Core-Tier1}{Contexts}{}{<<Contexts for HCI (anything with a user interface, e.g., webpage, business applications, mobile applications, and games)>>}	\LO{HCI}{Foundations}{Core-Tier1}{Familiarity}{DiscussWhy}{<<Discutir por qué el desarrollo de software centrado en el hombre es importante.>>}
\KUItem{HCI}{Foundations}{Core-Tier1}{Processes}{}{<<Processes for user-centered development, e.g., early focus on users, empirical testing, iterative design>>}	\LO{HCI}{Foundations}{Core-Tier1}{Familiarity}{SummarizeTheOf}{<<Resumir los preceptos básicos de la interacción psicológica y social.>>}
\KUItem{HCI}{Foundations}{Core-Tier1}{Different}{}{<<Different measures for evaluation, e.g., utility, efficiency, learnability, user satisfaction>>}	\LO{HCI}{Foundations}{Core-Tier1}{Usage}{Develop}{<<Desarrollar y usar un vocabulario conceptual para analizar la interación humana con el software: disponibilidad, modelo conceptual, retroalimentación, y demás.>>}
\KUItem{HCI}{Foundations}{Core-Tier1}{Usability}{}{<<Usability heuristics and the principles of usability testing>>}	\LO{HCI}{Foundations}{Core-Tier1}{Usage}{DefineA}{<<Define un proceso de diseño centralizado en el usario que de forma explícita considere el hecho que un usuario no es como un desarrollador o como sus conocimientos.>>}
\KUItem{HCI}{Foundations}{Core-Tier1}{Physical}{}{<<Physical capabilities that inform interaction design, e.g., color perception, ergonomics>>}	\LO{HCI}{Foundations}{Core-Tier1}{Assessment}{CreateAnd}{<<Crear y dirigir una simple pruebga de usabilidad para una aplicación existente de software.>>}
\KUItem{HCI}{Foundations}{Core-Tier1}{Cognitive}{}{<<Cognitive models that inform interaction design, e.g., attention, perception and recognition, movement, and memory; gulfs of expectation and execution>>}	
\KUItem{HCI}{Foundations}{Core-Tier1}{Social}{}{<<Social models that inform interaction design, e.g., culture, communication, networks and organizations>>}	
\KUItem{HCI}{Foundations}{Core-Tier1}{Principles}{}{<<Principles of good design and good designers; engineering tradeoffs>>}	
\KUItem{HCI}{Foundations}{Core-Tier1}{Accessibility}{}{<<Accessibility, e.g., interfaces for differently-abled populations (e.g., blind, motion-impaired)>>}	
\KUItem{HCI}{Foundations}{Core-Tier1}{Interfaces}{}{<<Interfaces for differently-aged population groups (e.g., children, 80+)>>}	
	
\KU{HCI}{DesigningInteraction}{<<Designing Interaction>>}{}{0}{4}	
\KUDescription{HCI}{DesigningInteraction}{<<Motivation: CS students need a minimal set of well-established methods and tools to bring to interface construction>>}	
\KUItem{HCI}{DesigningInteraction}{Core-Tier2}{PrinciplesOf}{}{<<Principles of graphical user interfaces (GUIs)>>}	\LO{HCI}{DesigningInteraction}{Core-Tier2}{Assessment}{ForAn}{<<Para un grupo de usuarios determinado, realizar y documentar un análisis de sus necesidades.>>}
\KUItem{HCI}{DesigningInteraction}{Core-Tier2}{Elements}{}{<<Elements of visual design (layout, color, fonts, labeling)>>}	\LO{HCI}{DesigningInteraction}{Core-Tier2}{Usage}{CreateATogether}{<<Crear una aplicación simple, junto con la ayuda y la documentación, que soporta una interfaz gráfica de usuario.>>}
\KUItem{HCI}{DesigningInteraction}{Core-Tier2}{Task}{}{<<Task analysis, including qualitative aspects of generating task analytic models>>}	\LO{HCI}{DesigningInteraction}{Core-Tier2}{Usage}{Conduct}{<<Llevar a cabo una evaluación cuantitativa y discutir / informar sobre los resultados.>>}
\KUItem{HCI}{DesigningInteraction}{Core-Tier2}{Low}{}{<<Low-fidelity (paper) prototyping>>}	\LO{HCI}{DesigningInteraction}{Core-Tier2}{Familiarity}{DiscussAt}{<<Discutir al menos un standard nacional o internacional de diseño de interfaz de usuario.>>}
\KUItem{HCI}{DesigningInteraction}{Core-Tier2}{Quantitative}{}{<<Quantitative evaluation techniques, e.g., keystroke-level evaluation>>}	
\KUItem{HCI}{DesigningInteraction}{Core-Tier2}{Help}{}{<<Help and documentation>>}	
\KUItem{HCI}{DesigningInteraction}{Core-Tier2}{Handling}{}{<<Handling human/system failure>>}	
\KUItem{HCI}{DesigningInteraction}{Core-Tier2}{User}{}{<<User interface standards>>}	
	
\KU{HCI}{ProgrammingInteractiveSystems}{<<Programming Interactive Systems>>}{}{0}{0}	
\KUDescription{HCI}{ProgrammingInteractiveSystems}{<<Motivation: To take a user-experience-centered view of software development and then cover approaches and technologies to make that happen.>>}	
"\KUItem{HCI}{ProgrammingInteractiveSystems}{Elective}{Software}{PLEventDrivenandReactiveProgramming,PLEventDrivenandReactiveProgramming}{<<Software Architecture Patterns, e.g., Model-View controller; command objects, online, offline
>>}"	\LO{HCI}{ProgrammingInteractiveSystems}{Elective}{Familiarity}{ExplainTheModel}{<<Explicar la importancia del controlador Modelo-Vista para la programación de la interfaz.>>}
\KUItem{HCI}{ProgrammingInteractiveSystems}{Elective}{Interaction}{}{<<Interaction Design Patterns: visual hierarchy, navigational distance >>}	\LO{HCI}{ProgrammingInteractiveSystems}{Elective}{Usage}{CreateAn}{<<Crear una aplicación con una moderna interfaz gráfica de usuario.>>}
\KUItem{HCI}{ProgrammingInteractiveSystems}{Elective}{Event}{}{<<Event management and user interaction >>}	\LO{HCI}{ProgrammingInteractiveSystems}{Elective}{Familiarity}{IdentifyCommonalities}{<<Identificar puntos comunes y las diferencias en las {\it UIs} a través de diferentes plataformas.>>}
\KUItem{HCI}{ProgrammingInteractiveSystems}{Elective}{Geometry}{GVGeometricModeling,GVGeometricModeling}{<<Geometry management>>}	\LO{HCI}{ProgrammingInteractiveSystems}{Elective}{Familiarity}{ExplainAndProgramming}{<<Explicar y utilizar los conceptos de programación de GUI: la gestión de eventos, gestión de distribución basado en restricciones, etc.>>}
\KUItem{HCI}{ProgrammingInteractiveSystems}{Elective}{Choosing}{}{<<Choosing interaction styles and interaction techniques>>}	
\KUItem{HCI}{ProgrammingInteractiveSystems}{Elective}{Presenting}{}{<<Presenting information: navigation, representation, manipulation>>}	
\KUItem{HCI}{ProgrammingInteractiveSystems}{Elective}{Interface}{}{<<Interface animation techniques (e.g., scene graphs)>>}	
\KUItem{HCI}{ProgrammingInteractiveSystems}{Elective}{Widget}{}{<<Widget classes and libraries>>}	
\KUItem{HCI}{ProgrammingInteractiveSystems}{Elective}{Modern}{PBDMobilePlatforms,PBDMobilePlatforms}{<<Modern GUI libraries (e.g. iOS, Android, JavaFX) GUI builders and UI programming environments>>}	
\KUItem{HCI}{ProgrammingInteractiveSystems}{Elective}{Declarative}{}{<<Declarative Interface Specification: Stylesheets and DOMs>>}	
\KUItem{HCI}{ProgrammingInteractiveSystems}{Elective}{Data}{}{<<Data-driven applications (database-backed web pages)>>}	
\KUItem{HCI}{ProgrammingInteractiveSystems}{Elective}{Cross}{}{<<Cross-platform design>>}	
\KUItem{HCI}{ProgrammingInteractiveSystems}{Elective}{Design}{}{<<Design for resource-constrained devices (e.g. small, mobile devices)>>}	
	
\KU{HCI}{Usercentereddesignandtesting}{<<User-centered design and testing>>}{}{0}{0}	
\KUDescription{HCI}{Usercentereddesignandtesting}{<<Motivation: An exploration of techniques to ensure that end-users are fully considered at all stages of the design process, from inception to implementation.>>}	
\KUItem{HCI}{Usercentereddesignandtesting}{Elective}{Approaches}{}{<<Approaches to, and characteristics of, the design process>>}	\LO{HCI}{Usercentereddesignandtesting}{Elective}{Familiarity}{ExplainHowDesign}{<<Explicar cómo el diseño centrado en el usuario complementa a otros modelos de proceso software.>>}
\KUItem{HCI}{Usercentereddesignandtesting}{Elective}{Functionality}{SERequirementsEngineering,SERequirementsEngineering}{<<Functionality and usability requirements>>}	\LO{HCI}{Usercentereddesignandtesting}{Elective}{Usage}{UseLo}{<<Utilizar {\it lo-fi} (baja fidelidad) técnicas de prototipado para recopilar y reportar, las respuestas del usuario.>>}
\KUItem{HCI}{Usercentereddesignandtesting}{Elective}{Techniques}{}{<<Techniques for gathering requirements, e.g., interviews, surveys, ethnographic and contextual enquiry>>}	\LO{HCI}{Usercentereddesignandtesting}{Elective}{Assessment}{ChooseAppropriate}{<<Elegir los métodos adecuados para apoyar el desarrollo de una específica interfaz de usuario.>>}
\KUItem{HCI}{Usercentereddesignandtesting}{Elective}{TechniquesAnd}{}{<<Techniques and tools for the analysis and presentation of requirements, e.g., reports, personas>>}	\LO{HCI}{Usercentereddesignandtesting}{Elective}{Assessment}{UseATechniques}{<<Utilizar una variedad de técnicas para evaluar una interfaz de usuario dada.>>}
\KUItem{HCI}{Usercentereddesignandtesting}{Elective}{Prototyping}{}{<<Prototyping techniques and tools, e.g., sketching, storyboards, low-fidelity prototyping, wireframes>>}	\LO{HCI}{Usercentereddesignandtesting}{Elective}{Assessment}{CompareThe}{<<Comparar las limitaciones y beneficios de los diferentes métodos de evaluación.>>}
\KUItem{HCI}{Usercentereddesignandtesting}{Elective}{Evaluation}{}{<<Evaluation without users, using both qualitative and quantitative techniques, e.g., walkthroughs, GOMS, expert-based analysis, heuristics, guidelines, and standard>>}	
\KUItem{HCI}{Usercentereddesignandtesting}{Elective}{EvaluationWith}{}{<<Evaluation with users, e.g., observation, think-aloud, interview, survey, experiment>>}	
\KUItem{HCI}{Usercentereddesignandtesting}{Elective}{Challenges}{}{<<Challenges to effective evaluation, e.g., sampling, generalization>>}	
\KUItem{HCI}{Usercentereddesignandtesting}{Elective}{Reporting}{}{<<Reporting the results of evaluations>>}	
\KUItem{HCI}{Usercentereddesignandtesting}{Elective}{Internationalization}{}{<<Internationalization, designing for users from other cultures, cross-cultural>>}	
	
\KU{HCI}{NewInteractiveTechnologies}{<<New Interactive Technologies>>}{}{0}{0}	
\KUDescription{HCI}{NewInteractiveTechnologies}{<<Motivation: As technologies evolve, new interaction styles are made possible. This knowledge unit should be considered extensible, to track emergent technology. >>}	
\KUItem{HCI}{NewInteractiveTechnologies}{Elective}{Choosing}{}{<<Choosing interaction styles and interaction techniques>>}	\LO{HCI}{NewInteractiveTechnologies}{Elective}{Familiarity}{DescribeWhen}{<<Describe cuando son adecuadas las interfaces sin uso de ratón.>>}
\KUItem{HCI}{NewInteractiveTechnologies}{Elective}{Representing}{}{<<Representing information to users: navigation, representation, manipulation>>}	\LO{HCI}{NewInteractiveTechnologies}{Elective}{Familiarity}{UnderstandThe}{<<Comprende las posibilidades de interacción que van más allá de las interfaces de ratón y puntero.>>}
"\KUItem{HCI}{NewInteractiveTechnologies}{Elective}{ApproachesTo}{ISNaturalLanguageProcessing,ISNaturalLanguageProcessing}{<<Approaches to design, implementation and evaluation of non-mouse interaction
\begin{subtopics} 
\item Touch and multi-touch interfaces
\item Shared, embodied, and large interfaces
\item New input modalities (such as sensor and location data)
\item New Windows, e.g., iPhone, Android
\item Speech recognition and natural language processing
\item Wearable and tangible interfaces
\item Persuasive interaction and emotion
\item Ubiquitous and context-aware interaction technologies (Ubicomp)
\item Bayesian inference (e.g. predictive text, guided pointing)
\item Ambient/peripheral display and interaction
\end{subtopics}>>}"	\LO{HCI}{NewInteractiveTechnologies}{Elective}{Assessment}{DiscussTheDisadvantages}{<<Discute las ventajas (y desventajas) de las interfaces no basadas en ratón.>>}
	
\KU{HCI}{Collaborationandcommunication}{<<Collaboration and communication>>}{}{0}{0}	
\KUDescription{HCI}{Collaborationandcommunication}{<<Motivation:Computer interfaces not only support users in achieving their individual goals but also in their interaction with others, whether that is task-focused (work or gaming) or task-unfocused (social networking).>>}	
\KUItem{HCI}{Collaborationandcommunication}{Elective}{Asynchronous}{}{<<Asynchronous group communication, e.g., e-mail, forums, social networks>>}	\LO{HCI}{Collaborationandcommunication}{Elective}{Familiarity}{DescribeTheSynchronous}{<<Describir la diferencia entre la comunicación sincrónica y asincrónica.>>}
\KUItem{HCI}{Collaborationandcommunication}{Elective}{Synchronous}{}{<<Synchronous group communication, e.g., chat rooms, conferencing, online games>>}	\LO{HCI}{Collaborationandcommunication}{Elective}{Assessment}{CompareTheIn}{<<Comparar los problemas de IHC en la interacción individual con la interacción del grupo.>>}
\KUItem{HCI}{Collaborationandcommunication}{Elective}{Social}{}{<<Social media, social computing, and social network analysis>>}	\LO{HCI}{Collaborationandcommunication}{Elective}{Familiarity}{DiscussSeveral}{<<Discuta varias problemas de interés social planteados por el software colaborativo.>>}
\KUItem{HCI}{Collaborationandcommunication}{Elective}{Online}{}{<<Online collaboration, 'smart' spaces, and social coordination aspects of workflow technologies>>}	\LO{HCI}{Collaborationandcommunication}{Elective}{Familiarity}{DiscussTheIn}{<<Discutir los problemas de IHC en software que personifica la intención humana.>>}
\KUItem{HCI}{Collaborationandcommunication}{Elective}{OnlineCommunities}{}{<<Online communities>>}	
\KUItem{HCI}{Collaborationandcommunication}{Elective}{Software}{ISAgents,ISAgents}{<<Software characters and intelligent agents, virtual worlds and avatars>>}	
\KUItem{HCI}{Collaborationandcommunication}{Elective}{SocialPsychology}{}{<<Social psychology>>}	
	
\KU{HCI}{StatisticalmethodsforHCI}{<<Statistical methods for HCI>>}{}{0}{0}	
\KUDescription{HCI}{StatisticalmethodsforHCI}{<<Motivation: Much HCI work depends on the proper use, understanding and application of statistics. This knowledge is often held by students who join the field from psychology, but less common in students with a CS background.>>}	
\KUItem{HCI}{StatisticalmethodsforHCI}{Elective}{T}{}{<<t-tests>>}	\LO{HCI}{StatisticalmethodsforHCI}{Elective}{Familiarity}{ExplainBasicAnd}{<<Explicar los conceptos estadísticos básicos y sus áreas de aplicación.>>}
\KUItem{HCI}{StatisticalmethodsforHCI}{Elective}{Anova}{}{<<ANOVA>>}	\LO{HCI}{StatisticalmethodsforHCI}{Elective}{Usage}{ExtractAnd}{<<Extraer y articular los argumentos estadísticos utilizados en papers que informan cuantitativamente los estudios de usuarios>>}
\KUItem{HCI}{StatisticalmethodsforHCI}{Elective}{Randomization}{}{<<Randomization (non-parametric) testing, within vs. between-subjects design>>}	\LO{HCI}{StatisticalmethodsforHCI}{Elective}{Usage}{DesignAThat}{<<Diseñar un estudio de usuarios que va a dar resultados cuantitativos.>>}
\KUItem{HCI}{StatisticalmethodsforHCI}{Elective}{Calculating}{}{<<Calculating effect size>>}	\LO{HCI}{StatisticalmethodsforHCI}{Elective}{Usage}{ConductAnd}{<<Llevar a cabo e informar sobre un estudio que utiliza evalución cualitativa y cuantitativa.>>}
\KUItem{HCI}{StatisticalmethodsforHCI}{Elective}{Exploratory}{}{<<Exploratory data analysis>>}	
\KUItem{HCI}{StatisticalmethodsforHCI}{Elective}{Presenting}{}{<<Presenting statistical data>>}	
\KUItem{HCI}{StatisticalmethodsforHCI}{Elective}{Combining}{}{<<Combining qualitative and quantitative results >>}	
	
\KU{HCI}{Humanfactorsandsecurity}{<<Human factors and security>>}{}{0}{0}	
\KUDescription{HCI}{Humanfactorsandsecurity}{<<Motivation: Effective interface design requires basic knowledge of security psychology. Many attacks do not have a technological basis, but exploit human propensities and vulnerabilities. ``Only amateurs attack machines; professionals target people" (Bruce Schneier, https://www.schneier.com/blog/archives/2013/03/phishing_has_go.h.) >>}	
\KUItem{HCI}{Humanfactorsandsecurity}{Elective}{Applied}{}{<<Applied psychology and security policies>>}	\LO{HCI}{Humanfactorsandsecurity}{Elective}{Familiarity}{ExplainThePhishing}{<<Explicar los conceptos de {\it phishing} y {\it spear phishing} y cómo reconocerlos.>>}
\KUItem{HCI}{Humanfactorsandsecurity}{Elective}{Security}{}{<<Security economics>>}	\LO{HCI}{Humanfactorsandsecurity}{Elective}{Assessment}{DescribeTheTrust}{<<Describir los problemas de confianza en el diseño de interfaz con un ejemplo de un sistema de confianza alto y bajo.>>}
\KUItem{HCI}{Humanfactorsandsecurity}{Elective}{Regulatory}{}{<<Regulatory environments - responsibility, liability and self-determination>>}	\LO{HCI}{Humanfactorsandsecurity}{Elective}{Assessment}{DesignAForMechanism}{<<Diseñar una interfaz de usuario para un mecanismo de seguridad.>>}
\KUItem{HCI}{Humanfactorsandsecurity}{Elective}{Organizational}{}{<<Organizational vulnerabilities and threats>>}	\LO{HCI}{Humanfactorsandsecurity}{Elective}{Familiarity}{ExplainTheIdentity}{<<Explicar el concepto de gestión de la identidad y su importancia.>>}
\KUItem{HCI}{Humanfactorsandsecurity}{Elective}{Usability}{}{<<Usability design and security>>}	\LO{HCI}{Humanfactorsandsecurity}{Elective}{Usage}{AnalyzeAAnd}{<<Analizar una política y/o procedimientos para demostrar si consideran o no se consideran, los factores humanos de la seguridad.>>}
\KUItem{HCI}{Humanfactorsandsecurity}{Elective}{Pretext}{IASThreatsandAttacks,IASThreatsandAttacks}{<<Pretext, impersonation and fraud, e.g., phishing and spear phishing>>}	
\KUItem{HCI}{Humanfactorsandsecurity}{Elective}{Trust}{}{<<Trust, privacy and deception>>}	
\KUItem{HCI}{Humanfactorsandsecurity}{Elective}{Biometric}{}{<<Biometric authentication (camera, voice)>>}	
\KUItem{HCI}{Humanfactorsandsecurity}{Elective}{Identity}{}{<<Identity management>>}	
	
\KU{HCI}{DesignorientedHCI}{<<Design-oriented HCI>>}{}{0}{0}	
\KUDescription{HCI}{DesignorientedHCI}{<<Motivation: Some curricula will want to emphasize an understanding of the norms and values of HCI work itself as emerging from, and deployed within specific historical, disciplinary and cultural contexts.>>}	
\KUItem{HCI}{DesignorientedHCI}{Elective}{Intellectual}{}{<<Intellectual styles and perspectives to technology and its interfaces>>}	\LO{HCI}{DesignorientedHCI}{Elective}{Familiarity}{ExplainWhat}{<<Explicar que significa que "La IHC es una disciplina orientada al diseño".>>}
"\KUItem{HCI}{DesignorientedHCI}{Elective}{Consideration}{}{<<Consideration of HCI as a design discipline
\begin{subtopics}
\item Sketching
\item Participatory design
\end{subtopics}>>}"	\LO{HCI}{DesignorientedHCI}{Elective}{Familiarity}{Detail}{<<Detallar los procesos de diseño apropiados para orientaciones específicas de diseño.>>}
"\KUItem{HCI}{DesignorientedHCI}{Elective}{Critically}{}{<<Critically reflective HCI
\begin{subtopics}
\item Critical technical practice
\item Technologies for political activism
\item Philosophy of user experience
\item Ethnography and ethnomethodology
\end{subtopics}>>}"	\LO{HCI}{DesignorientedHCI}{Elective}{Usage}{ApplyA}{<<Aplicar una varidad de métodos de diseño para un problema determinado.>>}
"\KUItem{HCI}{DesignorientedHCI}{Elective}{Indicative}{}{<<Indicative domains of application
\begin{subtopics}
\item Sustainability
\item Arts-informed computing
\end{subtopics}>>}"	
	
\KU{HCI}{MixedAugmentedandVirtualReality}{<<Mixed, Augmented and Virtual Reality>>}{}{0}{0}	
\KUDescription{HCI}{MixedAugmentedandVirtualReality}{<<Motivation: A detailed consideration of the interface components required for the creation and development of immersive environments, especially games. >>}	
"\KUItem{HCI}{MixedAugmentedandVirtualReality}{Elective}{Output}{}{<<Output
\begin{subtopics}
\item Sound
\item Stereoscopic display
\item Force feedback simulation, haptic devices
\end{subtopics}>>}"	\LO{HCI}{MixedAugmentedandVirtualReality}{Elective}{Familiarity}{DescribeTheRealized}{<<Describir el modelo óptico realizado por un sistema de gráficos por computadora para sintetizar  una visión estereoscópica.>>}
"\KUItem{HCI}{MixedAugmentedandVirtualReality}{Elective}{User}{}{<<User input
\begin{subtopics}
\item Viewer and object tracking
\item Pose and gesture recognition
\item Accelerometers
\item Fiducial markers
\item User interface issues
\end{subtopics}>>}"	\LO{HCI}{MixedAugmentedandVirtualReality}{Elective}{Familiarity}{DescribeTheDifferentTechnologies}{<<Describir los principios de las diferentes tecnologias de seguimiento de espectador.>>}
"\KUItem{HCI}{MixedAugmentedandVirtualReality}{Elective}{Physical}{}{<<Physical modelling and rendering
\begin{subtopics}
\item Physical simulation: collision detection \& response, animation
\item Visibility computation
\item Time-critical rendering, multiple levels of details (LOD)
\end{subtopics}>>}"	\LO{HCI}{MixedAugmentedandVirtualReality}{Elective}{Familiarity}{DescribeTheGeometry}{<<Describir las diferencias entre geometria y realidad virtual basada en imágenes.>>}
"\KUItem{HCI}{MixedAugmentedandVirtualReality}{Elective}{System}{}{<<System architectures
\begin{subtopics}
\item Game engines
\item Mobile augmented reality
\item Flight simulators
\item CAVEs
\item Medical imaging
\end{subtopics}>>}"	\LO{HCI}{MixedAugmentedandVirtualReality}{Elective}{Familiarity}{DescribeTheUser}{<<Describir los casos de la acción de sincronización de un usuario y la consistencia de los datos en un entorno de red.>>}
"\KUItem{HCI}{MixedAugmentedandVirtualReality}{Elective}{Networking}{}{<<Networking
\begin{subtopics}
\item p2p, client-server, dead reckoning, encryption, synchronization
\item Distributed collaboration
\end{subtopics}>>}"	\LO{HCI}{MixedAugmentedandVirtualReality}{Elective}{Usage}{DetermineThe}{<<Determinar los requerimientos básicos en interfaz, software, hardware, y cofiguraciones de software de un sistema VR para una aplicación específica.>>}
	\LO{HCI}{MixedAugmentedandVirtualReality}{Elective}{Familiarity}{DescribeSeveralFor}{<<Describir varios usos posibles para los motores de juegos, incluyendo su potencial y sus limitaciones.>>}
	
\KA{IAS}{<<Aseguramiento y Seguridad de la Información>>}{}	
"\KADescription{IAS}{<<In CS2013, the Information Assurance and Security KA is added to the Body of Knowledge in recognition of the world’s reliance on information technology and its critical role in computer science education. Information assurance and security as a domain is the set of controls and processes both technical and policy intended to protect and defend information and information systems by ensuring their confidentiality, integrity, and availability, and byproviding for authentication and non-repudiation. The concept of assurance also carries an attestation that current and past processes and data are valid. Both assurance and security concepts are needed to ensure a complete perspective. Information assurance and security education, then, includes all efforts to prepare a workforce with the needed knowledge, skills, and abilities to protect our information systems and attest to the assurance of the past and current state of processes and data. The importance of security concepts and topics has emerged as a core requirement in the Computer Science discipline, much like the importance of performance concepts has been for many years. 

The Information Assurance and Security KA is unique among the set of KAs presented here given the manner in which the topics are pervasive throughout other Knowledge Areas. The topics germane to only IAS are presented in the IAS section; other topics are noted and crossreferenced in the IAS KA. In the IAS KA the many topics are represented with only 9 hours of Core-Tier1and Tier2 coverage. This is balanced with the level of mastery primarily at the familiarity level and the more indepth coverage distributed in the referenced KAs where they are applied. The broad application of the IAS KA concepts (63.5 hours) across all other KAs provides the depth of coverage and mastery for an undergraduate computer science student. 

The IAS KA is shown in two groups: (1) concepts where the depth is unique to Information Assurance and Security and (2) IAS topics that are integrated into other KAs that reflect naturally implied or specified topics with a strong role in security concepts and topics.>>}"	
	
\KU{IAS}{FoundationalConceptsinSecurity}{<<Foundational Concepts in Security>>}{}{1}{2}	
\KUDescription{IAS}{FoundationalConceptsinSecurity}{<<~>>}	
\KUItem{IAS}{FoundationalConceptsinSecurity}{Core-Tier1}{Cia}{}{<<CIA (Confidentiality, Integrity, Availability)>>}	\LO{IAS}{FoundationalConceptsinSecurity}{Core-Tier1}{Usage}{AnalyzeTheBalancing}{<<Analizar las ventajas y desventajas de equilibrar las propiedades clave de seguridad(Confidenciabilidad, Integridad, Disponibilidad).>>}
\KUItem{IAS}{FoundationalConceptsinSecurity}{Core-Tier1}{Concepts}{SESoftwareProjectManagement,SESoftwareProjectManagementTopicRisk}{<<Concepts of risk, threats, vulnerabilities, and attack vectors>>}	\LO{IAS}{FoundationalConceptsinSecurity}{Core-Tier1}{Familiarity}{DescribeTheRisk}{<<Describir los conceptos de riesgo, amenazas, vulnerabilidades y vectores de ataque(incluyendo el hecho de que no existe tal cosa como la seguridad perfecta).>>}
\KUItem{IAS}{FoundationalConceptsinSecurity}{Core-Tier1}{Authentication}{}{<<Authentication and authorization, access control (mandatory vs. discretionary)>>}	\LO{IAS}{FoundationalConceptsinSecurity}{Core-Tier1}{Familiarity}{ExplainTheAuthentication}{<<Explicar los conceptos de autentificación, autorización, control de acceso.>>}
\KUItem{IAS}{FoundationalConceptsinSecurity}{Core-Tier1}{Concept}{}{<<Concept of trust and trustworthiness>>}	\LO{IAS}{FoundationalConceptsinSecurity}{Core-Tier1}{Familiarity}{ExplainTheTrust}{<<Explicar el concepto de confianza y confiabilidad.>>}
\KUItem{IAS}{FoundationalConceptsinSecurity}{Core-Tier1}{Ethics}{SPProfessionalEthics,SPProfessionalEthicsTopicAccountability}{<<Ethics (responsible disclosure)>>}	\LO{IAS}{FoundationalConceptsinSecurity}{Core-Tier1}{Familiarity}{RecognizeThat}{<<Reconocer de que hay problemas éticos más importantes que considerar en seguridad computacional, incluyendo problemas éticos asociados a arreglar o no arreglar vulnerabilidades y revelar o no revelar vulnerabilidades.>>}
	
\KU{IAS}{PrinciplesofSecureDesign}{<<Principles of Secure Design>>}{}{1}{2}	
\KUDescription{IAS}{PrinciplesofSecureDesign}{<<~>>}	
\KUItem{IAS}{PrinciplesofSecureDesign}{Core-Tier1}{Least}{OSSecurityandProtection, SFVirtualizationandIsolation, PLLanguageTranslationandExecution,OSSecurityandProtectionTopicPolicy, SFVirtualizationandIsolationTopicRationale, PLLanguageTranslationandExecutionTopicMemory}{<<Least privilege and isolation >>}	\LO{IAS}{PrinciplesofSecureDesign}{Core-Tier1}{Familiarity}{DescribeTheLeast}{<<Describir el principio de privilegios mínimos y el aislamiento que se aplican al diseño del sistema.>>}
\KUItem{IAS}{PrinciplesofSecureDesign}{Core-Tier1}{Fail}{SESoftwareConstruction,SDFDevelopmentMethods,SESoftwareConstructionTopicCoding,SDFDevelopmentMethodsTopicProgramCorrectness}{<<Fail-safe defaults >>}	\LO{IAS}{PrinciplesofSecureDesign}{Core-Tier1}{Familiarity}{SummarizeTheFail}{<<Resumir el principio de prueba de fallos y negar por defecto.>>}
\KUItem{IAS}{PrinciplesofSecureDesign}{Core-Tier1}{Open}{SESoftwareEvolution,SESoftwareEvolutionTopicSoftwareDevelopment}{<<Open design>>}	\LO{IAS}{PrinciplesofSecureDesign}{Core-Tier1}{Familiarity}{DiscussTheRelying}{<<Discutir las implicaciones de depender de diseño abierto o secreto de diseño para la seguridad.>>}
\KUItem{IAS}{PrinciplesofSecureDesign}{Core-Tier1}{End}{SFReliabilitythroughRedundancy,SFReliabilitythroughRedundancy}{<<End-to-end security>>}	\LO{IAS}{PrinciplesofSecureDesign}{Core-Tier1}{Familiarity}{ExplainTheEnd}{<<Explicar los objetivos de seguridad de datos de extremo a extremo.>>}
\KUItem{IAS}{PrinciplesofSecureDesign}{Core-Tier1}{Defense}{}{<<Defense in depth (e.g., defensive programming, layered defense)>>}	\LO{IAS}{PrinciplesofSecureDesign}{Core-Tier1}{Familiarity}{DiscussTheHaving}{<<Discutir los beneficios de tener múltiples capas de defensas.>>}
\KUItem{IAS}{PrinciplesofSecureDesign}{Core-Tier1}{Security}{SESoftwareDesign,SESoftwareDesignTopicSystemDesign}{<<Security by design>>}	\LO{IAS}{PrinciplesofSecureDesign}{Core-Tier1}{Familiarity}{ForEach}{<<Por cada etapa en el ciclo de vida de un producto, describir que consideraciones de seguridad deberian ser evaluadas.>>}
\KUItem{IAS}{PrinciplesofSecureDesign}{Core-Tier1}{Tensions}{}{<<Tensions between security and other design goals>>}	\LO{IAS}{PrinciplesofSecureDesign}{Core-Tier1}{Familiarity}{DescribeTheTradeoffs}{<<Describir el costo y ventajas y desventajas asociadas con el diseño de seguridad de un producto. >>}
\KUItem{IAS}{PrinciplesofSecureDesign}{Core-Tier2}{Complete}{}{<<Complete mediation>>}	\LO{IAS}{PrinciplesofSecureDesign}{Core-Tier2}{Familiarity}{DescribeTheMediation}{<<Describir el concepto de mediación y el principio de mediación completa.>>}
\KUItem{IAS}{PrinciplesofSecureDesign}{Core-Tier2}{Use}{}{<<Use of vetted security components>>}	\LO{IAS}{PrinciplesofSecureDesign}{Core-Tier2}{Familiarity}{BeAware}{<<Conocer los componentes estándar para las operaciones de seguridad, en lugar de reinventar las operaciones fundamentales.>>}
\KUItem{IAS}{PrinciplesofSecureDesign}{Core-Tier2}{Economy}{SESoftwareDesign,SESoftwareConstruction,SESoftwareDesignTopicSystemDesign,SESoftwareConstructionTopicDevelopment}{<<Economy of mechanism (reducing trusted computing base, minimize attack surface)>>}	\LO{IAS}{PrinciplesofSecureDesign}{Core-Tier2}{Familiarity}{ExplainTheTrusted}{<<Explicar el concepto de computación confiable incluyendo base informática confiable y de la superficie de ataque y el principio de minimización de base informática confiable.>>}
\KUItem{IAS}{PrinciplesofSecureDesign}{Core-Tier2}{Usable}{HCIFoundations,HCIFoundationsTopicCognitive}{<<Usable security>>}	\LO{IAS}{PrinciplesofSecureDesign}{Core-Tier2}{Familiarity}{DiscussTheUsability}{<<Discutir la importancia de la usabilidad en el diseño de mecanismos de seguridad.>>}
\KUItem{IAS}{PrinciplesofSecureDesign}{Core-Tier2}{SecurityComposability}{}{<<Security composability>>}	\LO{IAS}{PrinciplesofSecureDesign}{Core-Tier2}{Familiarity}{DescribeSecurity}{<<Describir problemas de seguridad que surgen en los límites entre varios componentes.>>}
\KUItem{IAS}{PrinciplesofSecureDesign}{Core-Tier2}{Prevention}{SFReliabilitythroughRedundancy,NCReliableDataDelivery,NCReliableDataDelivery,SFReliabilitythroughRedundancyTopicDistinction,NCReliableDataDeliveryTopicErrorControl,NCReliableDataDeliveryTopicFlow}{<<Prevention, detection, and deterrence>>}	\LO{IAS}{PrinciplesofSecureDesign}{Core-Tier2}{Familiarity}{IdentifyTheOf}{<<Identificar los diferentes roles de mecanismos de prevención y mecanismos de eliminación/disuación.>>}
	
\KU{IAS}{DefensiveProgramming}{<<Defensive Programming>>}{}{1}{2}	
\KUDescription{IAS}{DefensiveProgramming}{<<Topics in defensive programming are generally not thought about in isolation, but applied to other topics particularly in SDF, SE and PD Knowledge Areas.>>}	
\KUItem{IAS}{DefensiveProgramming}{Core-Tier1}{Input}{SDFDevelopmentMethods,SDFDevelopmentMethodsTopicProgramCorrectness}{<<Input validation and data sanitization>>}	\LO{IAS}{DefensiveProgramming}{Core-Tier1}{Familiarity}{ExplainWhyAnd}{<<Explicar por que la validación de entrada y desinfección de datos es necesario en el frente del control contencioso del canal de entrada.>>}
\KUItem{IAS}{DefensiveProgramming}{Core-Tier1}{Choice}{}{<<Choice of programming language and type-safe languages>>}	\LO{IAS}{DefensiveProgramming}{Core-Tier1}{Familiarity}{ExplainWhyChoose}{<<Explicar por que uno deberia escoger para desallorrar un programa en un lenguaje tipo seguro como Java, en contraste con un lenguaje de programación no seguro como C/C++.>>}
"\KUItem{IAS}{DefensiveProgramming}{Core-Tier1}{Examples}{SDFDevelopmentMethods,SESoftwareConstruction,SDFDevelopmentMethodsTopicProgramCorrectness,SESoftwareConstructionTopicCoding}{<<Examples of input validation and data sanitization errors
\begin{subtopics}
\item Buffer overflows
\item Integer errors
\item SQL injection
\item XSS vulnerability
\end{subtopics}>>}"	\LO{IAS}{DefensiveProgramming}{Core-Tier1}{Usage}{Classify}{<<Clasificar los errores de validación de entrada común, y escribir correctamente el código de validación de entrada.>>}
\KUItem{IAS}{DefensiveProgramming}{Core-Tier1}{Race}{SFParallelism,PDParallelArchitecture,PDCommunicationandCoordination,PDParallelismFundamentals,SFParallelismTopicParallelProgramming,PDParallelArchitectureTopicSharedVs,PDCommunicationandCoordinationTopicSharedMemory,PDParallelismFundamentalsTopicProgrammingErrors}{<<Race conditions>>}	\LO{IAS}{DefensiveProgramming}{Core-Tier1}{Usage}{DemonstrateUsing}{<<Demostrar el uso de un lenguaje de programación de alto nivel cómo prevenir una condición de competencia que ocurran y cómo manejar una excepción.>>}
\KUItem{IAS}{DefensiveProgramming}{Core-Tier1}{Correct}{SDFDevelopmentMethods,SDFDevelopmentMethodsTopicProgramCorrectness}{<<Correct handling of exceptions and unexpected behaviors>>}	\LO{IAS}{DefensiveProgramming}{Core-Tier1}{Usage}{DemonstrateTheGraceful}{<<Demostrar la identificación y el manejo elegante de las condiciones de error.>>}
\KUItem{IAS}{DefensiveProgramming}{Core-Tier2}{CorrectUsage}{SDFDevelopmentMethodsm,SDFDevelopmentMethodsTopicProgramCorrectness}{<<Correct usage of third-party components>>}	\LO{IAS}{DefensiveProgramming}{Core-Tier2}{Familiarity}{ExplainTheMisusing}{<<Explique los riesgos de mal uso de las interfaces con código de terceros y cómo utilizar correctamente el código de terceros.>>}
\KUItem{IAS}{DefensiveProgramming}{Core-Tier2}{Effectively}{OSSecurityandProtection,OSSecurityandProtectionTopicSecurityMethods}{<<Effectively deploying security updates>>}	\LO{IAS}{DefensiveProgramming}{Core-Tier2}{Familiarity}{DiscussTheUpdate}{<<Discutir la necesidad de actualizar el software para corregir las vulnerabilidades de seguridad y la gestión del ciclo de vida de la corrección.>>}
\KUItem{IAS}{DefensiveProgramming}{Elective}{Information}{}{<<Information flow control>>}	\LO{IAS}{DefensiveProgramming}{Elective}{Familiarity}{ListExamples}{<<Listar ejemplos de flujos de información directa e indirecta.>>}
\KUItem{IAS}{DefensiveProgramming}{Elective}{Correctly}{}{<<Correctly generating randomness for security purposes>>}	\LO{IAS}{DefensiveProgramming}{Elective}{Familiarity}{ExplainTheRandom}{<<Explicar la función de números aleatorios en la seguridad, más allá de la criptografía (por ejemplo, la generación de contraseñas, algoritmos aleatorios para evitar la negación algorítmica de los ataques del servicio).>>}
\KUItem{IAS}{DefensiveProgramming}{Elective}{Mechanisms}{}{<<Mechanisms for detecting and mitigating input and data sanitization errors>>}	\LO{IAS}{DefensiveProgramming}{Elective}{Familiarity}{ExplainTheOfDetecting}{<<Explicar los diferentes tipos de mecanismos para detectar y mitigar los errores de desinfección de datos.>>}
\KUItem{IAS}{DefensiveProgramming}{Elective}{Fuzzing}{}{<<Fuzzing>>}	\LO{IAS}{DefensiveProgramming}{Elective}{Usage}{DemonstrateHowTested}{<<Demostrar cómo se prueban los programas para el manejo de errores de entrada.>>}
\KUItem{IAS}{DefensiveProgramming}{Elective}{Static}{}{<<Static analysis and dynamic analysis>>}	\LO{IAS}{DefensiveProgramming}{Elective}{Usage}{UseStatic}{<<Usar herramientas estáticas y dinámicas para identificar errores de programación.>>}
\KUItem{IAS}{DefensiveProgramming}{Elective}{Program}{}{<<Program verification>>}	\LO{IAS}{DefensiveProgramming}{Elective}{Familiarity}{DescribeHowIsProtect}{<<Describir cómo se utiliza la arquitectura de memoria para proteger de ataques en tiempo de ejecución>>}
\KUItem{IAS}{DefensiveProgramming}{Elective}{Operating}{}{<<Operating system support (e.g., address space randomization, canaries)>>}	
\KUItem{IAS}{DefensiveProgramming}{Elective}{Hardware}{}{<<Hardware support (e.g, DEP, TPM)>>}	
	
\KU{IAS}{ThreatsandAttacks}{<<Threats and Attacks>>}{}{0}{1}	
\KUDescription{IAS}{ThreatsandAttacks}{<<~>>}	
\KUItem{IAS}{ThreatsandAttacks}{Core-Tier2}{Attacker}{}{<<Attacker goals, capabilities, and motivations (such as underground economy, digital espionage, cyberwarfare, insider threats, hacktivism, advanced persistent threats)>>}	\LO{IAS}{ThreatsandAttacks}{Core-Tier2}{Familiarity}{DescribeLikely}{<<Describir tipos de ataques similares en contra de un sistema en particular.>>}
\KUItem{IAS}{ThreatsandAttacks}{Core-Tier2}{Examples}{}{<<Examples of malware (e.g., viruses, worms, spyware, botnets, Trojan horses or rootkits)>>}	\LO{IAS}{ThreatsandAttacks}{Core-Tier2}{Familiarity}{DiscussTheMalware}{<<Discutir los limitantes de las medidas en contra del malware (ejm. detección basada en firmas, detección de comportamiento).>>}
\KUItem{IAS}{ThreatsandAttacks}{Core-Tier2}{Denial}{}{<<Denial of Service (DoS) and Distributed Denial of Service (DDoS)>>}	\LO{IAS}{ThreatsandAttacks}{Core-Tier2}{Familiarity}{IdentifyInstances}{<<Identificar las instancias de los ataques de ingeniería social y de los ataques de negación de servicios.>>}
\KUItem{IAS}{ThreatsandAttacks}{Core-Tier2}{Social}{SPSocialContext,HCIDesigningInteraction,SPSocialContextTopicSocialImplications,HCIDesigningInteractionTopicHandling}{<<Social engineering (e.g., phishing)>>}	\LO{IAS}{ThreatsandAttacks}{Core-Tier2}{Familiarity}{DiscussHowService}{<<Discutir como los ataques de negación de servicos puede ser identificados y reducido.>>}
\KUItem{IAS}{ThreatsandAttacks}{Elective}{Attacks}{HCIFoundations,SPPrivacyandCivilLiberties,HCIFoundationsTopicSocial,SPPrivacyandCivilLibertiesTopicTechnology}{<<Attacks on privacy and anonymity >>}	\LO{IAS}{ThreatsandAttacks}{Elective}{Familiarity}{DescribeRisks}{<<Describir los riesgos de la privacidad y del anonimato en aplicaciones comunmente usadas.>>}
\KUItem{IAS}{ThreatsandAttacks}{Elective}{Malware}{}{<<Malware/unwanted communication such as covert channels and steganography>>}	\LO{IAS}{ThreatsandAttacks}{Elective}{Familiarity}{DiscussTheCovert}{<<Discutir los conceptos de conversión de canales y otros procedimientos de filtrado de datos.>>}
	
\KU{IAS}{NetworkSecurity}{<<Network Security>>}{}{0}{2}	
\KUDescription{IAS}{NetworkSecurity}{<<Discussion of network security relies on previous understanding on fundamental concepts of networking, including protocols, such as TCP/IP, and network architecture/organization /cross-reference{NC/Network Communication} >>}	
\KUItem{IAS}{NetworkSecurity}{Core-Tier2}{Network}{}{<<Network specific threats and attack types (e.g., denial of service, spoofing, sniffing and traffic redirection, man-in-the-middle, message integrity attacks, routing attacks, and traffic analysis)>>}	\LO{IAS}{NetworkSecurity}{Core-Tier2}{Familiarity}{DescribeTheOfAnd}{<<Describir las diferentes categorías de amenazas y ataques en redes.>>}
\KUItem{IAS}{NetworkSecurity}{Core-Tier2}{Use}{}{<<Use of cryptography for data and network security>>}	\LO{IAS}{NetworkSecurity}{Core-Tier2}{Familiarity}{DescribeThePublic}{<<Describir las arquitecturas de criptografía de clave pública y privada y cómo las ICP brindan apoyo a la seguridad en redes.>>}
\KUItem{IAS}{NetworkSecurity}{Core-Tier2}{Architectures}{}{<<Architectures for secure networks (e.g., secure channels, secure routing protocols, secure DNS, VPNs, anonymous communication protocols, isolation) >>}	\LO{IAS}{NetworkSecurity}{Core-Tier2}{Familiarity}{DescribeVirtues}{<<Describir ventajas y limitaciones de las tecnologías de seguridad en cada capa de una torre de red.>>}
\KUItem{IAS}{NetworkSecurity}{Core-Tier2}{Defense}{}{<<Defense mechanisms and countermeasures (e.g., network monitoring, intrusion detection, firewalls, spoofing and DoS protection, honeypots, tracebacks)>>}	\LO{IAS}{NetworkSecurity}{Core-Tier2}{Familiarity}{IdentifyTheMechanism}{<<Identificar los adecuados mecanismos de defensa y sus limitaciones dada una amenaza de red.>>}
\KUItem{IAS}{NetworkSecurity}{Elective}{Security}{NCMobility,NCMobility,NCMobilityTopicPrinciplesOfCellular,NCMobilityTopic802.11}{<<Security for wireless, cellular networks>>}	\LO{IAS}{NetworkSecurity}{Elective}{Familiarity}{DiscussSecurity}{<<Discutir las propiedades de la seguridad y sus limitaciones de redes no cableadas.>>}
\KUItem{IAS}{NetworkSecurity}{Elective}{Other}{}{<<Other non-wired networks (e.g., ad hoc, sensor, and vehicular networks) >>}	\LO{IAS}{NetworkSecurity}{Elective}{Familiarity}{IdentifyTheFaced}{<<Identificar amenazas adicionales que enfrentan las redes no cableadas.>>}
\KUItem{IAS}{NetworkSecurity}{Elective}{Censorship}{}{<<Censorship resistance>>}	\LO{IAS}{NetworkSecurity}{Elective}{Familiarity}{DescribeThreats}{<<Describir amenazas que pueden y no pueden ser protegidas en contra del uso de canales de comunicación seguros.>>}
\KUItem{IAS}{NetworkSecurity}{Elective}{Operational}{}{<<Operational network security management (e.g., configure network access control)>>}	\LO{IAS}{NetworkSecurity}{Elective}{Familiarity}{SummarizeDefenses}{<<Resumir las defensas en contra de la censura en redes.>>}
	\LO{IAS}{NetworkSecurity}{Elective}{Familiarity}{Diagram}{<<Diagramar una red de seguridad.>>}
	
\KU{IAS}{Cryptography}{<<Cryptography>>}{}{0}{1}	
\KUDescription{IAS}{Cryptography}{<<~>>}	
\KUItem{IAS}{Cryptography}{Core-Tier2}{Basic}{}{<<Basic Cryptography Terminology covering notions pertaining to the different (communication) partners, secure/unsecure channel, attackers and their capabilities, encryption, decryption, keys and their characteristics, signatures>>}	\LO{IAS}{Cryptography}{Core-Tier2}{Familiarity}{DescribeTheCryptography}{<<Describir el propósito de la Criptografía y listar formas en las cuales es usada en comunicación de datos.>>}
\KUItem{IAS}{Cryptography}{Core-Tier2}{Cipher}{}{<<Cipher types (e.g., Caesar cipher, affine cipher) together with typical attack methods such as frequency analysis>>}	\LO{IAS}{Cryptography}{Core-Tier2}{Familiarity}{DefineTheCipher}{<<Definir los siguientes términos: Cifrado, Criptoanálisis, Algorítmo Criptográfico, y Criptología y describe dos métodos básicos (cifrados) para transformar texto plano en un texto cifrado.>>}
\KUItem{IAS}{Cryptography}{Core-Tier2}{Public}{}{<<Public Key Infrastructure support for digital signature and encryption and its challenges>>}	\LO{IAS}{Cryptography}{Core-Tier2}{Familiarity}{DiscussThePrime}{<<Discutir la importancia de los números primos en criptografía y explicar su uso en algoritmos criptográficos.>>}
\KUItem{IAS}{Cryptography}{Elective}{Mathematical}{}{<<Mathematical Preliminaries essential for cryptography, including topics in linear algebra, number theory, probability theory, and statistics>>}	\LO{IAS}{Cryptography}{Core-Tier2}{Familiarity}{ExplainHowInfrastructure}{<<Explicar como una infraestructura de Clave Pública soporta firmas digitales y encriptación y discutir sus limitaciones/vulnerabilidades.>>}
"\KUItem{IAS}{Cryptography}{Elective}{Cryptographic}{}{<<Cryptographic primitives: 
\begin{subtopics}
\item pseudo-random generators and stream ciphers 
\item block ciphers (pseudo-random permutations), e.g., AES 
\item pseudo-random functions 
\item hash functions, e.g., SHA2, collision resistance 
\item message authentication codes 
\item key derivations functions
\end{subtopics}>>}"	\LO{IAS}{Cryptography}{Elective}{Usage}{UseCryptographic}{<<Usar primitivas criptográficas y sus propiedades básicas.>>}
"\KUItem{IAS}{Cryptography}{Elective}{Symmetric}{}{<<Symmetric key cryptography 
\begin{subtopics}
\item Perfect secrecy and the one time pad 
\item  Modes of operation for semantic security and authenticated encryption (e.g., encrypt-then-MAC, OCB, GCM) 
\item  Message integrity (e.g., CMAC, HMAC) 
\end{subtopics}>>}"	\LO{IAS}{Cryptography}{Elective}{Usage}{IllustrateHow}{<<Ilustrar como medir la entropía y como generar aleatoriedad criptográfica.>>}
"\KUItem{IAS}{Cryptography}{Elective}{PublicKey}{}{<<Public key cryptography: 
\begin{subtopics}
\item Trapdoor permutation, e.g., RSA 
\item Public key encryption, e.g., RSA encryption, EI Gamal encryption 
\item  Digital signatures 
\item  Public-key infrastructure (PKI) and certificates 
\item  Hardness assumptions, e.g., Diffie-Hellman, integer factoring
\end{subtopics}>>}"	\LO{IAS}{Cryptography}{Elective}{Usage}{UsePublic}{<<Usa primitivas de clave pública y sus aplicaciones.>>}
\KUItem{IAS}{Cryptography}{Elective}{Authenticated}{}{<<Authenticated key exchange protocols, e.g., TLS>>}	\LO{IAS}{Cryptography}{Elective}{Familiarity}{ExplainHowProtocols}{<<Explicar como los protocolos de intercambio de claves trabajan y como es que pueden fallar.>>}
\KUItem{IAS}{Cryptography}{Elective}{CryptographicProtocols}{}{<<Cryptographic protocols: challenge-response authentication, zero-knowledge protocols, commitment, oblivious transfer, secure 2-party or multi-party computation, secret sharing, and applications>>}	\LO{IAS}{Cryptography}{Elective}{Familiarity}{DiscussCryptographic}{<<Discutir protocolos criptográficos y sus propiedades.>>}
\KUItem{IAS}{Cryptography}{Elective}{Motivate}{}{<<Motivate concepts using real-world applications, e.g., electronic cash, secure channels between clients and servers, secure electronic mail, entity authentication, device pairing, voting systems.>>}	\LO{IAS}{Cryptography}{Elective}{Familiarity}{DescribeReal}{<<Describir aplicaciones del mundo real de primitivas criptográficas y sus protocolos.>>}
"\KUItem{IAS}{Cryptography}{Elective}{Security}{}{<<Security definitions and attacks on cryptographic primitives: 
\begin{subtopics}
\item Goals: indistinguishability, unforgeability, collision-resistance 
\item Attacker capabilities: chosen-message attack (for signatures), birthday attacks, side channel attacks, fault injection attacks. 
\end{subtopics}>>}"	\LO{IAS}{Cryptography}{Elective}{Familiarity}{SummarizePrecise}{<<Resumir definiciones precisas de seguridad, capacidades de ataque y sus metas.>>}
\KUItem{IAS}{Cryptography}{Elective}{CryptographicStandards}{}{<<Cryptographic standards and references implementations>>}	\LO{IAS}{Cryptography}{Elective}{Usage}{ApplyAppropriate}{<<Aplicar técnicas conocidas y apropiadas de criptografía para un escenario determinado.>>}
\KUItem{IAS}{Cryptography}{Elective}{Quantum}{}{<<Quantum cryptography>>}	\LO{IAS}{Cryptography}{Elective}{Familiarity}{Appreciate}{<<Apreciar los peligros de inventarse cada uno sus propios métodos criptográficos.>>}
	\LO{IAS}{Cryptography}{Elective}{Familiarity}{DescribeQuantum}{<<Describir la criptografía cuántica y el impacto de la computación cuántica en algoritmos criptográficos.>>}
	
\KU{IAS}{WebSecurity}{<<Web Security>>}{}{0}{0}	
\KUDescription{IAS}{WebSecurity}{<<~>>}	
"\KUItem{IAS}{WebSecurity}{Elective}{Web}{}{<<Web security model 
\begin{subtopics}
\item Browser security model including same-origin policy 
\item Client-server trust boundaries, e.g., cannot rely on secure execution in the client
\end{subtopics}>>}"	\LO{IAS}{WebSecurity}{Elective}{Familiarity}{DescribeTheModel}{<<Describe el modelo de seguridad de los navegadores incluyendo las políticas del mismo origen y modelos de amenazas en seguridad web.>>}
"\KUItem{IAS}{WebSecurity}{Elective}{Session}{}{<<Session management, authentication 
\begin{subtopics}
\item Single sign-on 
\item HTTPS and certificates 
\end{subtopics}>>}"	\LO{IAS}{WebSecurity}{Elective}{Familiarity}{DiscussTheWeb}{<<Discutir los conceptos de sesiones web, canales de comunicación seguros tales como Seguridad en la Capa de Transporte({\it TLS}) y la importancia de certificados de seguridad, autenticación incluyendo inicio de sesión único, como OAuth y Lenguaje de Marcado para Confirmaciones de Seguridad({\it SAML}).>>}
"\KUItem{IAS}{WebSecurity}{Elective}{Application}{}{<<Application vulnerabilities and defenses 
\begin{subtopics}
\item SQL injection 
\item XSS 
\item CSRF
\end{subtopics}>>}"	\LO{IAS}{WebSecurity}{Elective}{Familiarity}{Investigate}{<<Investigar los tipos comunes de vulnerabilidades y ataques en las aplicaciones web, y defensas contra ellos.>>}
"\KUItem{IAS}{WebSecurity}{Elective}{Client}{}{<<Client-side security 
\begin{subtopics}
\item Cookies security policy 
\item HTTP security extensions, e.g. HSTS 
\item Plugins, extensions, and web apps 
\item Web user tracking 
\end{subtopics}>>}"	\LO{IAS}{WebSecurity}{Elective}{Usage}{UseClient}{<<Utilice las funciones de seguridad del lado del cliente.>>}
\KUItem{IAS}{WebSecurity}{Elective}{Server}{}{<<Server-side security tools, e.g. Web Application Firewalls (WAFs) and fuzzers>>}	
	
\KU{IAS}{PlatformSecurity}{<<Platform Security>>}{}{0}{0}	
\KUDescription{IAS}{PlatformSecurity}{<<~>>}	
\KUItem{IAS}{PlatformSecurity}{Elective}{Code}{}{<<Code integrity and code signing>>}	\LO{IAS}{PlatformSecurity}{Elective}{Familiarity}{ExplainTheCode}{<<Explica el concepto de integridad de código y firma de códigos, así como el alcance al cual se aplica.>>}
\KUItem{IAS}{PlatformSecurity}{Elective}{Secure}{}{<<Secure boot, measured boot, and root of trust>>}	\LO{IAS}{PlatformSecurity}{Elective}{Familiarity}{DiscussTheRoot}{<<Discute los conceptos del origen de la confidencialidad y el de los procesos de arranque y carga segura.>>}
\KUItem{IAS}{PlatformSecurity}{Elective}{Attestation}{}{<<Attestation>>}	\LO{IAS}{PlatformSecurity}{Elective}{Familiarity}{DescribeTheRemote}{<<Describe los mecanismos de arresto remoto de la integridad de un sistema.>>}
\KUItem{IAS}{PlatformSecurity}{Elective}{Tpm}{}{<<TPM and secure co-processors>>}	\LO{IAS}{PlatformSecurity}{Elective}{Familiarity}{SummarizeTheKey}{<<Resume las metas y las primitivas claves de los modelos de plataforma confiable (TPM).>>}
\KUItem{IAS}{PlatformSecurity}{Elective}{Security}{}{<<Security threats from peripherals, e.g., DMA, IOMMU>>}	\LO{IAS}{PlatformSecurity}{Elective}{Familiarity}{IdentifyThePlugging}{<<Identifica las amenazas de conectar periféricos en un dispositivo.>>}
\KUItem{IAS}{PlatformSecurity}{Elective}{Physical}{}{<<Physical attacks: hardware Trojans, memory probes, cold boot attacks>>}	\LO{IAS}{PlatformSecurity}{Elective}{Familiarity}{IdentifyPhysical}{<<Identifica ataques físicos y sus medidas de control.>>}
\KUItem{IAS}{PlatformSecurity}{Elective}{SecurityOf}{}{<<Security of embedded devices, e.g., medical devices, cars>>}	\LO{IAS}{PlatformSecurity}{Elective}{Familiarity}{IdentifyAttacks}{<<Identifica ataques en plataformas con hardware que no son del tipo PC.>>}
\KUItem{IAS}{PlatformSecurity}{Elective}{Trusted}{}{<<Trusted path>>}	\LO{IAS}{PlatformSecurity}{Elective}{Familiarity}{DiscussTheImportance}{<<Discute los conceptos y la importancia de ruta confiable.>>}
	
\KU{IAS}{SecurityPolicyandGovernance}{<<Security Policy and Governance>>}{}{0}{0}	
\KUDescription{IAS}{SecurityPolicyandGovernance}{<<See general \xref{SPSecurityPoliciesLawsandComputerCrimes}>>}	
\KUItem{IAS}{SecurityPolicyandGovernance}{Elective}{Privacy}{SPSocialContext,SPProfessionalEthics,SPPrivacyandCivilLiberties,SPSocialContextTopicSocialImplications,SPProfessionalEthicsTopicAccountability,SPPrivacyandCivilLibertiesTopicLegalFoundationsOf}{<<Privacy policy>>}	\LO{IAS}{SecurityPolicyandGovernance}{Elective}{Familiarity}{DescribeThePrivacy}{<<Describe el concepto de privacidad incluyendo información privada personal, violaciones potenciales de privacidad debido a mecanismos de seguridad, y describe como los mecanismos de protección de la privacidad se ejecutan en conflicto con los mecanismos de seguridad.>>}
\KUItem{IAS}{SecurityPolicyandGovernance}{Elective}{Inference}{}{<<Inference controls/statistical disclosure limitation>>}	\LO{IAS}{SecurityPolicyandGovernance}{Elective}{Familiarity}{DescribeHowCanSecret}{<<Describe como un atacante puede descubrir un secreto al interactuar con una base de datos.>>}
\KUItem{IAS}{SecurityPolicyandGovernance}{Elective}{Backup}{}{<<Backup policy, password refresh policy>>}	\LO{IAS}{SecurityPolicyandGovernance}{Elective}{Familiarity}{ExplainHowAPolicy}{<<Explica como configurar una política de respaldo de datos o política de actualización de claves.>>}
\KUItem{IAS}{SecurityPolicyandGovernance}{Elective}{Breach}{}{<<Breach disclosure policy>>}	\LO{IAS}{SecurityPolicyandGovernance}{Elective}{Familiarity}{DiscussHowA}{<<Discute como configurar una política en caso de revelación de la información.>>}
\KUItem{IAS}{SecurityPolicyandGovernance}{Elective}{Data}{}{<<Data collection and retention policies>>}	\LO{IAS}{SecurityPolicyandGovernance}{Elective}{Familiarity}{DescribeTheData}{<<Describe las consecuencias del políticas de retención de datos.>>}
\KUItem{IAS}{SecurityPolicyandGovernance}{Elective}{Supply}{}{<<Supply chain policy>>}	\LO{IAS}{SecurityPolicyandGovernance}{Elective}{Familiarity}{IdentifyTheRelying}{<<Identifica los riesgos de basarse en productos externos.>>}
\KUItem{IAS}{SecurityPolicyandGovernance}{Elective}{Cloud}{}{<<Cloud security tradeoffs>>}	\LO{IAS}{SecurityPolicyandGovernance}{Elective}{Familiarity}{IdentifyTheBenefits}{<<Identifica los riesgos y beneficios de emplear outsourcing en la nube.>>}
	
\KU{IAS}{DigitalForensics}{<<Digital Forensics>>}{}{0}{0}	
\KUDescription{IAS}{DigitalForensics}{<<~>>}	
\KUItem{IAS}{DigitalForensics}{Elective}{Basic}{}{<<Basic Principles and methodologies for digital forensics>>}	\LO{IAS}{DigitalForensics}{Elective}{Familiarity}{DescribeWhat}{<<Describe qué es una investigación digital, las fuentes de evidencia digital, y los límites de técnicas forenses.>>}
\KUItem{IAS}{DigitalForensics}{Elective}{Design}{}{<<Design systems with forensic needs in mind>>}	\LO{IAS}{DigitalForensics}{Elective}{Familiarity}{ExplainHowSoftware}{<<Explica como diseñar software de apoyo a técnicas forenses.>>}
\KUItem{IAS}{DigitalForensics}{Elective}{Rules}{}{<<Rules of Evidence - general concepts and differences between jurisdictions and Chain of Custody>>}	\LO{IAS}{DigitalForensics}{Elective}{Familiarity}{DescribeTheForSeized}{<<Describe los requisitos legales para usar datos recuperados.>>}
\KUItem{IAS}{DigitalForensics}{Elective}{Search}{}{<<Search and Seizure of evidence: legal and procedural requirements>>}	\LO{IAS}{DigitalForensics}{Elective}{Familiarity}{DescribeTheEvidence}{<<Describe el proceso de recolección de evidencia desde el tiempo en que se identifico el requisito hasta la colocación de los datos.>>}
\KUItem{IAS}{DigitalForensics}{Elective}{Digital}{}{<<Digital Evidence methods and standards>>}	\LO{IAS}{DigitalForensics}{Elective}{Familiarity}{DescribeHowIsThe}{<<Describe como se realiza la recolección de datos y el adecuado almacenamiento de los datos originales y de la copia forense.>>}
\KUItem{IAS}{DigitalForensics}{Elective}{Techniques}{}{<<Techniques and standards for Preservation of Data>>}	\LO{IAS}{DigitalForensics}{Elective}{Usage}{ConductData}{<<Realiza recolección de datos en un disco duro.>>}
\KUItem{IAS}{DigitalForensics}{Elective}{Legal}{}{<<Legal and Reporting Issues including working as an expert witness>>}	\LO{IAS}{DigitalForensics}{Elective}{Familiarity}{DescribeA}{<<Describe la responsabilidad y obligación de una persona mientras testifica como un examinador forense.>>}
\KUItem{IAS}{DigitalForensics}{Elective}{Os}{}{<<OS/File System Forensics>>}	\LO{IAS}{DigitalForensics}{Elective}{Usage}{Recover}{<<Recupera datos basados en un determinado término de búsqueda en una imagen del sistema.>>}
\KUItem{IAS}{DigitalForensics}{Elective}{Application}{}{<<Application Forensics>>}	\LO{IAS}{DigitalForensics}{Elective}{Usage}{Reconstruct}{<<Reconstruye el historial de una aplicación a partir de los artefactos de la aplicación.>>}
\KUItem{IAS}{DigitalForensics}{Elective}{Web}{}{<<Web Forensics>>}	\LO{IAS}{DigitalForensics}{Elective}{Usage}{ReconstructWeb}{<<Reconstruye el historial de navegación web de los artefactos web.>>}
\KUItem{IAS}{DigitalForensics}{Elective}{Network}{}{<<Network Forensics>>}	\LO{IAS}{DigitalForensics}{Elective}{Usage}{Capture}{<<Captura e interpreta el tráfico de red.>>}
\KUItem{IAS}{DigitalForensics}{Elective}{Mobile}{}{<<Mobile Device Forensics>>}	\LO{IAS}{DigitalForensics}{Elective}{Familiarity}{DiscussTheWith}{<<Discute los retos asociados con técnicas forenses de dispositivos móviles.>>}
\KUItem{IAS}{DigitalForensics}{Elective}{Computer}{}{<<Computer/network/system attacks>>}	\LO{IAS}{DigitalForensics}{Elective}{Usage}{Inspect}{<<Inspecciona un sistema (red, computadora, o aplicación) para determinar la presencia de malware o de actividad maliciosa.>>}
\KUItem{IAS}{DigitalForensics}{Elective}{Attack}{}{<<Attack detection and investigation>>}	\LO{IAS}{DigitalForensics}{Elective}{Usage}{ApplyForensics}{<<Aplica herramientas forenses a fin de investigar fugas en la seguridad.>>}
\KUItem{IAS}{DigitalForensics}{Elective}{Anti}{}{<<Anti-forensics>>}	\LO{IAS}{DigitalForensics}{Elective}{Familiarity}{IdentifyAnti}{<<Identifica métodos anti-forenses.>>}
	
\KU{IAS}{SecureSoftwareEngineering}{<<Secure Software Engineering>>}{}{0}{0}	
\KUDescription{IAS}{SecureSoftwareEngineering}{<<Fundamentals of secure coding practices covered in other knowledge areas, including SDF and SE. For example, \xref{SESoftwareConstruction}, \xref{SESoftwareVerificationandValidation}>>}	
\KUItem{IAS}{SecureSoftwareEngineering}{Elective}{Building}{SESoftwareProcesses,SESoftwareProcesses}{<<Building security into the software development lifecycle>>}	\LO{IAS}{SecureSoftwareEngineering}{Elective}{Familiarity}{DescribeTheIntegrating}{<<Describir los requisitos para la integración de la seguridad en el SDL.>>}
\KUItem{IAS}{SecureSoftwareEngineering}{Elective}{Secure}{}{<<Secure design principles and patterns>>}	\LO{IAS}{SecureSoftwareEngineering}{Elective}{Usage}{ApplyTheThe}{<<Aplicar los conceptos de los principios de diseño para mecanismos de protección, los principios para seguridad de software (Viega and McGraw) y los principios de diseño de seguridad (Morrie Gasser) en un proyecto de desarrollo de software.>>}
\KUItem{IAS}{SecureSoftwareEngineering}{Elective}{SecureSoftware}{}{<<Secure software specifications and requirements>>}	\LO{IAS}{SecureSoftwareEngineering}{Elective}{Usage}{DevelopSpecifications}{<<Desarrollar especificaciones para un esfuerzo de desarrollo de software que especifica completamente los requisitos funcionales y se identifican las rutas de ejecución esperadas.>>}
\KUItem{IAS}{SecureSoftwareEngineering}{Elective}{SecureSoftwareDevelopment}{SESoftwareConstruction,SESoftwareConstruction}{<<Secure software development practices>>}	\LO{IAS}{SecureSoftwareEngineering}{Elective}{Familiarity}{DescribeSoftware}{<<Describir las mejores prácticas de desarrollo de software para minimizar las vulnerabilidades en el código de programación.>>}
\KUItem{IAS}{SecureSoftwareEngineering}{Elective}{SecureTesting}{}{<<Secure testing- the process of testing that security requirements are met (including static and dynamic analysis).>>}	\LO{IAS}{SecureSoftwareEngineering}{Elective}{Usage}{ConductA}{<<Llevar a cabo una verificación de seguridad y la evaluación (estático y dinámico) de una aplicación de software.>>}
\KUItem{IAS}{SecureSoftwareEngineering}{Elective}{Software}{}{<<Software quality assurance and benchmarking measurements>>}	
	
\KA{IM}{<<Gestión de la información.>>}{}	
"\KADescription{IM}{<<Information Management is primarily concerned with the capture, digitization, representation, organization, transformation, and presentation of information; algorithms for efficient and effective access and updating of stored information; data modeling and abstraction; and physical file storage techniques. The student needs to be able to develop conceptual and physical data models, determine whichIM methods and techniques are appropriate for a given problem, and be able to select and implement an appropriate IM solution that addresses relevant design concerns including scalability, accessibility and usability.

We also note that IM is related to fundamental information security concepts that are described in the Information Assurance and Security (IAS) topic area, IAS/Fundamental Concepts. >>}"	
	
\KU{IM}{InformationManagementConcepts}{<<Information Management Concepts>>}{}{1}{2}	
\KUDescription{IM}{InformationManagementConcepts}{<<~>>}	
\KUItem{IM}{InformationManagementConcepts}{Core-Tier1}{Information}{}{<<Information systems as socio-technical systems>>}	\LO{IM}{InformationManagementConcepts}{Core-Tier1}{Familiarity}{DescribeHowAccess}{<<Describir cómo los seres humanos obtienen acceso a información y datos para apoyar sus necesidades.>>}
\KUItem{IM}{InformationManagementConcepts}{Core-Tier1}{Basic}{}{<<Basic information storage and retrieval (IS\&R) concepts>>}	\LO{IM}{InformationManagementConcepts}{Core-Tier1}{Assessment}{DescribeTheDisadvantages}{<<Describir las ventajas y desventajas del control organizacional central sobre los datos.>>}
\KUItem{IM}{InformationManagementConcepts}{Core-Tier1}{InformationCapture}{}{<<Information capture and representation>>}	\LO{IM}{InformationManagementConcepts}{Core-Tier1}{Familiarity}{IdentifyTheAssociated}{<<Identificar las carreras/roles asociados con la gestión de la información (por ejemplo, el administrador de base de datos, modelador de datos, desarrollador de la aplicación, el usuario final).>>}
\KUItem{IM}{InformationManagementConcepts}{Core-Tier1}{Supporting}{}{<<Supporting human needs: searching, retrieving, linking, browsing, navigating>>}	\LO{IM}{InformationManagementConcepts}{Core-Tier1}{Assessment}{CompareAndWith}{<<Comparar y contrastar información con los datos y el conocimiento.>>}
\KUItem{IM}{InformationManagementConcepts}{Core-Tier2}{InformationManagement}{}{<<Information management applications>>}	\LO{IM}{InformationManagementConcepts}{Core-Tier1}{Usage}{DemonstrateUses}{<<Demostrar usos del almacenamiento explicito de metadata/esquemas asociados con los datos.>>}
\KUItem{IM}{InformationManagementConcepts}{Core-Tier2}{Declarative}{}{<<Declarative and navigational queries, use of links>>}	\LO{IM}{InformationManagementConcepts}{Core-Tier1}{Familiarity}{IdentifyIssues}{<<Identificar problemas de la persistencia de datos para una organización.>>}
\KUItem{IM}{InformationManagementConcepts}{Core-Tier2}{Analysis}{}{<<Analysis and indexing>>}	\LO{IM}{InformationManagementConcepts}{Core-Tier2}{Assessment}{Critique}{<<Critique una solicitud de información con respecto a satisfacer las necesidades de información del usuario.>>}
\KUItem{IM}{InformationManagementConcepts}{Core-Tier2}{Quality}{}{<<Quality issues: reliability, scalability, efficiency, and effectiveness>>}	\LO{IM}{InformationManagementConcepts}{Core-Tier2}{Familiarity}{ExplainUses}{<<Explicar los usos de las consultas declarativas.>>}
	\LO{IM}{InformationManagementConcepts}{Core-Tier2}{Familiarity}{GiveA}{<<Dar una versión declarativa para una consulta de navegación.>>}
	\LO{IM}{InformationManagementConcepts}{Core-Tier2}{Familiarity}{DescribeSeveralTo}{<<Describir varias soluciones técnicas a los problemas relacionados con la privacidad de la información, integridad, seguridad y preservación.>>}
	\LO{IM}{InformationManagementConcepts}{Core-Tier2}{Familiarity}{ExplainMeasures}{<<Explicar medidas de eficiencia (rendimiento, tiempo de respuesta) y efectividad (llamada, precisión).>>}
	\LO{IM}{InformationManagementConcepts}{Core-Tier2}{Familiarity}{DescribeApproaches}{<<Describir métodos para aumentar la escala de los sistemas de información.>>}
	\LO{IM}{InformationManagementConcepts}{Core-Tier2}{Usage}{IdentifyVulnerabilities}{<<Identificar las vulnerabilidades y escenarios de fallo en las formas comunes de los sistemas de información.>>}
	
\KU{IM}{DatabaseSystems}{<<Database Systems>>}{}{0}{3}	
\KUDescription{IM}{DatabaseSystems}{<<~>>}	
\KUItem{IM}{DatabaseSystems}{Core-Tier2}{Approaches}{}{<<Approaches to and evolution of database systems>>}	\LO{IM}{DatabaseSystems}{Core-Tier2}{Familiarity}{ExplainTheDistinguish}{<<Explica las características que distinguen un esquema de base de datos de aquellos basados en la programación de archivos de datos.>>}
\KUItem{IM}{DatabaseSystems}{Core-Tier2}{Components}{}{<<Components of database systems>>}	\LO{IM}{DatabaseSystems}{Core-Tier2}{Familiarity}{DescribeTheDesigns}{<<Describe los diseños más comunes para los componentes base de sistemas de bases de datos incluyendo el optimizador de consultas, ejecutor de consultas, administrador de almacenamiento, métodos de acceso y procesador de transacciones.>>}
\KUItem{IM}{DatabaseSystems}{Core-Tier2}{Design}{}{<<Design of core DBMS functions (e.g., query mechanisms, transaction management, buffer management, access methods)>>}	\LO{IM}{DatabaseSystems}{Core-Tier2}{Familiarity}{Cite}{<<Cita las metas básicas, funciones y modelos de un sistema de bases de datos.>>}
\KUItem{IM}{DatabaseSystems}{Core-Tier2}{Database}{}{<<Database architecture and data independence>>}	\LO{IM}{DatabaseSystems}{Core-Tier2}{Familiarity}{DescribeTheA}{<<Describe los componentes de un sistema de bases datos y da ejemplos de su uso.>>}
\KUItem{IM}{DatabaseSystems}{Core-Tier2}{Use}{}{<<Use of a declarative query language>>}	\LO{IM}{DatabaseSystems}{Core-Tier2}{Familiarity}{IdentifyMajor}{<<Identifica las funciones principales de un SGBD y describe sus roles en un sistema de bases de datos.>>}
\KUItem{IM}{DatabaseSystems}{Core-Tier2}{Systems}{}{<<Systems supporting structured and/or stream content>>}	\LO{IM}{DatabaseSystems}{Core-Tier2}{Familiarity}{ExplainTheData}{<<Explica los conceptos de independencia de datos y su importancia en un sistema de bases de datos.>>}
\KUItem{IM}{DatabaseSystems}{Elective}{ApproachesFor}{}{<<Approaches for managing large volumes of data (e.g., noSQL database systems, use of MapReduce).>>}	\LO{IM}{DatabaseSystems}{Core-Tier2}{Usage}{UseALanguage}{<<Usa un lenguaje de consulta declarativo para recoger información de una base de datos.>>}
	\LO{IM}{DatabaseSystems}{Core-Tier2}{Familiarity}{DescribeFacilities}{<<Describe las capacidades que las bases de datos brindan al apoyar estructuras y/o la secuencia de flujo de datos, ejm. texto.>>}
	\LO{IM}{DatabaseSystems}{Elective}{Familiarity}{DescribeMajor}{<<Describe los enfoques principales para almacenar y procesar larges volúmenes de datos.>>}
	
\KU{IM}{DataModeling}{<<Data Modeling>>}{}{0}{4}	
\KUDescription{IM}{DataModeling}{<<~>>}	
\KUItem{IM}{DataModeling}{Core-Tier2}{Data}{}{<<Data modeling>>}	\LO{IM}{DataModeling}{Core-Tier2}{Assessment}{CompareAndData}{<<Compare y contrasta modelos apropiados de datos, incluyendo estructuras sus estructuras internas, para diversos tipos de datos.>>}
\KUItem{IM}{DataModeling}{Core-Tier2}{Conceptual}{}{<<Conceptual models (e.g., entity-relationship, UML diagrams)>>}	\LO{IM}{DataModeling}{Core-Tier2}{Familiarity}{DescribeConcepts}{<<Describe los conceptos en notación de modelos (ejm. Diagramas Entidad-Relación o UML) y cómo deben de ser usados.>>}
\KUItem{IM}{DataModeling}{Core-Tier2}{Spreadsheet}{}{<<Spreadsheet models>>}	\LO{IM}{DataModeling}{Core-Tier2}{Familiarity}{DefineTheUsed}{<<Define la terminología fundamental a ser usada en un modelo relacional de datos.>>}
\KUItem{IM}{DataModeling}{Core-Tier2}{Relational}{}{<<Relational data models>>}	\LO{IM}{DataModeling}{Core-Tier2}{Familiarity}{DescribeTheOfData}{<<Describe los principios básicos del modelo relacional de datos.>>}
\KUItem{IM}{DataModeling}{Core-Tier2}{Object}{PLObjectOrientedProgramming,PLObjectOrientedProgramming}{<<Object-oriented models>>}	\LO{IM}{DataModeling}{Core-Tier2}{Usage}{ApplyTheAnd}{<<Aplica los conceptos de modelado y la notación de un modelo relacional de datos.>>}
\KUItem{IM}{DataModeling}{Core-Tier2}{Semi}{}{<<Semi-structured data model (expressed using DTD or XML Schema, for example)>>}	\LO{IM}{DataModeling}{Core-Tier2}{Familiarity}{DescribeTheOfModel}{<<Describe los conceptos principales del modelado OO como son identidad de objetos, constructores de tipos, encapsulación, herencia, polimorfismo, y versiones.>>}
	\LO{IM}{DataModeling}{Core-Tier2}{Assessment}{DescribeTheRelational}{<<Describe las diferencias entre modelos de datos relacionales y semi-estructurados.>>}
	\LO{IM}{DataModeling}{Core-Tier2}{Usage}{GiveAEquivalent}{<<Da una semi estructura equivalente (ejm. en DTD o Esquema XML) para un esquema relacional dado.>>}
	
\KU{IM}{Indexing}{<<Indexing>>}{}{0}{0}	
\KUDescription{IM}{Indexing}{<<~>>}	
\KUItem{IM}{Indexing}{Elective}{The}{}{<<The impact of indices on query performance>>}	\LO{IM}{Indexing}{Elective}{Usage}{GenerateAn}{<<Generar un archivo índice para una colección de recursos.>>}
\KUItem{IM}{Indexing}{Elective}{TheBasic}{}{<<The basic structure of an index>>}	\LO{IM}{Indexing}{Elective}{Familiarity}{ExplainTheAn}{<<Explicar la función de un índice invertido en la localización de un documento en una colección.>>}
\KUItem{IM}{Indexing}{Elective}{Keeping}{}{<<Keeping a buffer of data in memory>>}	\LO{IM}{Indexing}{Elective}{Familiarity}{ExplainHowStop}{<<Explicar cómo rechazar y detener palabras que afectan a la indexación>>}
\KUItem{IM}{Indexing}{Elective}{Creating}{}{<<Creating indexes with SQL>>}	\LO{IM}{Indexing}{Elective}{Usage}{IdentifyAppropriate}{<<Identificar los índices adecuados para determinado el esquema relacional y el conjunto de consultas.>>}
\KUItem{IM}{Indexing}{Elective}{Indexing}{}{<<Indexing text>>}	\LO{IM}{Indexing}{Elective}{Usage}{Estimate}{<<Estimar el tiempo para recuperar información, cuando son usados los índices comparado con cuando no son usados.>>}
\KUItem{IM}{Indexing}{Elective}{IndexingThe}{}{<<Indexing the web (e.g., web crawling)>>}	\LO{IM}{Indexing}{Elective}{Familiarity}{DescribeKey}{<<Describir los desafíos claves en el rastreo web, por ejemplo, la detección de documentos duplicados, la determinación de la frontera de rastreo.>>}
	
\KU{IM}{RelationalDatabases}{<<Relational Databases>>}{}{0}{0}	
\KUDescription{IM}{RelationalDatabases}{<<~>>}	
\KUItem{IM}{RelationalDatabases}{Elective}{Mapping}{}{<<Mapping conceptual schema to a relational schema>>}	\LO{IM}{RelationalDatabases}{Elective}{Usage}{Prepare}{<<Prepara un esquema relacional de un modelo conceptual desarrollado usando el modelo entidad-relación.>>}
\KUItem{IM}{RelationalDatabases}{Elective}{Entity}{}{<<Entity and referential integrity>>}	\LO{IM}{RelationalDatabases}{Elective}{Usage}{ExplainAndConcepts}{<<Explica y demuestra los conceptos de restricciones de integridad de la entidad e integridad referencial (incluyendo la definición del concepto de clave foránea).>>}
\KUItem{IM}{RelationalDatabases}{Elective}{Relational}{}{<<Relational algebra and relational calculus>>}	\LO{IM}{RelationalDatabases}{Elective}{Usage}{DemonstrateUse}{<<Demuestra el uso de las operaciones de álgebra relacional de la teoría matemática de conjuntos (unión, intersección, diferencia, y producto Cartesiano) y de las operaciones de álgebra relacional desarrolladas específicamente para las bases de datos relacionales (selección (restringida), proyección, unión y división).>>}
\KUItem{IM}{RelationalDatabases}{Elective}{RelationalDatabase}{}{<<Relational Database design>>}	\LO{IM}{RelationalDatabases}{Elective}{Usage}{WriteQueries}{<<Escribe consultas en álgebra relacional.>>}
\KUItem{IM}{RelationalDatabases}{Elective}{Functional}{}{<<Functional dependency>>}	\LO{IM}{RelationalDatabases}{Elective}{Usage}{WriteQueriesTuple}{<<Escribe consultas en cálculo relacional de tuplas.>>}
\KUItem{IM}{RelationalDatabases}{Elective}{Decomposition}{}{<<Decomposition of a schema; lossless-join and dependency-preservation properties of a decomposition>>}	\LO{IM}{RelationalDatabases}{Elective}{Assessment}{DetermineTheBetween}{<<Determina la dependencia funcional entre dos o más atributos que son subconjunto de una relación.>>}
\KUItem{IM}{RelationalDatabases}{Elective}{Candidate}{}{<<Candidate keys, superkeys, and closure of a set of attributes>>}	\LO{IM}{RelationalDatabases}{Elective}{Usage}{Connect}{<<Conecta restricciones expresadas como clave primaria y foránea, con dependencias funcionales.>>}
\KUItem{IM}{RelationalDatabases}{Elective}{Normal}{}{<<Normal forms (BCNF)>>}	\LO{IM}{RelationalDatabases}{Elective}{Usage}{ComputeTheA}{<<Calcula la cerradura de un conjunto de atributos dado dependencias funcionales.>>}
\KUItem{IM}{RelationalDatabases}{Elective}{Multi}{}{<<Multi-valued dependency (4NF)>>}	\LO{IM}{RelationalDatabases}{Elective}{Assessment}{DetermineWhether}{<<Determina si un conjunto de atributos forma una superclave y/o una clave candidata de una relación dada dependencias funcionales.>>}
\KUItem{IM}{RelationalDatabases}{Elective}{Join}{}{<<Join dependency (PJNF, 5NF)>>}	\LO{IM}{RelationalDatabases}{Elective}{Assessment}{EvaluateATo}{<<Evalua una descomposición propuesta, a fin de determinar si tiene una unión sin pérdidas o preservación de dependencias.>>}
\KUItem{IM}{RelationalDatabases}{Elective}{Representation}{}{<<Representation theory>>}	\LO{IM}{RelationalDatabases}{Elective}{Familiarity}{DescribeTheBcnf}{<<Describe las propiedades de la FNBC, FNUP (forma normal unión de proyecto), 5FN.>>}
	\LO{IM}{RelationalDatabases}{Elective}{Familiarity}{ExplainTheNormalization}{<<Explica el impacto de la normalización en la eficacia de las operaciones de una base de datos especialmente en la optimización de consultas.>>}
	\LO{IM}{RelationalDatabases}{Elective}{Familiarity}{DescribeWhatMulti}{<<Describe que es una dependencia de multi valor y cual es el tipo de restricciones que especifica.>>}
	
\KU{IM}{QueryLanguages}{<<Query Languages>>}{}{0}{0}	
\KUDescription{IM}{QueryLanguages}{<<~>>}	
\KUItem{IM}{QueryLanguages}{Elective}{Overview}{}{<<Overview of database languages>>}	\LO{IM}{QueryLanguages}{Elective}{Usage}{CreateASchema}{<<Crear un esquema relacional de bases de datos en SQL que incorpora restricciones clave y restricciones de integridad de entidad e integridad referencial.>>}
\KUItem{IM}{QueryLanguages}{Elective}{Sql}{}{<<SQL (data definition, query formulation, update sublanguage, constraints, integrity)>>}	\LO{IM}{QueryLanguages}{Elective}{Usage}{UseSql}{<<Usar SQL para crear tablas y devuelve (SELECT) la información de una base de datos.>>}
\KUItem{IM}{QueryLanguages}{Elective}{Selections}{}{<<Selections>>}	\LO{IM}{QueryLanguages}{Elective}{Assessment}{EvaluateAQuery}{<<Evaluar un conjunto de estrategias de procesamiento de consultas y selecciona la estrategia óptima.>>}
\KUItem{IM}{QueryLanguages}{Elective}{Projections}{}{<<Projections>>}	\LO{IM}{QueryLanguages}{Elective}{Usage}{CreateAQuery}{<<Crear una consulta no-procedimental al llenar plantillas de relacines para construir un ejemplo del resultado de una consulta requerida.>>}
\KUItem{IM}{QueryLanguages}{Elective}{Select}{}{<<Select-project-join>>}	\LO{IM}{QueryLanguages}{Elective}{Usage}{Embed}{<<Adicionar consultas orientadas a objetos en un lenguaje stand-alone como C++ o Java (ejm. SELECT ColMethod() FROM Objeto).>>}
\KUItem{IM}{QueryLanguages}{Elective}{Aggregates}{}{<<Aggregates and group-by>>}	\LO{IM}{QueryLanguages}{Elective}{Usage}{WriteA}{<<Escribe un procedimiento almacenado que trata con parámetros y con algo de flujo de control de tal forma que tenga funcionalidad.>>}
\KUItem{IM}{QueryLanguages}{Elective}{Subqueries}{}{<<Subqueries>>}	
\KUItem{IM}{QueryLanguages}{Elective}{Qbe}{}{<<QBE and 4th-generation environments>>}	
\KUItem{IM}{QueryLanguages}{Elective}{Different}{}{<<Different ways to invoke non-procedural queries in conventional languages>>}	
\KUItem{IM}{QueryLanguages}{Elective}{Introduction}{}{<<Introduction to other major query languages (e.g., XPATH, SPARQL)>>}	
\KUItem{IM}{QueryLanguages}{Elective}{Stored}{}{<<Stored procedures>>}	
	
\KU{IM}{TransactionProcessing}{<<Transaction Processing>>}{}{0}{0}	
\KUDescription{IM}{TransactionProcessing}{<<~>>}	
\KUItem{IM}{TransactionProcessing}{Elective}{Transactions}{}{<<Transactions>>}	\LO{IM}{TransactionProcessing}{Elective}{Usage}{CreateAEmbedding}{<<Crear una transacción mediante la incorporación de SQL en un programa de aplicación.>>}
\KUItem{IM}{TransactionProcessing}{Elective}{Failure}{}{<<Failure and recovery>>}	\LO{IM}{TransactionProcessing}{Elective}{Familiarity}{ExplainTheImplicit}{<<Explicar el concepto de confimaciones implicitas.>>}
\KUItem{IM}{TransactionProcessing}{Elective}{Concurrency}{}{<<Concurrency control>>}	\LO{IM}{TransactionProcessing}{Elective}{Familiarity}{DescribeTheTo}{<<Describir los problemas especificos para la ejecución  de una transacción eficiente.>>}
\KUItem{IM}{TransactionProcessing}{Elective}{Interaction}{}{<<Interaction of transaction management with storage, especially buffering>>}	\LO{IM}{TransactionProcessing}{Elective}{Assessment}{ExplainWhen}{<<Explicar cuando y porqué se necesita un {\it rollback}, y cómo registrar todo asegura un {\it rollback} adecuado.>>}
	\LO{IM}{TransactionProcessing}{Elective}{Assessment}{ExplainTheDifferent}{<<Explicar el efecto de diferentes niveles de aislamiento sobre los mecanismos de control de concurrencia.>>}
	\LO{IM}{TransactionProcessing}{Elective}{Assessment}{ChooseThe}{<<Elejir el nivel de aislamiento adecuado para la aplicación de un protocolo de transacción especificado.>>}
	\LO{IM}{TransactionProcessing}{Elective}{Assessment}{IdentifyAppropriateIn}{<<Identificar los límites apropiados de la transacción en programas de aplicación.>>}
	
\KU{IM}{DistributedDatabases}{<<Distributed Databases>>}{}{0}{0}	
\KUDescription{IM}{DistributedDatabases}{<<~>>}	
"\KUItem{IM}{DistributedDatabases}{Elective}{Distributed}{SFComputationalParadigms,SFComputationalParadigms}{<<Distributed DBMS
\begin{subtopics}
\item Distributed data storage
\item Distributed query processing
\item Distributed transaction model
\item Homogeneous and heterogeneous solutions
\item Client-server distributed databases
\end{subtopics}>>}"	\LO{IM}{DistributedDatabases}{Elective}{Familiarity}{ExplainTheFor}{<<Explicar las técnicas usadas para la fragmentación de  datos, replicación, y la asignación durante el proceso de diseño de base de datos distribuida.>>}
"\KUItem{IM}{DistributedDatabases}{Elective}{Parallel}{CNProcessing,PDParallelDecomposition,CNProcessing,PDParallelDecomposition}{<<Parallel DBMS
\begin{subtopics}
\item Parallel DBMS architectures: shared memory, shared disk, shared nothing;
\item Speedup and scale-up, e.g., use of the MapReduce processing model
\item Data replication and weak consistency models
\end{subtopics}>>}"	\LO{IM}{DistributedDatabases}{Elective}{Assessment}{EvaluateSimple}{<<Evaluar estrategias simples para la ejecución de una consulta distribuida para seleccionar una estrategia que minimise la cantidad de transferencia de datos>>}
	\LO{IM}{DistributedDatabases}{Elective}{Familiarity}{ExplainHowPhase}{<<Explicar como el protocolo de dos fases de {\it commit} es usado para resolver problemas de transacciones que acceden a bases de datos almacenadas en múltiples nodos.>>}
	\LO{IM}{DistributedDatabases}{Elective}{Familiarity}{DescribeDistributed}{<<Describir el control concurrente distribuido basados en técnicas de copia distinguidos y el método de votación. >>}
	\LO{IM}{DistributedDatabases}{Elective}{Familiarity}{DescribeTheOfThe}{<<Describir los tres niveles del software en el modelo cliente servidor.>>}
	
\KU{IM}{PhysicalDatabaseDesign}{<<Physical Database Design>>}{}{0}{0}	
\KUDescription{IM}{PhysicalDatabaseDesign}{<<~>>}	
\KUItem{IM}{PhysicalDatabaseDesign}{Elective}{Storage}{}{<<Storage and file structure>>}	\LO{IM}{PhysicalDatabaseDesign}{Elective}{Familiarity}{ExplainTheRecords}{<<Explica los conceptos de registro, tipos de registro, y archivos, así como las diversas técnicas para colocar registros de archivos en un disco.>>}
\KUItem{IM}{PhysicalDatabaseDesign}{Elective}{Indexed}{}{<<Indexed files>>}	\LO{IM}{PhysicalDatabaseDesign}{Elective}{Familiarity}{GiveExamples}{<<Da ejemplos de la aplicación de índices primario, secundario y de agrupamiento.>>}
\KUItem{IM}{PhysicalDatabaseDesign}{Elective}{Hashed}{}{<<Hashed files>>}	\LO{IM}{PhysicalDatabaseDesign}{Elective}{Assessment}{Distinguish}{<<Distingue entre un índice no denso y uno denso.>>}
\KUItem{IM}{PhysicalDatabaseDesign}{Elective}{Signature}{}{<<Signature files>>}	\LO{IM}{PhysicalDatabaseDesign}{Elective}{Usage}{ImplementDynamic}{<<Implementa índices de multinivel dinámicos usando árboles-B.>>}
\KUItem{IM}{PhysicalDatabaseDesign}{Elective}{B}{}{<<B-trees>>}	\LO{IM}{PhysicalDatabaseDesign}{Elective}{Familiarity}{ExplainTheApplication}{<<Explica la teoría y la aplicación de técnicas de hash internas y externas.>>}
\KUItem{IM}{PhysicalDatabaseDesign}{Elective}{Files}{}{<<Files with dense index>>}	\LO{IM}{PhysicalDatabaseDesign}{Elective}{Usage}{UseHashing}{<<Usa técnicas de hasp para facilitar la expansión de archivos dinámicos.>>}
\KUItem{IM}{PhysicalDatabaseDesign}{Elective}{FilesWith}{}{<<Files with variable length records>>}	\LO{IM}{PhysicalDatabaseDesign}{Elective}{Familiarity}{DescribeTheHashing}{<<Describe las relaciones entre hashing, compresión, y búsquedas eficientes en bases de datos.>>}
\KUItem{IM}{PhysicalDatabaseDesign}{Elective}{Database}{}{<<Database efficiency and tuning>>}	\LO{IM}{PhysicalDatabaseDesign}{Elective}{Assessment}{EvaluateCosts}{<<Evalúa el costo y beneficio de diversos esquemas de hashing.>>}
	\LO{IM}{PhysicalDatabaseDesign}{Elective}{Familiarity}{ExplainHowDesignTransaction}{<<Explica como el diseño físico de una base de datos afecta la eficiencia de las transacciones en ésta.>>}
	
\KU{IM}{DataMining}{<<Data Mining>>}{}{0}{0}	
\KUDescription{IM}{DataMining}{<<~>>}	
\KUItem{IM}{DataMining}{Elective}{Uses}{}{<<Uses of data mining>>}	\LO{IM}{DataMining}{Elective}{Assessment}{CompareAndUses}{<<Compara y contrasta los diversos usos de la minería de datos como se evidencia en campos tanto de investigación como de aplicación.>>}
\KUItem{IM}{DataMining}{Elective}{Data}{}{<<Data mining algorithms>>}	\LO{IM}{DataMining}{Elective}{Familiarity}{ExplainTheFinding}{<<Explica el valor de encontrar associaciones de datos en mercados financieros.>>}
\KUItem{IM}{DataMining}{Elective}{Associative}{}{<<Associative and sequential patterns>>}	\LO{IM}{DataMining}{Elective}{Assessment}{CharacterizeThe}{<<Caracteriza los tipos de patrones que pueden ser descubiertos por minería de reglas de asociación.>>}
\KUItem{IM}{DataMining}{Elective}{DataClustering}{}{<<Data clustering>>}	\LO{IM}{DataMining}{Elective}{Familiarity}{DescribeHowA}{<<Describe como expandir un sistema relacional para encontrar patrones usando reglas de asociación.>>}
\KUItem{IM}{DataMining}{Elective}{Market}{}{<<Market basket analysis>>}	\LO{IM}{DataMining}{Elective}{Assessment}{EvaluateDifferent}{<<Evalúa diversas metodologías para la aplicación efectiva de minería de datos.>>}
\KUItem{IM}{DataMining}{Elective}{DataCleaning}{}{<<Data cleaning>>}	\LO{IM}{DataMining}{Elective}{Assessment}{IdentifyAnd}{<<Identifica y caracteriza fuentes de ruido, redundancia y valores atípicos en los datos presentes.>>}
\KUItem{IM}{DataMining}{Elective}{DataVisualization}{GVVisualization,CNInteractiveVisualization,GVVisualization,CNInteractiveVisualization}{<<Data visualization>>}	\LO{IM}{DataMining}{Elective}{Familiarity}{IdentifyMechanisms}{<<Identifica mecanismos (agregación en línea, comportamiento cualquiera, visualización interactiva) a fin de cerrar el ciclo en un proceso de minería de datos.>>}
	\LO{IM}{DataMining}{Elective}{Familiarity}{DescribeWhy}{<<Describe porqué los diversos procesos de cierre de ciclo mejoran la efectividad de la minería de datos.>>}
	
\KU{IM}{InformationStorageandRetrieval}{<<Information Storage and Retrieval>>}{}{0}{0}	
\KUDescription{IM}{InformationStorageandRetrieval}{<<~>>}	
\KUItem{IM}{InformationStorageandRetrieval}{Elective}{Documents}{}{<<Documents, electronic publishing, markup, and markup languages>>}	\LO{IM}{InformationStorageandRetrieval}{Elective}{Familiarity}{ExplainBasicAnd}{<<Explica los conceptos básicos de almacenamiento y recuperación de la información.>>}
\KUItem{IM}{InformationStorageandRetrieval}{Elective}{Tries}{}{<<Tries, inverted files, PAT trees, signature files, indexing>>}	\LO{IM}{InformationStorageandRetrieval}{Elective}{Familiarity}{DescribeWhatSpecific}{<<Describe que temas son específicos para una recuperación de la información eficiente.>>}
\KUItem{IM}{InformationStorageandRetrieval}{Elective}{Morphological}{}{<<Morphological analysis, stemming, phrases, stop lists>>}	\LO{IM}{InformationStorageandRetrieval}{Elective}{Assessment}{GiveApplications}{<<Da aplicaciones de estrategias alternativas de búsqueda y explica porqué una estrategia en particular es apropiada para una aplicación.>>}
\KUItem{IM}{InformationStorageandRetrieval}{Elective}{Term}{}{<<Term frequency distributions, uncertainty, fuzziness, weighting>>}	\LO{IM}{InformationStorageandRetrieval}{Elective}{Usage}{DesignAndSmall}{<<Diseña e implementa un sistema de almacenamiento y recuperación de la información o librería digital de tamaño pequeño a mediano.>>}
\KUItem{IM}{InformationStorageandRetrieval}{Elective}{Vector}{}{<<Vector space, probabilistic, logical, and advanced models>>}	\LO{IM}{InformationStorageandRetrieval}{Elective}{Familiarity}{DescribeSome}{<<Describe algunas de las soluciones técnicas a los problemas relacionados al archivamiento y preservación de la información en una librería digital.>>}
\KUItem{IM}{InformationStorageandRetrieval}{Elective}{Information}{}{<<Information needs, relevance, evaluation, effectiveness>>}	
\KUItem{IM}{InformationStorageandRetrieval}{Elective}{Thesauri}{}{<<Thesauri, ontologies, classification and categorization, metadata>>}	
\KUItem{IM}{InformationStorageandRetrieval}{Elective}{Bibliographic}{}{<<Bibliographic information, bibliometrics, citations>>}	
\KUItem{IM}{InformationStorageandRetrieval}{Elective}{Routing}{}{<<Routing and (community) filtering>>}	
\KUItem{IM}{InformationStorageandRetrieval}{Elective}{Multimedia}{}{<<Multimedia search, information seeking behavior, user modeling, feedback>>}	
\KUItem{IM}{InformationStorageandRetrieval}{Elective}{InformationSummarization}{}{<<Information summarization and visualization>>}	
\KUItem{IM}{InformationStorageandRetrieval}{Elective}{Faceted}{}{<<Faceted search (e.g., using citations, keywords, classification schemes)>>}	
\KUItem{IM}{InformationStorageandRetrieval}{Elective}{Digital}{}{<<Digital libraries>>}	
\KUItem{IM}{InformationStorageandRetrieval}{Elective}{Digitization}{}{<<Digitization, storage, interchange, digital objects, composites, and packages>>}	
\KUItem{IM}{InformationStorageandRetrieval}{Elective}{Metadata}{}{<<Metadata and cataloging>>}	
\KUItem{IM}{InformationStorageandRetrieval}{Elective}{Naming}{}{<<Naming, repositories, archives>>}	
\KUItem{IM}{InformationStorageandRetrieval}{Elective}{Archiving}{}{<<Archiving and preservation, integrity>>}	
\KUItem{IM}{InformationStorageandRetrieval}{Elective}{Spaces}{}{<<Spaces (conceptual, geographical, 2/3D, VR)>>}	
\KUItem{IM}{InformationStorageandRetrieval}{Elective}{Architectures}{}{<<Architectures (agents, buses, wrappers/mediators), interoperability>>}	
\KUItem{IM}{InformationStorageandRetrieval}{Elective}{Services}{}{<<Services (searching, linking, browsing, and so forth)>>}	
\KUItem{IM}{InformationStorageandRetrieval}{Elective}{Intellectual}{}{<<Intellectual property rights management, privacy, and protection (watermarking)>>}	
	
\KU{IM}{MultimediaSystems}{<<Multimedia Systems>>}{}{0}{0}	
\KUDescription{IM}{MultimediaSystems}{<<~>>}	
\KUItem{IM}{MultimediaSystems}{Elective}{Input}{}{<<Input and output devices, device drivers, control signals and protocols, DSPs>>}	\LO{IM}{MultimediaSystems}{Elective}{Familiarity}{DescribeTheSupporting}{<<Describe los medios y dispositivos de soporte más comunmente asociados a los sistemas de información multimedia.>>}
\KUItem{IM}{MultimediaSystems}{Elective}{Standards}{}{<<Standards (e.g., audio, graphics, video)>>}	\LO{IM}{MultimediaSystems}{Elective}{Usage}{DemonstrateTheContent}{<<Demostrar el uso de contenidos basados en análisis de información en un sistema de información multimedia.>>}
\KUItem{IM}{MultimediaSystems}{Elective}{Applications}{}{<<Applications, media editors, authoring systems, and authoring>>}	\LO{IM}{MultimediaSystems}{Elective}{Assessment}{CritiqueMultimedia}{<<Evaluar presentaciones multimedia en terminos de su uso apropiado de audio, video, gráficos, color y otros conceptos de presentación de información.>>}
\KUItem{IM}{MultimediaSystems}{Elective}{Streams}{}{<<Streams/structures, capture/represent/transform, spaces/domains, compression/coding>>}	\LO{IM}{MultimediaSystems}{Elective}{Usage}{ImplementAUsing}{<<Implementar una aplicación multimedia usando un sistema de autoráa.>>}
\KUItem{IM}{MultimediaSystems}{Elective}{Content}{}{<<Content-based analysis, indexing, and retrieval of audio, images, animation, and video>>}	\LO{IM}{MultimediaSystems}{Elective}{Familiarity}{ForEachMedia}{<<Para cada uno de los muchos estándares de medios de comunicación o multimedia, describe en lenguaje no técnico para lo que el estandar llama y explica como aspectos de la percepción humana deberian ser suceptibles a las limitaciones del estandar .>>}
\KUItem{IM}{MultimediaSystems}{Elective}{Presentation}{}{<<Presentation, rendering, synchronization, multi-modal integration/interfaces>>}	\LO{IM}{MultimediaSystems}{Elective}{Familiarity}{DescribeTheAIncluding}{<<Describir las caracteristicas de un sistema de computador (incluyendo identificación  de herramientas de soporte  y estándares apropiados) que tiene que organizar de uno de un rango de aplicaciones multimedia posibles .>>}
\KUItem{IM}{MultimediaSystems}{Elective}{Real}{}{<<Real-time delivery, quality of service (including performance), capacity planning, audio/video conferencing, video-on-demand>>}	
	
\KA{IS}{<<Sistemas Inteligentes>>}{}	
"\KADescription{IS}{<<Artificial intelligence (AI) is the study of solutions for problems that are difficult or impractical to solve with traditional methods. It is used pervasively in support of everyday applications such as email, word-processing and search, as well as in the design and analysis of autonomous agents that perceive their environment and interact rationally with the environment. 

The solutions rely on a broad set of general and specialized knowledge representation schemes, problem solving mechanisms and learning techniques. They deal with sensing (e.g., speech recognition, natural language understanding, computer vision), problem-solving (e.g., search, planning), and acting (e.g., robotics) and the architectures needed to support them (e.g., agents, multi-agents). The study of Artificial Intelligence prepares the student to determine when an AI approach is appropriate for a given problem, identify the appropriate representation and reasoning mechanism, and implement and evaluate it.>>}"	
	
\KU{IS}{FundamentalIssues}{<<Fundamental Issues>>}{}{0}{1}	
\KUDescription{IS}{FundamentalIssues}{<<~>>}	
\KUItem{IS}{FundamentalIssues}{Core-Tier2}{Overview}{}{<<Overview of AI problems, examples of successful recent AI applications>>}	\LO{IS}{FundamentalIssues}{Core-Tier2}{Familiarity}{DescribeTuring}{<<Describir el test de Turing  y el experimento pensado cuarto chino" ({\it Chinese Room}).>>}
"\KUItem{IS}{FundamentalIssues}{Core-Tier2}{What}{}{<<What is intelligent behavior?
\begin{subtopics}
\item The Turing test
\item Rational versus non-rational reasoning
\end{subtopics}>>}"	\LO{IS}{FundamentalIssues}{Core-Tier2}{Familiarity}{DifferentiateBetweenOf}{<<Diferenciar entre los conceptos de razonamiento/comportamiento óptimo y el razona iento/comportamiento humano>>}
"\KUItem{IS}{FundamentalIssues}{Core-Tier2}{Problem}{}{<<Problem characteristics
\begin{subtopics}
\item Fully versus partially observable
\item Single versus multi-agent
\item Deterministic versus stochastic
\item Static versus dynamic
\item Discrete versus continuous
\end{subtopics}>>}"	\LO{IS}{FundamentalIssues}{Core-Tier2}{Assessment}{Determing}{<<Determinando las caracteristicas de un problema dado que sistemas inteligentes deberian resolver.>>}
"\KUItem{IS}{FundamentalIssues}{Core-Tier2}{Nature}{}{<<Nature of agents
\begin{subtopics}
\item Autonomous versus semi-autonomous
\item Reflexive, goal-based, and utility-based
\item The importance of perception and environmental interactions
\end{subtopics}>>}"	
\KUItem{IS}{FundamentalIssues}{Elective}{Philosophical}{}{<<Philosophical and ethical issues.>>}	
	
\KU{IS}{BasicSearchStrategies}{<<Basic Search Strategies>>}{ALBasicAnalysis,ALAlgorithmicStrategies,ALFundamentalDataStructuresandAlgorithms,ALBasicAnalysis,ALAlgorithmicStrategies,ALFundamentalDataStructuresandAlgorithms}{0}{4}	
\KUDescription{IS}{BasicSearchStrategies}{<<~>>}	
\KUItem{IS}{BasicSearchStrategies}{Core-Tier2}{ProblemSpaces}{}{<<Problem spaces (states, goals and operators), problem solving by search>>}	\LO{IS}{BasicSearchStrategies}{Core-Tier2}{Usage}{Formulate}{<<Formula el espacio eficiente de un problema para un caso expresado en lenguaje natural (ejm. Inglés) en términos de estados de inicio y final, así como sus operadores.>>}
\KUItem{IS}{BasicSearchStrategies}{Core-Tier2}{Factored}{}{<<Factored representation (factoring state into variables)>>}	\LO{IS}{BasicSearchStrategies}{Core-Tier2}{Familiarity}{DescribeTheHeuristics}{<<Describe el rol de las heurísticas y describe los intercambios entre completitud, óptimo, complejidad de tiempo, y complejidad de espacio.>>}
\KUItem{IS}{BasicSearchStrategies}{Core-Tier2}{Uninformed}{}{<<Uninformed search (breadth-first, depth-first, depth-first with iterative deepening)>>}	\LO{IS}{BasicSearchStrategies}{Core-Tier2}{Familiarity}{DescribeTheCombinatorial}{<<Describe el problema de la explosión combinatoria del espacio de búsqueda y sus consecuencias.>>}
\KUItem{IS}{BasicSearchStrategies}{Core-Tier2}{Heuristics}{}{<<Heuristics and informed search (hill-climbing, generic best-first, A*) >>}	\LO{IS}{BasicSearchStrategies}{Core-Tier2}{Usage}{SelectAndAppropriate}{<<Selecciona e implementa un apropiado algoritmo de búsqueda no informado para un problema, y describe sus complejidades de tiempo y espacio.>>}
\KUItem{IS}{BasicSearchStrategies}{Core-Tier2}{Space}{}{<<Space and time efficiency of search>>}	\LO{IS}{BasicSearchStrategies}{Core-Tier2}{Usage}{SelectAndAppropriateAlgorithm}{<<Selecciona e implementa un apropiado algoritmo de búsqueda informado para un problema al definir la función heurística de evaluación necesaria.>>}
\KUItem{IS}{BasicSearchStrategies}{Core-Tier2}{Two}{}{<<Two-player games (introduction to minimax search)>>}	\LO{IS}{BasicSearchStrategies}{Core-Tier2}{Assessment}{EvaluateWhether}{<<Evalúa si una heurística dada para un determinado problema es admisible/puede garantizar una solución óptima.>>}
\KUItem{IS}{BasicSearchStrategies}{Core-Tier2}{Constraint}{}{<<Constraint satisfaction (backtracking and local search methods) >>}	\LO{IS}{BasicSearchStrategies}{Core-Tier2}{Usage}{FormulateA}{<<Formula un problema en particular en lenguaje natural (ejm. Inglés) como un problema de satisfacción de restricciones y lo implementa usando un algoritmo de retroceso cronológico o una búsqueda estocástica local.>>}
	\LO{IS}{BasicSearchStrategies}{Core-Tier2}{Familiarity}{CompareAndSearch}{<<Compara y contrasta tópicos de búsqueda básica con temas jugabilidad de juegos.>>}
	
\KU{IS}{BasicKnowledgeRepresentationandReasoning}{<<Basic Knowledge Representation and Reasoning>>}{}{0}{3}	
\KUDescription{IS}{BasicKnowledgeRepresentationandReasoning}{<<~>>}	
\KUItem{IS}{BasicKnowledgeRepresentationandReasoning}{Core-Tier2}{Review}{DSBasicLogic,DSBasicLogic}{<<Review of propositional and predicate logic>>}	\LO{IS}{BasicKnowledgeRepresentationandReasoning}{Core-Tier2}{Usage}{Translate}{<<Traducir una sentencia en lenguaje natural (Por ejemplo español) en una declaración lógica de predicados.>>}
\KUItem{IS}{BasicKnowledgeRepresentationandReasoning}{Core-Tier2}{Resolution}{}{<<Resolution and theorem proving (propositional logic only)>>}	\LO{IS}{BasicKnowledgeRepresentationandReasoning}{Core-Tier2}{Usage}{ConvertA}{<<Convertir una declaración lógica en forma de cláusula.>>}
\KUItem{IS}{BasicKnowledgeRepresentationandReasoning}{Core-Tier2}{Forward}{}{<<Forward chaining, backward chaining>>}	\LO{IS}{BasicKnowledgeRepresentationandReasoning}{Core-Tier2}{Usage}{ApplyResolution}{<<Aplicar resolución a un conjunto de declaraciones lógicas para responder una consulta.>>}
\KUItem{IS}{BasicKnowledgeRepresentationandReasoning}{Core-Tier2}{ReviewOf}{DSDiscreteProbability,DSDiscreteProbability}{<<Review of probabilistic reasoning, Bayes theorem>>}	\LO{IS}{BasicKnowledgeRepresentationandReasoning}{Core-Tier2}{Usage}{Make}{<<Hacer una inferencia probabilística para un problema real usando el teorema de Bayes para determinar la probabilidad que se cumpla una hipótesis.>>}
	
\KU{IS}{BasicMachineLearning}{<<Basic Machine Learning>>}{}{0}{2}	
\KUDescription{IS}{BasicMachineLearning}{<<~>>}	
\KUItem{IS}{BasicMachineLearning}{Core-Tier2}{Definition}{}{<<Definition and examples of broad variety of machine learning tasks, including classification>>}	\LO{IS}{BasicMachineLearning}{Core-Tier2}{Familiarity}{ListThe}{<<Listar las diferencias entre los tres principales tipos de aprendizaje: supervisado, no supervisado y por refuerzo>>}
\KUItem{IS}{BasicMachineLearning}{Core-Tier2}{Inductive}{}{<<Inductive learning>>}	\LO{IS}{BasicMachineLearning}{Core-Tier2}{Familiarity}{IdentifyExamples}{<<Identificar ejemplos de tareas de clasificación, considerando las características de entrada disponibles y las salidas a ser predecidas.>>}
\KUItem{IS}{BasicMachineLearning}{Core-Tier2}{Simple}{}{<<Simple statistical-based learning, such as Naive Bayesian Classifier, decision trees>>}	\LO{IS}{BasicMachineLearning}{Core-Tier2}{Familiarity}{ExplainTheInductive}{<<Explicar la diferencia entre aprendizaje inductivo y deductivo>>}
\KUItem{IS}{BasicMachineLearning}{Core-Tier2}{The}{}{<<The over-fitting problem>>}	\LO{IS}{BasicMachineLearning}{Core-Tier2}{Familiarity}{DescribeOver}{<<Describir el sobre ajuste ({\it overfitting}) en el contexto de un problema>>}
\KUItem{IS}{BasicMachineLearning}{Core-Tier2}{Measuring}{}{<<Measuring classifier accuracy>>}	\LO{IS}{BasicMachineLearning}{Core-Tier2}{Usage}{ApplyTheLearning}{<<Aplicar un algoritmo de aprendizaje estadístico simple como el Clasificador Naive Bayesiano  e un problema de clasificacion y medirla precisión del clasificador>>}
	
\KU{IS}{AdvancedSearch}{<<Advanced Search>>}{}{0}{0}	
\KUDescription{IS}{AdvancedSearch}{<<Note that the general topics of Branch-and-bound and Dynamic Programing are listedin AL/Algorithmic Strategies.>>}	
\KUItem{IS}{AdvancedSearch}{Elective}{Constructing}{}{<<Constructing search trees, dynamic search space, combinatorial explosion of search space>>}	\LO{IS}{AdvancedSearch}{Elective}{Usage}{DesignAndGenetic}{<<Diseñar e implementar una solución a un problema con algoritmo genético>>}
"\KUItem{IS}{AdvancedSearch}{Elective}{Stochastic}{}{<<Stochastic search
\begin{subtopics}
\item Simulated annealing
\item Genetic algorithms
\item Monte-Carlo tree search
\end{subtopics}>>}"	\LO{IS}{AdvancedSearch}{Elective}{Usage}{DesignAndSimulated}{<<Diseñar e implementar un esquema de recocido simulado ({\it simulated annealing}) para evitar mínimos locales en un problema>>}
\KUItem{IS}{AdvancedSearch}{Elective}{Implementation}{}{<<Implementation of A* search, beam search>>}	\LO{IS}{AdvancedSearch}{Elective}{Usage}{DesignAndBeam}{<<Diseñar e implementar una búsqueda A* y búsqueda en haz ({\it beam search}) para solucionar un problema>>}
\KUItem{IS}{AdvancedSearch}{Elective}{Minimax}{}{<<Minimax search, alpha-beta pruning>>}	\LO{IS}{AdvancedSearch}{Elective}{Usage}{ApplyMinimax}{<<Aplicar búsqueda minimax con poda alfa-beta para simplifiar el espacio de búsqueda en un juego con dos jugadores>>}
\KUItem{IS}{AdvancedSearch}{Elective}{Expectimax}{}{<<Expectimax search (MDP-solving) and chance nodes>>}	\LO{IS}{AdvancedSearch}{Elective}{Assessment}{CompareAndAlgorithms}{<<Comparar y contrastar los algoritmos genéticos con técnicas clásicas de búsqueda>>}
	\LO{IS}{AdvancedSearch}{Elective}{Assessment}{CompareAndHeuristic}{<<Comparar y contrastar la aplicabilidad de varias heurísticas de búsqueda, para un determinado problema>>}
	
\KU{IS}{AdvancedRepresentationandReasoning}{<<Advanced Representation and Reasoning>>}{}{0}{0}	
\KUDescription{IS}{AdvancedRepresentationandReasoning}{<<~>>}	
"\KUItem{IS}{AdvancedRepresentationandReasoning}{Elective}{Knowledge}{}{<<Knowledge representation issues
\begin{subtopics}
\item Description logics
\item Ontology engineering
\end{subtopics}>>}"	\LO{IS}{AdvancedRepresentationandReasoning}{Elective}{Assessment}{CompareAndMost}{<<Comparar y contrastar los modelos más usados para la representación del conocimiento estructurado, destacando sus puntos fuertes y débiles.>>}
\KUItem{IS}{AdvancedRepresentationandReasoning}{Elective}{Non}{}{<<Non-monotonic reasoning (e.g., non-classical logics, default reasoning)>>}	\LO{IS}{AdvancedRepresentationandReasoning}{Elective}{Familiarity}{IdentifyTheNon}{<<Identificar los componentes de razonamiento no monótono y su utilidad como mecanismo de representación de los sistemas de confianza.>>}
\KUItem{IS}{AdvancedRepresentationandReasoning}{Elective}{Argumentation}{}{<<Argumentation>>}	\LO{IS}{AdvancedRepresentationandReasoning}{Elective}{Assessment}{CompareAndBasic}{<<Comparar y contrastas las técnicas básicas para la representación de la incertidumbre.>>}
\KUItem{IS}{AdvancedRepresentationandReasoning}{Elective}{Reasoning}{}{<<Reasoning about action and change (e.g., situation and event calculus)>>}	\LO{IS}{AdvancedRepresentationandReasoning}{Elective}{Assessment}{CompareAndBasicQualitative}{<<Comparar y contrastar las técnicas básicas para la representación cualitativa.>>}
\KUItem{IS}{AdvancedRepresentationandReasoning}{Elective}{Temporal}{}{<<Temporal and spatial reasoning>>}	\LO{IS}{AdvancedRepresentationandReasoning}{Elective}{Usage}{ApplySituation}{<<Aplicar cálculo de situaciones y eventos a problemas de acción y cambios>>}
\KUItem{IS}{AdvancedRepresentationandReasoning}{Elective}{Rule}{}{<<Rule-based Expert Systems>>}	\LO{IS}{AdvancedRepresentationandReasoning}{Elective}{Familiarity}{ExplainTheTemporal}{<<Explicar la diferencia entre razonamiento temporal y espacial, y cómo se relacionan entre sí. >>}
\KUItem{IS}{AdvancedRepresentationandReasoning}{Elective}{Semantic}{}{<<Semantic networks>>}	\LO{IS}{AdvancedRepresentationandReasoning}{Elective}{Familiarity}{ExplainTheRule}{<<Explicar la diferencia entre técnicas de razonamiento basado en modelos, basado en casos y basados en reglas.>>}
\KUItem{IS}{AdvancedRepresentationandReasoning}{Elective}{Model}{}{<<Model-based and Case-based reasoning>>}	\LO{IS}{AdvancedRepresentationandReasoning}{Elective}{Familiarity}{DefineTheA}{<<Definir el concepto de un sistema planificación y cómo se diferencia de las técnicas de búsqueda clásicas.>>}
"\KUItem{IS}{AdvancedRepresentationandReasoning}{Elective}{Planning}{}{<<Planning:
\begin{subtopics}
\item Partial and totally ordered planning
\item Plan graphs
\item Hierarchical planning
\item Planning and execution including conditional planning and continuous planning
\item Mobile agent/Multi-agent planning
\end{subtopics}>>}"	\LO{IS}{AdvancedRepresentationandReasoning}{Elective}{Familiarity}{DescribeThePlanning}{<<Describir las diferencias entre la planificación como búsqueda, la planificación basada en el operador, y la planificación proposicional, dando ejemplos de ámbitos en los que cada una es más aplicable.>>}
	\LO{IS}{AdvancedRepresentationandReasoning}{Elective}{Familiarity}{ExplainTheMonotonic}{<<Explique la diferencia entre la inferencia monótona y no monótona.>>}
	
\KU{IS}{ReasoningUnderUncertainty}{<<Reasoning Under Uncertainty>>}{}{0}{0}	
\KUDescription{IS}{ReasoningUnderUncertainty}{<<~>>}	
\KUItem{IS}{ReasoningUnderUncertainty}{Elective}{Review}{DSDiscreteProbability,DSDiscreteProbability}{<<Review of basic probability>>}	\LO{IS}{ReasoningUnderUncertainty}{Elective}{Usage}{ApplyBayesDetermine}{<<Aplicar la regla de Bayes para determinar el cumplimiento de una hipótesis>>}
"\KUItem{IS}{ReasoningUnderUncertainty}{Elective}{Random}{}{<<Random variables and probability distributions
\begin{subtopics}
\item Axioms of probability
\item Probabilistic inference
\item Bayes’ Rule
\end{subtopics}>>}"	\LO{IS}{ReasoningUnderUncertainty}{Elective}{Assessment}{ExplainHowAssertions}{<<Explicar cómo al tener independencia condicional permite una gran eficiencia en sistemas probabilísticos>>}
\KUItem{IS}{ReasoningUnderUncertainty}{Elective}{Conditional}{}{<<Conditional Independence>>}	\LO{IS}{ReasoningUnderUncertainty}{Elective}{Familiarity}{IdentifyExamplesRepresentations}{<<Identificar ejemplos de representación de conocimiento para razonamiento bajo incertidumbre>>}
"\KUItem{IS}{ReasoningUnderUncertainty}{Elective}{Knowledge}{}{<<Knowledge representations
\begin{subtopics}
\item Bayesian Networks
\begin{subtopics}
\item Exact inference and its complexity
\item Randomized sampling (Monte Carlo) methods (e.g. Gibbs sampling)
\end{subtopics}
\item Markov Networks
\item Relational probability models
\item Hidden Markov Models
\end{subtopics}>>}"	\LO{IS}{ReasoningUnderUncertainty}{Elective}{Familiarity}{StateTheExact}{<<Indicar la complejidad de la inferencia exacta. Identificar métodos para inferencia aproximada>>}
"\KUItem{IS}{ReasoningUnderUncertainty}{Elective}{Decision}{}{<<Decision Theory
\begin{subtopics}
\item Preferences and utility functions
\item Maximizing expected utility
\end{subtopics}>>}"	\LO{IS}{ReasoningUnderUncertainty}{Elective}{Usage}{DesignAndLeast}{<<Diseñar e implementar, al menos una representación de conocimiento para razonamiento bajo incertidumbre>>}
	\LO{IS}{ReasoningUnderUncertainty}{Elective}{Familiarity}{DescribeTheTemporal}{<<Describir la complejidad del razonamiento probabilístico en el tiempo>>}
	\LO{IS}{ReasoningUnderUncertainty}{Elective}{Usage}{DesignAndHmm}{<<Diseñar e implementar un Modelo Oculto de Markov (HMM) como un ejemplo de sistema probabilístico en el tiempo>>}
	\LO{IS}{ReasoningUnderUncertainty}{Elective}{Familiarity}{DescribeThePreferences}{<<Describir las relaciones entre preferencias y funciones de utilidad.>>}
	\LO{IS}{ReasoningUnderUncertainty}{Elective}{Assessment}{ExplainHowAnd}{<<Explicar como funciones de utilidad  y razonamiento probabilístico puede ser combinado para tomar decisiones razonables.>>}
	
\KU{IS}{Agents}{<<Agents>>}{HCICollaborationandCommunication,HCICollaborationandCommunication}{0}{0}	
\KUDescription{IS}{Agents}{<<~>>}	
\KUItem{IS}{Agents}{Elective}{Definitions}{}{<<Definitions of agents>>}	\LO{IS}{Agents}{Elective}{Familiarity}{ListTheOf}{<<Lista las características que definen un agente inteligente.>>}
\KUItem{IS}{Agents}{Elective}{Agent}{}{<<Agent architectures (e.g., reactive, layered, cognitive)>>}	\LO{IS}{Agents}{Elective}{Assessment}{CharacterizeAnd}{<<Describe y contrasta las arquitecturas de agente estándares.>>}
\KUItem{IS}{Agents}{Elective}{AgentTheory}{}{<<Agent theory>>}	\LO{IS}{Agents}{Elective}{Familiarity}{DescribeTheAgent}{<<Describe las aplicaciones de teoría de agentes para dominios como agentes de software, asistentes personales, y agentes creibles.>>}
"\KUItem{IS}{Agents}{Elective}{Rationality}{}{<<Rationality, game theory
\begin{subtopics}
\item Decision-theoretic agents
\item Markov decision processes (MDP)
\end{subtopics}>>}"	\LO{IS}{Agents}{Elective}{Familiarity}{DescribeTheUsed}{<<Describe los paradigmas primarios usados por agentes de aprendizaje.>>}
"\KUItem{IS}{Agents}{Elective}{Software}{}{<<Software agents, personal assistants, and information access
\begin{subtopics}
\item Collaborative agents
\item Information-gathering agents
\item Believable agents (synthetic characters, modeling emotions in agents)
\end{subtopics}>>}"	\LO{IS}{Agents}{Elective}{Usage}{DemonstrateUsingHow}{<<Demuestra mediante ejemplos adecuados como los sistemas multi-agente soportan interacción entre agentes.>>}
\KUItem{IS}{Agents}{Elective}{Learning}{}{<<Learning agents>>}	
"\KUItem{IS}{Agents}{Elective}{Multi}{}{<<Multi-agent systems
\begin{subtopics}
\item Collaborating agents
\item Agent teams
\item Competitive agents (e.g., auctions, voting)
\item Swarm systems and biologically inspired models
\end{subtopics}>>}"	
	
\KU{IS}{NaturalLanguageProcessing}{<<Natural Language Processing>>}{HCINewInteractiveTechnologies,HCINewInteractiveTechnologies}{0}{0}	
\KUDescription{IS}{NaturalLanguageProcessing}{<<~>>}	
\KUItem{IS}{NaturalLanguageProcessing}{Elective}{Deterministic}{}{<<Deterministic and stochastic grammars>>}	\LO{IS}{NaturalLanguageProcessing}{Elective}{Assessment}{DefineAnd}{<<Define y contrasta gramáticas de tipo estocásticas y determinísticas, dando ejemplos y demostrando como adecuar cada una de ellas.>>}
"\KUItem{IS}{NaturalLanguageProcessing}{Elective}{Parsing}{}{<<Parsing algorithms
\begin{subtopics}
\item CFGs and chart parsers (e.g. CYK)
\item Probabilistic CFGs and weighted CYK
\end{subtopics}>>}"	\LO{IS}{NaturalLanguageProcessing}{Elective}{Usage}{Simulate}{<<Simula, aplica, o implementa algoritmos clásicos y estocásticos para el parseo de un lenguaje natural.>>}
"\KUItem{IS}{NaturalLanguageProcessing}{Elective}{Representing}{}{<<Representing meaning / Semantics
\begin{subtopics}
\item Logic-based knowledge representations
\item Semantic roles
\item Temporal representations
\item Beliefs, desires, and intentions
\end{subtopics}>>}"	\LO{IS}{NaturalLanguageProcessing}{Elective}{Familiarity}{IdentifyTheRepresenting}{<<Identifica los retos de la representación del significado.>>}
\KUItem{IS}{NaturalLanguageProcessing}{Elective}{Corpus}{}{<<Corpus-based methods>>}	\LO{IS}{NaturalLanguageProcessing}{Elective}{Familiarity}{ListTheUsing}{<<Lista las ventajas de usar corpus estándares. Identifica ejemplos de corpus actuales para una variedad de tareas de PLN.>>}
\KUItem{IS}{NaturalLanguageProcessing}{Elective}{N}{}{<<N-grams and HMMs>>}	\LO{IS}{NaturalLanguageProcessing}{Elective}{Familiarity}{IdentifyTechniques}{<<Identifica técnicas para la recuperación de la información, traducción de lenguajes, y clasificación de textos.>>}
\KUItem{IS}{NaturalLanguageProcessing}{Elective}{Smoothing}{}{<<Smoothing and backoff>>}	
\KUItem{IS}{NaturalLanguageProcessing}{Elective}{Examples}{}{<<Examples of use: POS tagging and morphology>>}	
"\KUItem{IS}{NaturalLanguageProcessing}{Elective}{Information}{IMInformationStorageandRetrieval,IMInformationStorageandRetrieval}{<<Information retrieval
\begin{subtopics}
\item Vector space model
\begin{subtopics}
\item TF \& IDF
\end{subtopics}
\item Precision and recall
\end{subtopics}>>}"	
\KUItem{IS}{NaturalLanguageProcessing}{Elective}{InformationExtraction}{}{<<Information extraction>>}	
\KUItem{IS}{NaturalLanguageProcessing}{Elective}{Language}{}{<<Language translation>>}	
"\KUItem{IS}{NaturalLanguageProcessing}{Elective}{Text}{}{<<Text classification, categorization
\begin{subtopics}
\item Bag of words model
\end{subtopics}>>}"	
	
\KU{IS}{AdvancedMachineLearning}{<<Advanced Machine Learning>>}{}{0}{0}	
\KUDescription{IS}{AdvancedMachineLearning}{<<~>>}	
\KUItem{IS}{AdvancedMachineLearning}{Elective}{Definition}{}{<<Definition and examples of broad variety of machine learning tasks>>}	\LO{IS}{AdvancedMachineLearning}{Elective}{Familiarity}{ExplainTheTheStyles}{<<Explica las diferencias entre los tres estilos de aprendizaje: supervisado, por refuerzo y no supervisado.>>}
\KUItem{IS}{AdvancedMachineLearning}{Elective}{General}{}{<<General statistical-based learning, parameter estimation (maximum likelihood)>>}	\LO{IS}{AdvancedMachineLearning}{Elective}{Usage}{ImplementSimpleSupervised}{<<Implementa algoritmos simples para el aprendizaje supervisado, aprendizaje por refuerzo, y aprendizaje no supervisado.>>}
\KUItem{IS}{AdvancedMachineLearning}{Elective}{Inductive}{}{<<Inductive logic programming (ILP)>>}	\LO{IS}{AdvancedMachineLearning}{Elective}{Usage}{DetermineWhichThree}{<<Determina cuál de los tres estilos de aprendizaje es el apropiado para el dominio de un problema en particular.>>}
"\KUItem{IS}{AdvancedMachineLearning}{Elective}{Supervised}{}{<<Supervised learning
\begin{subtopics}
\item Learning decision trees
\item Learning neural networks
\item Support vector machines (SVMs)
\end{subtopics}>>}"	\LO{IS}{AdvancedMachineLearning}{Elective}{Assessment}{CompareAndOf}{<<Compara y contrasta cada una de las siguientes técnicas, dando ejemplo de cuando una estrategia es la mejor: árboles de decisión, redes neuronales, y redes bayesianas.>>}
\KUItem{IS}{AdvancedMachineLearning}{Elective}{Ensembles}{}{<<Ensembles>>}	\LO{IS}{AdvancedMachineLearning}{Elective}{Assessment}{EvaluateThe}{<<Evalúa el rendimiento de un sistema de aprendizaje simple en un conjunto de datos reales.>>}
\KUItem{IS}{AdvancedMachineLearning}{Elective}{Nearest}{}{<<Nearest-neighbor algorithms>>}	\LO{IS}{AdvancedMachineLearning}{Elective}{Familiarity}{CharacterizeTheThe}{<<Describe el estado del arte en la teoría del aprendizaje, incluyendo sus logros y limitantes.>>}
"\KUItem{IS}{AdvancedMachineLearning}{Elective}{Unsupervised}{}{<<Unsupervised Learning and clustering
\begin{subtopics}
\item EM
\item K-means
\item Self-organizing maps
\end{subtopics}>>}"	\LO{IS}{AdvancedMachineLearning}{Elective}{Usage}{ExplainTheOverfitting}{<<Explica el problema del sobreajuste, conjuntamente con técnicas para determinar y manejar el problema.>>}
\KUItem{IS}{AdvancedMachineLearning}{Elective}{Semi}{}{<<Semi-supervised learning>>}	
\KUItem{IS}{AdvancedMachineLearning}{Elective}{Learning}{ISReasoningUnderUncertainty,ISReasoningUnderUncertainty}{<<Learning graphical models>>}	
\KUItem{IS}{AdvancedMachineLearning}{Elective}{Performance}{}{<<Performance evaluation (such as cross-validation, area under ROC curve)>>}	
\KUItem{IS}{AdvancedMachineLearning}{Elective}{LearningTheory}{}{<<Learning theory>>}	
\KUItem{IS}{AdvancedMachineLearning}{Elective}{The}{}{<<The problem of overfitting, the curse of dimensionality>>}	
"\KUItem{IS}{AdvancedMachineLearning}{Elective}{Reinforcement}{}{<<Reinforcement learning
\begin{subtopics}
\item Exploration vs. exploitation trade-off
\item Markov decision processes
\item Value and policy iteration
\end{subtopics}>>}"	
\KUItem{IS}{AdvancedMachineLearning}{Elective}{Application}{IMDataMining,IMDataMining}{<<Application of Machine Learning algorithms to Data Mining (cross-reference IM/Data Mining)>>}	
Error	
\KU{IS}{Robotics}{<<Robotics>>}{}{0}{0}	
\KUDescription{IS}{Robotics}{<<~>>}	
"\KUItem{IS}{Robotics}{Elective}{Overview}{}{<<Overview: problems and progress
\begin{subtopics}
\item State-of-the-art robot systems, including their sensors and an overview of their sensor processing
\item Robot control architectures, e.g., deliberative vs. reactive control and Braitenberg vehicles
\item World modeling and world models
\item Inherent uncertainty in sensing and in control
\end{subtopics}>>}"	\LO{IS}{Robotics}{Elective}{Familiarity}{ListCapabilities}{<<Listar capacidades y limitaciones de sistemas del estado del arte en robótica de hoy , incluyendo sus sensores y el procesamiento del sensor crucial que informa a esos sistemas.>>}
\KUItem{IS}{Robotics}{Elective}{Configuration}{}{<<Configuration space and environmental maps>>}	\LO{IS}{Robotics}{Elective}{Usage}{Integrate}{<<Integrar sensores, actuadores y software en un robot diseñado para emprender alguna tarea.>>}
\KUItem{IS}{Robotics}{Elective}{Interpreting}{}{<<Interpreting uncertain sensor data>>}	\LO{IS}{Robotics}{Elective}{Usage}{Program}{<<Programar un robot para llevar a cabo tareas simples usando arquitecturas de control deliverativo, reactivo y/o híbrido .>>}
\KUItem{IS}{Robotics}{Elective}{Localizing}{}{<<Localizing and mapping>>}	\LO{IS}{Robotics}{Elective}{Usage}{ImplementFundamental}{<<Implementar algoritmos de planificación de movimientos fundamentales dentro del espacio de configuración de un robot.>>}
\KUItem{IS}{Robotics}{Elective}{Navigation}{}{<<Navigation and control>>}	\LO{IS}{Robotics}{Elective}{Familiarity}{CharacterizeTheWith}{<<Caracterizar las incertidumbres asociadas con sensores y actuadores de robot comunes; articular estrategias para mitigar esas incertidumbres. >>}
\KUItem{IS}{Robotics}{Elective}{Motion}{}{<<Motion planning>>}	\LO{IS}{Robotics}{Elective}{Familiarity}{ListTheRobots}{<<Listar las diferencias entre representaciones de los robot de su enterno externo, incluyendo sus fortalezas y defectos.>>}
\KUItem{IS}{Robotics}{Elective}{Multiple}{}{<<Multiple-robot coordination>>}	\LO{IS}{Robotics}{Elective}{Assessment}{CompareAndLeast}{<<Comparar y contrastar al menos tres estrategias para la navegación de robots dentro de entornos conocidos y/o no conocidos, incluyendo sus fortalezas y defectos.>>}
	\LO{IS}{Robotics}{Elective}{Familiarity}{DescribeAt}{<<Describir al menos una aproximación para la coordinación de acciones y detección de varios robots para realizar una simple tarea.>>}
	
\KU{IS}{PerceptionandComputerVision}{<<Perception and Computer Vision>>}{}{0}{0}	
\KUDescription{IS}{PerceptionandComputerVision}{<<~>>}	
"\KUItem{IS}{PerceptionandComputerVision}{Elective}{Computer}{}{<<Computer vision
\begin{subtopics}
\item Image acquisition, representation, processing and properties
\item Shape representation, object recognition and segmentation
\item Motion analysis
\end{subtopics}>>}"	\LO{IS}{PerceptionandComputerVision}{Elective}{Familiarity}{SummarizeTheImage}{<<Resumir la importancia del reconocimiento de imagenes y objetos en Inteligencia Artificial (AI) e indicar varias aplicaciones significativas de esta tecnologia.>>}
\KUItem{IS}{PerceptionandComputerVision}{Elective}{Audio}{}{<<Audio and speech recognition>>}	\LO{IS}{PerceptionandComputerVision}{Elective}{Familiarity}{ListAt}{<<Listar al menos tres aproximaciones de segmentación de imágenes, tales como algoritmos de limites (thresholding), basado en el borde y basado en regiones, junto con sus características definitorias, fortalezas y debilidades.>>}
\KUItem{IS}{PerceptionandComputerVision}{Elective}{Modularity}{}{<<Modularity in recognition>>}	\LO{IS}{PerceptionandComputerVision}{Elective}{Usage}{ImplementD}{<<Implementar reconocimiento de objetos en 2d basados en la representación del contorno y/o regiones basadas en formas.>>}
"\KUItem{IS}{PerceptionandComputerVision}{Elective}{Approaches}{ISAdvancedMachineLearning,ISAdvancedMachineLearning}{<<Approaches to pattern recognition
\begin{subtopics}
\item Classification algorithms and measures of classification quality
\item Statistical techniques
\end{subtopics}>>}"	\LO{IS}{PerceptionandComputerVision}{Elective}{Familiarity}{DistinguishThe}{<<Destinguir las metas de reconocimiento de sonido, palabras y del habla e identificar como la señal de audio bruto sera manejada diferentemente en cada uno de esos casos..>>}
	\LO{IS}{PerceptionandComputerVision}{Elective}{Familiarity}{ProvideAt}{<<Proporcionar al menos dos ejemplos de transformación de una fuente de datos de un dominio sensorial a otro, ejemplo, datos táctiles interpretados como imágenes en 2d de una sola banda.>>}
	\LO{IS}{PerceptionandComputerVision}{Elective}{Usage}{ImplementAAlgorithm}{<<Implementar un algoritmo para la extracción de caracteristicas en información real, ejemplo, un detector de bordes  o esquinas para imágenes o vectores de coeficientes de Fourier describiendo una pequeña porción de señal de audio.>>}
	\LO{IS}{PerceptionandComputerVision}{Elective}{Usage}{ImplementAn}{<<Implementar un algoritmo que combina características en percepciones de más alto nivel, p.e., un contorno o poligono a partir de primitivas visuales o fonemas de una señal de audio.>>}
	\LO{IS}{PerceptionandComputerVision}{Elective}{Usage}{ImplementAThat}{<<Implementar un algoritmo de clasificación que segmenta percepciones de entrada en categorias de salida y evalua cuantitativamente la clasificación resultante.>>}
	\LO{IS}{PerceptionandComputerVision}{Elective}{Assessment}{EvaluateTheThe}{<<Evaluar el desempeño de la función de extracción subyacente, en relación con al menos una aproximación alternativa posible (ya sea implementado o no) en su contribución a la tarea de clasificación (8) anterior>>}
	\LO{IS}{PerceptionandComputerVision}{Elective}{Familiarity}{DescribeAtClassification}{<<Describir por lo menos tres enfoques de clasificación, sus pre requisitos para aplicabilidad, fortalezas y deficiencias>>}
	
\KA{NC}{<<Redes y comunicaciones>>}{}	
"\KADescription{NC}{<<The Internet and computer networks are now ubiquitous and a growing number of computing activities strongly depend on the correct operation of the underlying network. Networks, both fixed and mobile, are a key part of the computing environment of today and tomorrow. Many computing applications that are used today would not be possible without networks. This dependency on the underlying network is likely to increase in the future. 

The high-level learning objective of this module can be summarized as follows: 
\begin{subtopics}
\item Thinking in a networked world. The world is more and more interconnected and the use of networks will continue to increase. Students must understand how the networks behave and the key principles behind the organization and operation of the networks. 
\item Continued study. The networking domain is rapidly evolving and a first networking course should be a starting point to other more advanced courses on network design, network management, sensor networks, etc.
\item Principles and practice interact. Networking is real and many of the design choices that involve networks also depend on practical constraints. Students should be exposed to these practical constraints by experimenting with networking, using tools, and writing networked software. 
\end{subtopics}

There are different ways of organizing a networking course. Some educators prefer a top-down approach, i.e., the course starts from the applications and then explains reliable delivery, routing and forwarding. Other educators prefer a bottom-up approach where the students start with the lower layers and build their understanding of the network, transport and application layers later. >>}"	
	
\KU{NC}{Introduction}{<<Introduction>>}{IASNetworkSecurity,IASNetworkSecurity}{1.5}{0}	
\KUDescription{NC}{Introduction}{<<Cross-reference IAS/Network Security, which discusses network security and its applications.>>}	
\KUItem{NC}{Introduction}{Core-Tier2}{Organization}{}{<<Organization of the Internet (Internet Service Providers, Content Providers, etc.)>>}	\LO{NC}{Introduction}{Core-Tier1}{Familiarity}{ArticulateThe}{<<Articular la organización de la Internet.>>}
\KUItem{NC}{Introduction}{Core-Tier2}{Switching}{}{<<Switching techniques (e.g., circuit, packet)>>}	\LO{NC}{Introduction}{Core-Tier1}{Familiarity}{ListAndAppropriate}{<<Listar y definir la terminología de red apropiada.>>}
\KUItem{NC}{Introduction}{Core-Tier2}{Physical}{}{<<Physical pieces of a network, including hosts, routers, switches, ISPs, wireless, LAN, access point, and firewalls>>}	\LO{NC}{Introduction}{Core-Tier1}{Familiarity}{DescribeTheOfNetworked}{<<Describir la estructura en capas de una arquitectura típica en red.>>}
\KUItem{NC}{Introduction}{Core-Tier2}{Layering}{}{<<Layering principles (encapsulation, multiplexing)>>}	\LO{NC}{Introduction}{Core-Tier1}{Familiarity}{IdentifyTheOfA}{<<Identificar los diferentes tipos de complejidad en una red (bordes, núcleo, etc.)>>}
\KUItem{NC}{Introduction}{Core-Tier2}{Roles}{}{<<Roles of the different layers (application, transport, network, datalink, physical)>>}	
	
\KU{NC}{NetworkedApplications}{<<Networked Applications>>}{}{1.5}{0}	
\KUDescription{NC}{NetworkedApplications}{<<~>>}	
\KUItem{NC}{NetworkedApplications}{Core-Tier1}{Naming}{}{<<Naming and address schemes (DNS, IP addresses, Uniform Resource Identifiers, etc.)>>}	\LO{NC}{NetworkedApplications}{Core-Tier1}{Familiarity}{ListTheThe}{<<Listar las diferencias y las relaciones entre los nombres y direcciones en una red.>>}
\KUItem{NC}{NetworkedApplications}{Core-Tier1}{Distributed}{}{<<Distributed applications (client/server, peer-to-peer, cloud, etc.)>>}	\LO{NC}{NetworkedApplications}{Core-Tier1}{Familiarity}{DefineTheNaming}{<<Definir los principios detrás de esquemas de denominación y ubicación del recurso.>>}
\KUItem{NC}{NetworkedApplications}{Core-Tier1}{Http}{}{<<HTTP as an application layer protocol>>}	\LO{NC}{NetworkedApplications}{Core-Tier1}{Usage}{ImplementAServer}{<<Implementar una aplicación simple cliente-servidor basada en {\it sockets} .>>}
\KUItem{NC}{NetworkedApplications}{Core-Tier1}{Multiplexing}{}{<<Multiplexing with TCP and UDP>>}	
\KUItem{NC}{NetworkedApplications}{Core-Tier1}{Socket}{}{<<Socket APIs>>}	
	
\KU{NC}{ReliableDataDelivery}{<<Reliable Data Delivery>>}{SFStateandStateMachines,SFReliabilitythroughRedundancy,SFStateandStateMachines,SFReliabilitythroughRedundancy}{0}{2}	
\KUDescription{NC}{ReliableDataDelivery}{<<~>>}	
\KUItem{NC}{ReliableDataDelivery}{Core-Tier2}{Error}{}{<<Error control (retransmission techniques, timers)>>}	\LO{NC}{ReliableDataDelivery}{Core-Tier2}{Familiarity}{DescribeTheReliable}{<<Describir el funcionamiento de los protocolos de entrega fiables.>>}
\KUItem{NC}{ReliableDataDelivery}{Core-Tier2}{Flow}{}{<<Flow control (acknowledgements, sliding window)>>}	\LO{NC}{ReliableDataDelivery}{Core-Tier2}{Familiarity}{ListTheAffect}{<<Listar los factores que afectan al rendimiento de los protocolos de entrega fiables.>>}
\KUItem{NC}{ReliableDataDelivery}{Core-Tier2}{Performance}{}{<<Performance issues (pipelining)>>}	\LO{NC}{ReliableDataDelivery}{Core-Tier2}{Usage}{DesignAndSimple}{<<Diseñar e implementar un protocolo confiable simple.>>}
\KUItem{NC}{ReliableDataDelivery}{Core-Tier2}{Tcp}{}{<<TCP>>}	
	
\KU{NC}{RoutingandForwarding}{<<Routing and Forwarding>>}{}{0}{1.5}	
\KUDescription{NC}{RoutingandForwarding}{<<~>>}	
\KUItem{NC}{RoutingandForwarding}{Core-Tier2}{Routing}{}{<<Routing versus forwarding>>}	\LO{NC}{RoutingandForwarding}{Core-Tier2}{Familiarity}{DescribeTheThe}{<<Describir la organización de la capa de red.>>}
\KUItem{NC}{RoutingandForwarding}{Core-Tier2}{Static}{}{<<Static routing>>}	\LO{NC}{RoutingandForwarding}{Core-Tier2}{Familiarity}{DescribeHowForwarded}{<<Describir cómo los paquetes se envían en una red IP.>>}
\KUItem{NC}{RoutingandForwarding}{Core-Tier2}{Internet}{}{<<Internet Protocol (IP)>>}	\LO{NC}{RoutingandForwarding}{Core-Tier2}{Familiarity}{ListTheOf}{<<Listar las ventajas de escalabilidad de direccionamiento jerárquico.>>}
\KUItem{NC}{RoutingandForwarding}{Core-Tier2}{Scalability}{}{<<Scalability issues (hierarchical addressing)>>}	
	
\KU{NC}{LocalAreaNetworks}{<<Local Area Networks>>}{}{0}{1.5}	
\KUDescription{NC}{LocalAreaNetworks}{<<~>>}	
\KUItem{NC}{LocalAreaNetworks}{Core-Tier2}{Multiple}{}{<<Multiple Access Problem>>}	\LO{NC}{LocalAreaNetworks}{Core-Tier2}{Familiarity}{DescribeHowForwardedEthernet}{<<Describir como los paquetes son enviados en una red Ethernet.>>}
\KUItem{NC}{LocalAreaNetworks}{Core-Tier2}{Common}{}{<<Common approaches to multiple access (exponential-backoff, time division multiplexing, etc)>>}	\LO{NC}{LocalAreaNetworks}{Core-Tier2}{Familiarity}{DescribeTheIp}{<<Describir las diferencias entre IP y Ethernet.>>}
\KUItem{NC}{LocalAreaNetworks}{Core-Tier2}{Local}{}{<<Local Area Networks>>}	\LO{NC}{LocalAreaNetworks}{Core-Tier2}{Familiarity}{DescribeTheIp}{<<Describir las relaciones entre IP y Ethernet.>>}
\KUItem{NC}{LocalAreaNetworks}{Core-Tier2}{Ethernet}{}{<<Ethernet>>}	\LO{NC}{LocalAreaNetworks}{Core-Tier2}{Familiarity}{DescribeTheIn}{<<Describir las etapas usadas en un enfoque común para el problema de múltiples accesos.>>}
\KUItem{NC}{LocalAreaNetworks}{Core-Tier2}{Switching}{}{<<Switching>>}	
	
\KU{NC}{ResourceAllocation}{<<Resource Allocation>>}{}{0}{1}	
\KUDescription{NC}{ResourceAllocation}{<<~>>}	
\KUItem{NC}{ResourceAllocation}{Core-Tier2}{Need}{}{<<Need for resource allocation>>}	\LO{NC}{ResourceAllocation}{Core-Tier2}{Familiarity}{DescribeHowBe}{<<Describir como los recursos pueden ser almacenados en la red.>>}
\KUItem{NC}{ResourceAllocation}{Core-Tier2}{Fixed}{}{<<Fixed allocation (TDM, FDM, WDM) versus dynamic allocation>>}	\LO{NC}{ResourceAllocation}{Core-Tier2}{Familiarity}{DescribeTheInNetwork}{<<Describir los problemas de congestión en una red grande.>>}
\KUItem{NC}{ResourceAllocation}{Core-Tier2}{End}{}{<<End-to-end versus network assisted approaches>>}	\LO{NC}{ResourceAllocation}{Core-Tier2}{Assessment}{CompareAndAnd}{<<Comparar y contrastar las técnicas de almacenamiento estático y dinámico.>>}
\KUItem{NC}{ResourceAllocation}{Core-Tier2}{Fairness}{}{<<Fairness>>}	\LO{NC}{ResourceAllocation}{Core-Tier2}{Assessment}{CompareAndApproaches}{<<Comparar y contrastar los enfoques actuales de la congestión.>>}
\KUItem{NC}{ResourceAllocation}{Core-Tier2}{Principles}{}{<<Principles of congestion control>>}	
\KUItem{NC}{ResourceAllocation}{Core-Tier2}{Approaches}{}{<<Approaches to Congestion (e.g., Content Distribution Networks) >>}	
	
\KU{NC}{Mobility}{<<Mobility>>}{}{0}{1}	
\KUDescription{NC}{Mobility}{<<~>>}	
\KUItem{NC}{Mobility}{Core-Tier2}{PrinciplesOf}{}{<<Principles of cellular networks>>}	\LO{NC}{Mobility}{Core-Tier2}{Familiarity}{DescribeTheA}{<<Describir la organización de una red inalambrica.>>}
\KUItem{NC}{Mobility}{Core-Tier2}{Eight}{}{<<802.11 networks>>}	\LO{NC}{Mobility}{Core-Tier2}{Familiarity}{DescribeHowSupport}{<<Describir como las redes inalámbricas soportan usuarios móviles.>>}
\KUItem{NC}{Mobility}{Core-Tier2}{Issues}{}{<<Issues in supporting mobile nodes (home agents)>>}	
	
\KU{NC}{SocialNetworking}{<<Social Networking>>}{}{0}{0}	
\KUDescription{NC}{SocialNetworking}{<<~>>}	
\KUItem{NC}{SocialNetworking}{Elective}{Social}{}{<<Social networks overview>>}	\LO{NC}{SocialNetworking}{Elective}{Familiarity}{DiscussTheSuch}{<<Discutir los principios fundamentales(como pertenencia, confianza) de una red social.>>}
\KUItem{NC}{SocialNetworking}{Elective}{Example}{}{<<Example social network platforms>>}	\LO{NC}{SocialNetworking}{Elective}{Familiarity}{DescribeHowNetworks}{<<Describir como redes sociales existentes operan.>>}
\KUItem{NC}{SocialNetworking}{Elective}{Structure}{}{<<Structure of social network graphs>>}	\LO{NC}{SocialNetworking}{Elective}{Usage}{ConstructA}{<<Construir un grafo de una red social a partir de datos de la red.>>}
\KUItem{NC}{SocialNetworking}{Elective}{SocialNetwork}{}{<<Social network analysis>>}	\LO{NC}{SocialNetworking}{Elective}{Usage}{AnalyzeATo}{<<Analizar una red social para determinar quienes son las personas importantes.>>}
	\LO{NC}{SocialNetworking}{Elective}{Assessment}{EvaluateAOf}{<<Evaluar una determinada interpretación de una pregunta de red social con los datos asociados.>>}
	
\KA{OS}{<<Sistemas Operativos.>>}{}	
\KADescription{OS}{<<An operating system defines an abstraction of hardware and manages resource sharing among the computer’s users. The topics in this area explain the most basic knowledge of operating systems in the sense of interfacing an operating system to networks, teaching the difference between the kernel and user modes, and developing key approaches to operating system design and implementation. This knowledge area is structured to be complementary to the Systems Fundamentals (SF), Networking and Communication (NC), Information Assurance and Security (IAS), and the Parallel and Distributed Computing (PD) knowledge areas. The Systems Fundamentals and Information Assurance and Security knowledge areas are the new ones to include contemporary issues. For example, Systems Fundamentals includes topics such as performance, virtualization and isolation, and resource allocation and scheduling; Parallel and Distributed Systems includes parallelism fundamentals; and Information Assurance and Security includes forensics and security issues in depth. Many courses in Operating Systems will draw material from across these knowledge areas. >>}	
	
\KU{OS}{OverviewofOperatingSystems}{<<Overview of Operating Systems>>}{}{2}{0}	
\KUDescription{OS}{OverviewofOperatingSystems}{<<~>>}	
\KUItem{OS}{OverviewofOperatingSystems}{Core-Tier1}{Role}{}{<<Role and purpose of the operating system>>}	\LO{OS}{OverviewofOperatingSystems}{Core-Tier1}{Familiarity}{ExplainTheFunctions}{<<Explicar los objetivos y funciones de un sistema operativo moderno.>>}
\KUItem{OS}{OverviewofOperatingSystems}{Core-Tier1}{Functionality}{}{<<Functionality of a typical operating system>>}	\LO{OS}{OverviewofOperatingSystems}{Core-Tier1}{Usage}{AnalyzeTheIn}{<<Analizar las ventajas y desventajas inherentes en el diseño de un sistema operativo.>>}
\KUItem{OS}{OverviewofOperatingSystems}{Core-Tier1}{Mechanisms}{}{<<Mechanisms to support client-server models, hand-held devices>>}	\LO{OS}{OverviewofOperatingSystems}{Core-Tier1}{Familiarity}{DescribeTheASystem}{<<Describir las funciones de un sistema operativo contemporaneo respecto a conveniencia, eficiencia, y su habilidad para evolucionar.>>}
\KUItem{OS}{OverviewofOperatingSystems}{Core-Tier1}{Design}{}{<<Design issues (efficiency, robustness, flexibility, portability, security, compatibility)>>}	\LO{OS}{OverviewofOperatingSystems}{Core-Tier1}{Familiarity}{DiscussNetworked}{<<Discutir acerca de sistemas operativos cliente-servidor, en red, distribuidos y cómo se diferencian de los sistemas operativos de un solo usuario.>>}
\KUItem{OS}{OverviewofOperatingSystems}{Core-Tier1}{Influences}{}{<<Influences of security, networking, multimedia, windowing systems>>}	\LO{OS}{OverviewofOperatingSystems}{Core-Tier1}{Familiarity}{IdentifyPotential}{<<Identificar amenazas potenciales a sistemas operativos y las características del diseño de seguridad para protegerse de ellos.>>}
	
\KU{OS}{OperatingSystemPrinciples}{<<Operating System Principles>>}{}{2}{0}	
\KUDescription{OS}{OperatingSystemPrinciples}{<<~>>}	
\KUItem{OS}{OperatingSystemPrinciples}{Core-Tier1}{Structuring}{}{<<Structuring methods (monolithic, layered, modular, micro-kernel models)>>}	\LO{OS}{OperatingSystemPrinciples}{Core-Tier1}{Familiarity}{ExplainTheA}{<<Explicar el concepto de una capa lógica.>>}
\KUItem{OS}{OperatingSystemPrinciples}{Core-Tier1}{Abstractions}{}{<<Abstractions, processes, and resources>>}	\LO{OS}{OperatingSystemPrinciples}{Core-Tier1}{Familiarity}{ExplainTheBuilding}{<<Explicar los beneficios de construir capas abstractas en forma jerárquica.>>}
\KUItem{OS}{OperatingSystemPrinciples}{Core-Tier1}{Concepts}{}{<<Concepts of application program interfaces (APIs)>>}	\LO{OS}{OperatingSystemPrinciples}{Core-Tier1}{Assessment}{DescribeTheApis}{<<Describir el valor de la API y {\it middleware}.>>}
\KUItem{OS}{OperatingSystemPrinciples}{Core-Tier1}{The}{}{<<The evolution of hardware/software techniques and application needs>>}	\LO{OS}{OperatingSystemPrinciples}{Core-Tier1}{Familiarity}{DescribeHowAreApplication}{<<Describir como los recursos computacionales son usados por aplicaciones de software y administradas por el software del sistema.>>}
\KUItem{OS}{OperatingSystemPrinciples}{Core-Tier1}{Device}{}{<<Device organization>>}	\LO{OS}{OperatingSystemPrinciples}{Core-Tier1}{Usage}{ContrastKernel}{<<Contrastar el modo {\it kernel} y modo usuario en un sistema operativo.>>}
\KUItem{OS}{OperatingSystemPrinciples}{Core-Tier1}{Interrupts}{}{<<Interrupts: methods and implementations>>}	\LO{OS}{OperatingSystemPrinciples}{Core-Tier1}{Familiarity}{DiscussTheDisadvantagesInterrupt}{<<Discutir las ventajas y desventajas del uso de procesamiento interrumpido.>>}
\KUItem{OS}{OperatingSystemPrinciples}{Core-Tier1}{Concept}{}{<<Concept of user/system state and protection, transition to kernel mode>>}	\LO{OS}{OperatingSystemPrinciples}{Core-Tier1}{Familiarity}{ExplainTheAAnd}{<<Explicar el uso de una lista de dispositivos y el controlador de colas de entrada y salida.>>}
	
\KU{OS}{Concurrency}{<<Concurrency>>}{}{0}{3}	
\KUDescription{OS}{Concurrency}{<<~>>}	
\KUItem{OS}{Concurrency}{Core-Tier2}{States}{SFStateandStateMachines,SFStateandStateMachines}{<<States and state diagrams>>}	\LO{OS}{Concurrency}{Core-Tier2}{Familiarity}{DescribeTheConcurrency}{<<Describir la necesidad de concurrencia en el marco de un sistema operativo.>>}
\KUItem{OS}{Concurrency}{Core-Tier2}{Structures}{}{<<Structures (ready list, process control blocks, and so forth)>>}	\LO{OS}{Concurrency}{Core-Tier2}{Usage}{DemonstrateTheTime}{<<Demostrar los potenciales problemas de tiempo de ejecución derivados de la operación simultánea de muchas tareas diferentes.>>}
\KUItem{OS}{Concurrency}{Core-Tier2}{Dispatching}{}{<<Dispatching and context switching>>}	\LO{OS}{Concurrency}{Core-Tier2}{Familiarity}{SummarizeTheMechanisms}{<<Resumir el rango de mecanismos que pueden ser usados a nivel del sistema operativo para realizar sistemas concurrentes y describir los beneficios de cada uno.>>}
\KUItem{OS}{Concurrency}{Core-Tier2}{TheRole}{}{<<The role of interrupts>>}	\LO{OS}{Concurrency}{Core-Tier2}{Familiarity}{ExplainTheThat}{<<Explicar los diferentes estados por los que una tarea debe pasar y las estructuras de datos necesarias para el manejo de varias tareas.>>}
\KUItem{OS}{Concurrency}{Core-Tier2}{Managing}{}{<<Managing atomic access to OS objects>>}	\LO{OS}{Concurrency}{Core-Tier2}{Familiarity}{SummarizeTechniques}{<<Resumir las técnicas para lograr sicronización en un sistema operativo(por ejemplo, describir como implementar semáforos usando primitivas del sistema operativo.)>>}
\KUItem{OS}{Concurrency}{Core-Tier2}{Implementing}{}{<<Implementing synchronization primitives>>}	\LO{OS}{Concurrency}{Core-Tier2}{Familiarity}{DescribeReasons}{<<Describir las razones para usar interruptores, despacho, y cambio de contexto para soportar concurrencia en un sistema operativo.>>}
\KUItem{OS}{Concurrency}{Core-Tier2}{Multiprocessor}{SFParallelism,SFParallelism}{<<Multiprocessor issues (spin-locks, reentrancy)>>}	\LO{OS}{Concurrency}{Core-Tier2}{Usage}{CreateState}{<<Crear diagramas de estado y transición para los dominios de problemas simples.>>}
	
\KU{OS}{SchedulingandDispatch}{<<Scheduling and Dispatch>>}{}{0}{3}	
\KUDescription{OS}{SchedulingandDispatch}{<<~>>}	
\KUItem{OS}{SchedulingandDispatch}{Core-Tier2}{Preemptive}{SFResourceAllocationandScheduling,PDParallelPerformance,SFResourceAllocationandScheduling,PDParallelPerformance}{<<Preemptive and non-preemptive scheduling>>}	\LO{OS}{SchedulingandDispatch}{Core-Tier2}{Usage}{CompareAndCommon}{<<Comparar y contrastar los algoritmos comunes que se utilizan tanto para un programa preferente y no preferente de las tareas en los sistemas operativos, como la comparación de prioridad, el rendimiento, y los esquemas de distribución equitativa.>>}
\KUItem{OS}{SchedulingandDispatch}{Core-Tier2}{Schedulers}{SFResourceAllocationandScheduling,PDParallelPerformance,SFResourceAllocationandScheduling,PDParallelPerformance}{<<Schedulers and policies>>}	\LO{OS}{SchedulingandDispatch}{Core-Tier2}{Familiarity}{DescribeRelationships}{<<Describir las relaciones entre los algoritmos de planificación y dominios de aplicación.>>}
\KUItem{OS}{SchedulingandDispatch}{Core-Tier2}{Processes}{SFComputationalParadigms,SFComputationalParadigms}{<<Processes and threads>>}	\LO{OS}{SchedulingandDispatch}{Core-Tier2}{Familiarity}{DiscussTheProcessor}{<<Discutir los tipos de planeamiento de procesos {\it scheduling} de corto, a mediano, a largo plazo y I/O>>}
\KUItem{OS}{SchedulingandDispatch}{Core-Tier2}{Deadlines}{}{<<Deadlines and real-time issues>>}	\LO{OS}{SchedulingandDispatch}{Core-Tier2}{Usage}{DescribeTheProcesses}{<<Describir las diferencias entre procesos y hebras.>>}
	\LO{OS}{SchedulingandDispatch}{Core-Tier2}{Usage}{CompareAndAndTo}{<<Comparar y contrastar enfoques estáticos y dinámicos para {\it scheduling} en tiempo real.>>}
	\LO{OS}{SchedulingandDispatch}{Core-Tier2}{Familiarity}{DiscussThePreemption}{<<Hablar sobre la necesidad de tiempos límites de {\it scheduling}.>>}
	\LO{OS}{SchedulingandDispatch}{Core-Tier2}{Usage}{IdentifyWays}{<<Identificar formas en que la lógica expresada en algoritmos de planificación son de aplicación a otros ámbitos, tales como I/O del disco, la programación de disco de red, programación de proyectos y problemas más allá de la computación.>>}
	
\KU{OS}{MemoryManagement}{<<Memory Management>>}{}{0}{3}	
\KUDescription{OS}{MemoryManagement}{<<~>>}	
\KUItem{OS}{MemoryManagement}{Core-Tier2}{Review}{}{<<Review of physical memory and memory management hardware>>}	\LO{OS}{MemoryManagement}{Core-Tier2}{Familiarity}{ExplainMemory}{<<Explicar la jerarquía de la memoria y costo-rendimiento de intercambio.>>}
\KUItem{OS}{MemoryManagement}{Core-Tier2}{Working}{}{<<Working sets and thrashing>>}	\LO{OS}{MemoryManagement}{Core-Tier2}{Familiarity}{SummarizeTheVirtual}{<<Resumir los principios de memoria virtual tal como se aplica para el almacenamiento en cache y paginación.>>}
\KUItem{OS}{MemoryManagement}{Core-Tier2}{Caching}{ARMemorysystemorganizationandarchitecture}{<<Caching>>}	\LO{OS}{MemoryManagement}{Core-Tier2}{Assessment}{EvaluateTheIn}{<<Evaluar las ventajas y desventajas en términos del tamaño de memoria (memoria principal, memoria caché, memoria axiliar) y la velocidad del procesador.>>}
	\LO{OS}{MemoryManagement}{Core-Tier2}{Assessment}{Defend}{<<Defiende las diferentes formas de asignar memoria a las tareas, citando las ventajas relativas de cada uno.>>}
	\LO{OS}{MemoryManagement}{Core-Tier2}{Familiarity}{DescribeTheAndCache}{<<Describir el motivo y el uso de memoria caché (rendimiento y proximidad, dimensión diferente de como los caches complican el aislamiento y abstracción en VM).>>}
	\LO{OS}{MemoryManagement}{Core-Tier2}{Familiarity}{DiscussTheThrashing}{<<Estudiar los conceptos de \textit{thrashing}, tanto en términos de las razones por las que se produce y las técnicas usadas para el reconocimiento y manejo del problema.>>}
	
\KU{OS}{SecurityandProtection}{<<Security and Protection>>}{}{0}{2}	
\KUDescription{OS}{SecurityandProtection}{<<~>>}	
\KUItem{OS}{SecurityandProtection}{Core-Tier2}{Overview}{}{<<Overview of system security>>}	\LO{OS}{SecurityandProtection}{Core-Tier2}{Assessment}{ArticulateTheProtection}{<<Articular la necesidad para la protección y seguridad en un sistema operativo.>>}
\KUItem{OS}{SecurityandProtection}{Core-Tier2}{Policy}{}{<<Policy/mechanism separation>>}	\LO{OS}{SecurityandProtection}{Core-Tier2}{Familiarity}{SummarizeTheLimitations}{<<Resumir las caracteristicas y limitaciones de un sistema operativo usado para proporcionar protección y seguridad.>>}
\KUItem{OS}{SecurityandProtection}{Core-Tier2}{Security}{}{<<Security methods and devices>>}	\LO{OS}{SecurityandProtection}{Core-Tier2}{Familiarity}{ExplainTheIn}{<<Explicar el mecanismo disponible en un OS para controlar los accesos a los recursos.>>}
\KUItem{OS}{SecurityandProtection}{Core-Tier2}{Protection}{}{<<Protection, access control, and authentication>>}	\LO{OS}{SecurityandProtection}{Core-Tier2}{Usage}{Carry}{<<Realizar tareas de administración de sistemas sencillas de acuerdo a una política de seguridad, por ejemplo la creación de cuentas, el establecimiento de permisos, aplicación de parches y organización de backups regulares.>>}
\KUItem{OS}{SecurityandProtection}{Core-Tier2}{Backups}{}{<<Backups>>}	
	
\KU{OS}{VirtualMachines}{<<Virtual Machines>>}{}{0}{0}	
\KUDescription{OS}{VirtualMachines}{<<~>>}	
\KUItem{OS}{VirtualMachines}{Elective}{Types}{}{<<Types of virtualization (including Hardware/Software, OS, Server, Service, Network)>>}	\LO{OS}{VirtualMachines}{Elective}{Familiarity}{ExplainTheVirtual}{<<Explicar el concepto de memoria virtual y la forma cómo se realiza en hadware y software.>>}
\KUItem{OS}{VirtualMachines}{Elective}{Paging}{}{<<Paging and virtual memory>>}	\LO{OS}{VirtualMachines}{Elective}{Familiarity}{DifferentiateEmulation}{<<Diferenciar emulacion y el aislamiento.>>}
\KUItem{OS}{VirtualMachines}{Elective}{Virtual}{}{<<Virtual file systems>>}	\LO{OS}{VirtualMachines}{Elective}{Assessment}{EvaluateVirtualization}{<<Evaluar virtualización de compensaciones.>>}
\KUItem{OS}{VirtualMachines}{Elective}{Hypervisors}{}{<<Hypervisors>>}	\LO{OS}{VirtualMachines}{Elective}{Usage}{DiscussHypervisors}{<<Discutir sobre hipervisores y la necesidad para ellos en conjunto con diferentes tipos de hipervisores.>>}
\KUItem{OS}{VirtualMachines}{Elective}{Portable}{}{<<Portable virtualization; emulation vs. isolation>>}	
\KUItem{OS}{VirtualMachines}{Elective}{Cost}{}{<<Cost of virtualization>>}	
	
\KU{OS}{DeviceManagement}{<<Device Management>>}{}{0}{0}	
\KUDescription{OS}{DeviceManagement}{<<~>>}	
\KUItem{OS}{DeviceManagement}{Elective}{Characteristics}{}{<<Characteristics of serial and parallel devices>>}	\LO{OS}{DeviceManagement}{Elective}{Familiarity}{ExplainTheBetween}{<<Explique la diferencia clave entre dispositivos seriales y paralelos e identificar las condiciones en las cuales cada uno es apropiado.>>}
\KUItem{OS}{DeviceManagement}{Elective}{Abstracting}{}{<<Abstracting device differences>>}	\LO{OS}{DeviceManagement}{Elective}{Usage}{IdentifyTheThe}{<<Identificar la relación entre el hardware físico y los dispositivos virtuales mantenidos por el sistema operativo.>>}
\KUItem{OS}{DeviceManagement}{Elective}{Buffering}{}{<<Buffering strategies>>}	\LO{OS}{DeviceManagement}{Elective}{Familiarity}{ExplainBuffering}{<<Explique {\it buffering} y describir las estrategias para su aplicación.>>}
\KUItem{OS}{DeviceManagement}{Elective}{Direct}{}{<<Direct memory access>>}	\LO{OS}{DeviceManagement}{Elective}{Usage}{DifferentiateThe}{<<Diferenciar los mecanismos utilizados en la interconexión de un rango de dispositivos (incluyendo dispositivos portátiles, redes, multimedia) a un ordenador y explicar las implicaciones de éstas para el diseño de un sistema operativo.>>}
\KUItem{OS}{DeviceManagement}{Elective}{Recovery}{}{<<Recovery from failures>>}	\LO{OS}{DeviceManagement}{Elective}{Usage}{DescribeTheDisadvantagesMemory}{<<Describir las ventajas y desventajas de acceso directo a memoria y discutir las cirscunstancias en cuales se justifica su uso.>>}
	\LO{OS}{DeviceManagement}{Elective}{Familiarity}{IdentifyTheFailure}{<<Identificar los requerimientos para recuperación de errores.>>}
	\LO{OS}{DeviceManagement}{Elective}{Usage}{ImplementADriver}{<<Implementar un controlador de dispositivo simple para una gama de posibles equipos.>>}
	
\KU{OS}{FileSystems}{<<File Systems>>}{}{0}{0}	
\KUDescription{OS}{FileSystems}{<<~>>}	
\KUItem{OS}{FileSystems}{Elective}{Files}{}{<<Files: data, metadata, operations, organization, buffering, sequential, nonsequential.>>}	\LO{OS}{FileSystems}{Elective}{Familiarity}{DescribeTheBe}{<<Describir las decisiones que deben tomarse en el diseño de sistemas de archivos.>>}
\KUItem{OS}{FileSystems}{Elective}{Directories}{}{<<Directories: contents and structure.>>}	\LO{OS}{FileSystems}{Elective}{Usage}{CompareAndApproachesOrganization}{<<Comparar y contrastar los diferentes enfoques para la organización de archivos, el reconocimiento de las fortalezas y debilidades de cada uno. >>}
\KUItem{OS}{FileSystems}{Elective}{File}{}{<<File systems: partitioning, mount/unmount, virtual file systems.>>}	\LO{OS}{FileSystems}{Elective}{Familiarity}{SummarizeHow}{<<Resumir cómo el desarrollo de hadware ha dado lugar a cambios en las prioridades para el diseño y la gestión de sistemas de archivos.>>}
\KUItem{OS}{FileSystems}{Elective}{Standard}{}{<<Standard implementation techniques>>}	\LO{OS}{FileSystems}{Elective}{Familiarity}{SummarizeTheJournaling}{<<Resumir el uso de diarios y como los sistemas de archivos de registro estructurado mejora la tolerancia a fallos.>>}
\KUItem{OS}{FileSystems}{Elective}{Memory}{}{<<Memory-mapped files>>}	
\KUItem{OS}{FileSystems}{Elective}{Special}{}{<<Special-purpose file systems.>>}	
\KUItem{OS}{FileSystems}{Elective}{Naming}{}{<<Naming, searching, access, backups>>}	
\KUItem{OS}{FileSystems}{Elective}{Journaling}{}{<<Journaling and log-structured file systems>>}	
	
\KU{OS}{RealTimeandEmbeddedSystems}{<<Real Time and Embedded Systems>>}{}{0}{0}	
\KUDescription{OS}{RealTimeandEmbeddedSystems}{<<~>>}	
\KUItem{OS}{RealTimeandEmbeddedSystems}{Elective}{Process}{}{<<Process and task scheduling>>}	\LO{OS}{RealTimeandEmbeddedSystems}{Elective}{Familiarity}{DescribeWhatSystem}{<<Describir que hace a un sistema un sistema en tiempo real.>>}
\KUItem{OS}{RealTimeandEmbeddedSystems}{Elective}{MemoryDisk}{}{<<Memory/disk management requirements in a real-time environment>>}	\LO{OS}{RealTimeandEmbeddedSystems}{Elective}{Familiarity}{ExplainTheAnd}{<<Explicar la presencia y describir las características de latencia en sistemas de tiempo real>>}
\KUItem{OS}{RealTimeandEmbeddedSystems}{Elective}{Failures}{}{<<Failures, risks, and recovery.>>}	\LO{OS}{RealTimeandEmbeddedSystems}{Elective}{Familiarity}{SummarizeSpecial}{<<Resumir los problemas especiales que los sistemas en tiempo real presentan, incluyendo el riesgo, y cómo se tratan estos problemas.>>}
\KUItem{OS}{RealTimeandEmbeddedSystems}{Elective}{SpecialConcerns}{}{<<Special concerns in real-time systems>>}	
	
\KU{OS}{FaultTolerance}{<<Fault Tolerance>>}{}{0}{0}	
\KUDescription{OS}{FaultTolerance}{<<~>>}	
\KUItem{OS}{FaultTolerance}{Elective}{Fundamental}{SFReliabilitythroughRedundancy,SFReliabilitythroughRedundancy}{<<Fundamental concepts: reliable and available systems>>}	\LO{OS}{FaultTolerance}{Elective}{Familiarity}{ExplainTheTheTolerance}{<<Explicar la importancia de los términos tolerancia a fallos, fiabilidad y disponibilidad.>>}
\KUItem{OS}{FaultTolerance}{Elective}{Spatial}{SFReliabilitythroughRedundancy,SFReliabilitythroughRedundancy}{<<Spatial and temporal redundancy>>}	\LO{OS}{FaultTolerance}{Elective}{Familiarity}{OutlineThe}{<<Explicar en términos generales la gama de métodos para implementar la tolerancia a fallos en un sistema operativo.>>}
\KUItem{OS}{FaultTolerance}{Elective}{Methods}{}{<<Methods used to implement fault tolerance>>}	\LO{OS}{FaultTolerance}{Elective}{Familiarity}{ExplainHowSystem}{<<Explicar cómo un sistema operativo puede continar funcionando después de que ocurra una falla.>>}
\KUItem{OS}{FaultTolerance}{Elective}{Examples}{}{<<Examples of OS mechanisms for detection, recovery, restart to implement fault tolerance, use of these techniques for the OS’s own services.>>}	
	
\KU{OS}{SystemPerformanceEvaluation}{<<System Performance Evaluation>>}{}{0}{0}	
\KUDescription{OS}{SystemPerformanceEvaluation}{<<~>>}	
\KUItem{OS}{SystemPerformanceEvaluation}{Elective}{Why}{SFEvaluationTopicPerformance,SFEvaluationTopicPerformance}{<<Why system performance needs to be evaluated?>>}	\LO{OS}{SystemPerformanceEvaluation}{Elective}{Familiarity}{DescribeTheUsedHow}{<<Describir las medidas de rendimiento utilizados para determinar cómo el sistema funciona.>>}
\KUItem{OS}{SystemPerformanceEvaluation}{Elective}{What}{SFEvaluationTopicPerformance,SFEvaluationTopicPerformance}{<<What is to be evaluated?>>}	\LO{OS}{SystemPerformanceEvaluation}{Elective}{Familiarity}{ExplainTheModels}{<<Explicar los principales modelos de evaluación utilizados para evaluar un sistema.>>}
\KUItem{OS}{SystemPerformanceEvaluation}{Elective}{Systems}{}{<<Systems performance policies, e.g., caching, paging, scheduling, memory management, and security>>}	
\KUItem{OS}{SystemPerformanceEvaluation}{Elective}{Evaluation}{}{<<Evaluation models: deterministic, analytic, simulation, or implementation-specific>>}	
\KUItem{OS}{SystemPerformanceEvaluation}{Elective}{How}{}{<<How to collect evaluation data (profiling and tracing mechanisms)>>}	
	
\KA{PBD}{<<Desarrollo basados en plataforma.>>}{}	
"\KADescription{PBD}{<<Platform-based development is concerned with the design and development of software applications that reside on specific software platforms. In contrast to general purpose programming, platform-based development takes into account platform-specific constraints. For instance web programming, multimedia development, mobile computing, app development, and robotics are examples of relevant platforms that provide specific services/APIs/hardware that constrain development. Such platforms are characterized by the use of specialized APIs, distinct delivery/update mechanisms, and being abstracted away from the machine level. Platform-based development may be applied over a wide breadth of ecosystems. 

While we recognize that some platforms (e.g., web development) are prominent, we are also cognizant of the fact that no particular platform should be specified as a requirement in the CS2013 curricular guidelines. Consequently, this Knowledge Area highlights many of the platforms thathave become popular, without including any such platform in the core curriculum. We note that the general skill of developing with respect to an API or a constrained environment is covered in other Knowledge Areas, such as Software Development Fundamentals (SDF). Platform-based development further emphasizes such general skills within the context of particular platforms. >>}"	
	
\KU{PBD}{Introduction}{<<Introduction>>}{}{0}{0}	
\KUDescription{PBD}{Introduction}{<<This knowledge unit describes the fundamental differences that Platform-Based Development has over traditional software development. >>}	
\KUItem{PBD}{Introduction}{Elective}{Overview}{}{<<Overview of platforms (e.g., Web, Mobile, Game, Industrial)>>}	\LO{PBD}{Introduction}{Elective}{Familiarity}{DescribeHowDevelopment}{<<Describir cómo el desarrollo basado en plataforma difiere de la programación de proposito general.>>}
\KUItem{PBD}{Introduction}{Elective}{Programming}{}{<<Programming via platform-specific APIs>>}	\LO{PBD}{Introduction}{Elective}{Familiarity}{ListCharacteristics}{<<Listar las características de lenguajes de plataforma.>>}
\KUItem{PBD}{Introduction}{Elective}{OverviewOf}{}{<<Overview of Platform Languages (e.g., Objective C, HTML5)>>}	\LO{PBD}{Introduction}{Elective}{Usage}{WriteAnd}{<<Escribir y ejecutar un programa simple basado en plataforma.>>}
\KUItem{PBD}{Introduction}{Elective}{ProgrammingUnder}{}{<<Programming under platform constraints>>}	\LO{PBD}{Introduction}{Elective}{Familiarity}{ListTheDisadvantages}{<<Listar las ventajas y desventajas de la programación con restricciones de plataforma.>>}
	
\KU{PBD}{WebPlatforms}{<<Web Platforms>>}{}{0}{0}	
\KUDescription{PBD}{WebPlatforms}{<<~>>}	
\KUItem{PBD}{WebPlatforms}{Elective}{Web}{}{<<Web programming languages (e.g., HTML5, Java Script, PHP, CSS)>>}	\LO{PBD}{WebPlatforms}{Elective}{Usage}{DesignAndSimple}{<<Diseñar e implementar una aplicación web sencilla.>>}
\KUItem{PBD}{WebPlatforms}{Elective}{WebPlatform}{}{<<Web platform constraints>>}	\LO{PBD}{WebPlatforms}{Elective}{Familiarity}{DescribeTheTheOn}{<<Describir las limitaciones que la web pone a los desarrolladores.>>}
\KUItem{PBD}{WebPlatforms}{Elective}{Software}{}{<<Software as a Service (SaaS)>>}	\LO{PBD}{WebPlatforms}{Elective}{Assessment}{CompareAndProgramming}{<<Comparar y contrastar la programación web con  la programación de proposito general.>>}
\KUItem{PBD}{WebPlatforms}{Elective}{WebStandards}{}{<<Web standards>>}	\LO{PBD}{WebPlatforms}{Elective}{Familiarity}{DescribeTheSoftware}{<<Describir las diferencias entre software como un servicio y productos de software tradicionales.>>}
	\LO{PBD}{WebPlatforms}{Elective}{Familiarity}{DiscussHowImpact}{<<Discutir cómo los estándares de web  impactan el desarrollo de software.>>}
	\LO{PBD}{WebPlatforms}{Elective}{Assessment}{Review}{<<Revise una aplicación web existente con un estándar web actual.>>}
	
\KU{PBD}{MobilePlatforms}{<<Mobile Platforms>>}{}{0}{0}	
\KUDescription{PBD}{MobilePlatforms}{<<~>>}	
\KUItem{PBD}{MobilePlatforms}{Elective}{Mobile}{}{<<Mobile programming languages>>}	\LO{PBD}{MobilePlatforms}{Elective}{Usage}{DesignAndMobile}{<<Diseñar e implementar una aplicación móvil para una  plataforma móvil dada.>>}
\KUItem{PBD}{MobilePlatforms}{Elective}{Challenges}{}{<<Challenges with mobility and wireless communication>>}	\LO{PBD}{MobilePlatforms}{Elective}{Familiarity}{DiscussTheMobile}{<<Discutir las limitaciones que las plataformas móviles ponen a los desarrolladores.>>}
\KUItem{PBD}{MobilePlatforms}{Elective}{Location}{}{<<Location-aware applications>>}	\LO{PBD}{MobilePlatforms}{Elective}{Familiarity}{DiscussThePower}{<<Discutir el rendimiento vs perdida de potencia.>>}
\KUItem{PBD}{MobilePlatforms}{Elective}{Performance}{}{<<Performance / power tradeoffs>>}	\LO{PBD}{MobilePlatforms}{Elective}{Assessment}{CompareAndProgrammingPurpose}{<<Compare y contraste la programación móvil con la programación de proposito general.>>}
\KUItem{PBD}{MobilePlatforms}{Elective}{MobilePlatform}{}{<<Mobile platform constraints>>}	
\KUItem{PBD}{MobilePlatforms}{Elective}{Emerging}{}{<<Emerging technologies>>}	
	
\KU{PBD}{IndustrialPlatforms}{<<Industrial Platforms>>}{ISRobotics,ISRobotics}{0}{0}	
\KUDescription{PBD}{IndustrialPlatforms}{<<~>>}	
\KUItem{PBD}{IndustrialPlatforms}{Elective}{Types}{}{<<Types of Industrial Platforms (e.g., Mathematic, Robotic, Industrial Control)>>}	\LO{PBD}{IndustrialPlatforms}{Elective}{Usage}{DesignAndIndustrial}{<<Diseñar e implementar una aplicación industrial en una plataforma dada (por ejemplo, usando {\it Lego Mindstorms} o {\it Matlab})>>}
\KUItem{PBD}{IndustrialPlatforms}{Elective}{Robotic}{}{<<Robotic software and its architecture>>}	\LO{PBD}{IndustrialPlatforms}{Elective}{Assessment}{CompareAndSpecific}{<<Comparar y contrastar lenguajes específicos de dominio con los lenguajes de programación de porposito general.>>}
\KUItem{PBD}{IndustrialPlatforms}{Elective}{Domain}{}{<<Domain-specific languages>>}	\LO{PBD}{IndustrialPlatforms}{Elective}{Familiarity}{DiscussTheA}{<<Discutir las limitaciones que una dada plataforma industrial impone a los desarrolladores.>>}
\KUItem{PBD}{IndustrialPlatforms}{Elective}{Industrial}{}{<<Industrial platform constraints>>}	
	
\KU{PBD}{GamePlatforms}{<<Game Platforms>>}{}{0}{0}	
\KUDescription{PBD}{GamePlatforms}{<<~>>}	
\KUItem{PBD}{GamePlatforms}{Elective}{TypesOf}{}{<<Types of game platforms (e.g., XBox, Wii, PlayStation)>>}	\LO{PBD}{GamePlatforms}{Elective}{Usage}{DesignAndSimpleA}{<<Diseñar e implementar una aplicación simple en una plataforma de juego. >>}
\KUItem{PBD}{GamePlatforms}{Elective}{Game}{}{<<Game platform languages (e.g., C++, Java, Lua, Python)>>}	\LO{PBD}{GamePlatforms}{Elective}{Familiarity}{DescribeTheGame}{<<Describir las limitaciones que las plataformas de juego imponen en los desarrolladores>>}
\KUItem{PBD}{GamePlatforms}{Elective}{GamePlatform}{}{<<Game platform constraints>>}	\LO{PBD}{GamePlatforms}{Elective}{Assessment}{CompareAndProgrammingPurpose}{<<Comparar y contrastar la programación de juegos con la programación de proposito general.>>}
	
\KA{PD}{<<Computación paralela y distribuída.>>}{}	
"\KADescription{PD}{<<The past decade has brought explosive growth in multiprocessor computing, including multi-core processors and distributed data centers. As a result, parallel and distributed computing has moved from a largely elective topic to become more of a core component of undergraduate computing curricula. Both parallel and distributed computing entail the logically simultaneous execution of multiple processes, whose operations have the potential to interleave in complex ways. Parallel and distributed computing builds on foundations in many areas, including an understanding of fundamental systems concepts such as concurrency and parallel execution, consistency in state/memory manipulation, and latency. Communication and coordination among processes is rooted in the message-passing and shared-memory models of computing and such algorithmic concepts as atomicity, consensus, and conditional waiting. Achieving speedup in practice requires an understanding of parallel algorithms, strategies for problem decomposition, system architecture, detailed implementation strategies, and performance analysis and tuning. Distributed systems highlight the problems of security and fault tolerance, emphasize the maintenance of replicated state, and introduce additional issues that bridge to computer networking. 

Because parallelism interacts with so many areas of computing, including at least algorithms, languages, systems, networking, and hardware, many curricula will put different parts of the knowledge area in different courses, rather than in a dedicated course. While we acknowledge that computer science is moving in this direction and may reach that point, in 2013 this process is still in flux and we feel it provides more useful guidance to curriculum designers to aggregate the fundamental parallelism topics in one place. Note, however, that the fundamentals of concurrency and mutual exclusion appear in the Systems Fundamentals (SF) Knowledge Area. Many curricula may choose to introduce parallelism and concurrency in the same course (see below for the distinction intended by these terms). Further, we note that the topics and learning outcomes listed below include only brief mentions of purely elective coverage. At the present time, there is too much diversity in topics that share little in common (including for example, parallel scientific computing, process calculi, and non-blocking data structures) to recommend particular topics be covered in elective courses. 

Because the terminology of parallel and distributed computing varies among communities, we provide here brief descriptions of the intended senses of a few terms. This list is not exhaustive or definitive, but is provided for the sake of clarity. 

\begin{subtopics}
\item Parallelism: Using additional computational resources simultaneously, usually for speedup.
\item Concurrency: Efficiently and correctly managing concurrent access to resources.
\item Activity: A computation that may proceed concurrently with others; for example a program, process, thread, or active parallel hardware component.
\item Atomicity: Rules and properties governing whether an action is observationally indivisible; for example, setting all of the bits in a word, transmitting a single packet, or completing a transaction.
\item Consensus: Agreement among two or more activities about a given predicate; for example, the value of a counter, the owner of a lock, or the termination of a thread.
\item Consistency: Rules and properties governing agreement about the values of variables written, or messages produced, by some activities and used by others (thus possibly exhibiting a data race); for example, sequential consistency, stating that the values of all variables in a shared memory parallel program are equivalent to that of a single program performing some interleaving of the memory accesses of these activities.
\item Multicast: A message sent to possibly many recipients, generally without any constraints about whether some recipients receive the message before others. An event is a multicast message sent to a designated set of listeners or subscribers.
\end{subtopics}

As multi-processor computing continues to grow in the coming years, so too will the role of parallel and distributed computing in undergraduate computing curricula. In addition to the guidelines presented here, we also direct the interested reader to the document entitled ""NSF/TCPP Curriculum Initiative on Parallel and Distributed Computing - Core Topics for Undergraduates"", available from the website: http://www.cs.gsu.edu/~tcpp/curriculum/. 

General cross-referencing note:Systems Fundamentals also contains an introduction to parallelism (\xref{SF/ComputationalParadigms}, \xref{SF/SystemSupportforParallelism}, \xref{SF/Performance}). 

The introduction to parallelism in SF complements the one here and there is no ordering constraint between them. In SF, the idea is to provide a unified view of the system support for simultaneous execution at multiple levels of abstraction (parallelism is inherent in gates, processors, operating systems, and servers), whereas here the focus is on a preliminary understanding of parallelism as a computing primitive and the complications that arise in parallel and concurrent programming. Given these different perspectives, the hours assigned to each are not redundant: the layered systems view and the high-level computing concepts are accounted for separately in termsof the core hours.>>}"	
	
\KU{PD}{ParallelismFundamentals}{<<Parallelism Fundamentals>>}{}{2}{0}	
\KUDescription{PD}{ParallelismFundamentals}{<<Build upon students’ familiarity with the notion of basic parallel execution-a concept addressed in Systems Fundamentals-to delve into the complicating issues that stem from this notion, such as race conditions and liveness \xref{SFComputationalParadigms,SFSystemSupportforParallelism} >>}	
\KUItem{PD}{ParallelismFundamentals}{Core-Tier1}{Multiple}{}{<<Multiple simultaneous computations>>}	\LO{PD}{ParallelismFundamentals}{Core-Tier1}{Familiarity}{DistinguishUsing}{<<Distinguir el uso de recursos computacionales para una respuesta mas rápida para administrar el acceso eficiente a un recurso compartido.>>}
\KUItem{PD}{ParallelismFundamentals}{Core-Tier1}{Goals}{}{<<Goals of parallelism (e.g., throughput) versus concurrency (e.g., controlling access to shared resources)>>}	\LO{PD}{ParallelismFundamentals}{Core-Tier1}{Familiarity}{DistinguishMultiple}{<<Distinguir múltiples estructuras de programación suficientes para la sincronización que pueden ser inter-implementables pero tienen ventajas complementarias.>>}
"\KUItem{PD}{ParallelismFundamentals}{Core-Tier1}{Parallelism}{}{<<Parallelism, communication, and coordination
\begin{subtopics}
\item   Parallelism, communication, and coordination
\item Need for synchronization
\end{subtopics}>>}"	\LO{PD}{ParallelismFundamentals}{Core-Tier1}{Familiarity}{DistinguishData}{<<Distinguir datos de carrera ({\it data races}) a partir de carreras de mas alto nivel.>>}
"\KUItem{PD}{ParallelismFundamentals}{Core-Tier1}{Programming}{}{<<Programming errors not found in sequential programming
\begin{subtopics}
\item Data races (simultaneous read/write or write/write of shared state)
\item Higher-level races (interleavings violating program intention, undesired non-determinism)
\item Lack of liveness/progress (deadlock, starvation)
\end{subtopics}>>}"	
	
\KU{PD}{ParallelDecomposition}{<<Parallel Decomposition>>}{SFParallelism,SFParallelismTopicParallelProgramming}{1}{2}	
\KUDescription{PD}{ParallelDecomposition}{<<~>>}	
\KUItem{PD}{ParallelDecomposition}{Core-Tier1}{Need}{}{<<Need for communication and coordination/synchronization>>}	\LO{PD}{ParallelDecomposition}{Core-Tier1}{Usage}{ExplainWhyNecessary}{<<Explicar por qué la sincronización es necesaria en un programa paralelo especifico.>>}
\KUItem{PD}{ParallelDecomposition}{Core-Tier1}{Independence}{}{<<Independence and partitioning>>}	\LO{PD}{ParallelDecomposition}{Core-Tier1}{Familiarity}{IdentifyOpportunities}{<<Identificar oportunidades para particionar un programa serial en módulos paralelos independientes.>>}
\KUItem{PD}{ParallelDecomposition}{Core-Tier2}{Basic}{SFParallelism,SFParallelismTopicParallelProgramming}{<<Basic knowledge of parallel decomposition concept>>}	\LO{PD}{ParallelDecomposition}{Core-Tier2}{Usage}{WriteAScalable}{<<Escribir un algoritmo paralelo correcto y escalable.>>}
"\KUItem{PD}{ParallelDecomposition}{Core-Tier2}{Task}{}{<<Task-based decomposition
\begin{subtopics}
\item Implementation strategies such as threads
\end{subtopics}>>}"	\LO{PD}{ParallelDecomposition}{Core-Tier2}{Usage}{Parallelize}{<<Paralelizar un algoritmo mediante la aplicación de descomposición basada en tareas.>>}
"\KUItem{PD}{ParallelDecomposition}{Core-Tier2}{Data}{}{<<Data-parallel decomposition
\begin{subtopics}
\item Strategies such as SIMD and MapReduce
\end{subtopics}>>}"	\LO{PD}{ParallelDecomposition}{Core-Tier2}{Usage}{ParallelizeAn}{<<Paralelizar un algoritmo mediante la aplicación de descomposición datos en paralelo.>>}
\KUItem{PD}{ParallelDecomposition}{Core-Tier2}{Actors}{}{<<Actors and reactive processes (e.g., request handlers)>>}	\LO{PD}{ParallelDecomposition}{Core-Tier2}{Usage}{WriteAActors}{<<Escribir un programa usando actores y/o procesos reactivos.>>}
	
\KU{PD}{CommunicationandCoordination}{<<Communication and Coordination>>}{OSConcurrency,OSConcurrency}{1}{3}	
\KUDescription{PD}{CommunicationandCoordination}{<<~>>}	
\KUItem{PD}{CommunicationandCoordination}{Core-Tier1}{Shared}{}{<<Shared Memory>>}	\LO{PD}{CommunicationandCoordination}{Core-Tier1}{Usage}{UseMutual}{<<Usar exclusión mútua para evitar una condición de carrera.>>}
\KUItem{PD}{CommunicationandCoordination}{Core-Tier1}{Consistency}{}{<<Consistency, and its role in programming language guarantees for data-race-free programs>>}	\LO{PD}{CommunicationandCoordination}{Core-Tier1}{Familiarity}{GiveAn}{<<Dar un ejemplo de una ordenación de accesos entre actividades concurrentes (por ejemplo, un programa con condición de carrera) que no son secuencialmente consistentes.>>}
"\KUItem{PD}{CommunicationandCoordination}{Core-Tier2}{Message}{SDFFundamentalDataStructures,PFFundamentalDataStructuresTopicQueues}{<<Message passing
\begin{subtopics}
\item Point-to-point versus multicast (or event-based) messages
\item Blocking versus non-blocking styles for sending and receiving messages
\item Message buffering (cross-reference PF/Fundamental Data Structures/Queues)
\end{subtopics}>>}"	\LO{PD}{CommunicationandCoordination}{Core-Tier2}{Usage}{GiveAnA}{<<Dar un ejemplo de un escenario en el que el bloqueo de mensajes enviados pueden dar {\it deadlock}.>>}
"\KUItem{PD}{CommunicationandCoordination}{Core-Tier2}{Atomicity}{}{<<Atomicity
\begin{subtopics}
\item Specifying and testing atomicity and safety requirements
\item Granularity of atomic accesses and updates, and the use of constructs such as critical sections or transactions to describe them
\item Mutual Exclusion using locks, semaphores, monitors, or related constructs
\begin{subtopics}
\item Potential for liveness failures and deadlock (causes, conditions, prevention)
\end{subtopics}
\item Composition
\begin{subtopics}
\item Composing larger granularity atomic actions using synchronization
\item Transactions, including optimistic and conservative approaches
\end{subtopics}
\end{subtopics}>>}"	\LO{PD}{CommunicationandCoordination}{Core-Tier2}{Familiarity}{ExplainWhenMulticast}{<<Explicar cuándo y por qué mensajes de multidifusión ({\it multicast}) o basado en eventos puede ser preferible a otras alternativas.>>}
"\KUItem{PD}{CommunicationandCoordination}{Elective}{Consensus}{}{<<Consensus
\begin{subtopics}
\item (Cyclic) barriers, counters, or related constructs
\end{subtopics}>>}"	\LO{PD}{CommunicationandCoordination}{Core-Tier2}{Usage}{WriteACorrectly}{<<Escribir un programa que termine correctamente cuando todo el conjunto de procesos concurrentes hayan sido completados.>>}
"\KUItem{PD}{CommunicationandCoordination}{Elective}{Conditional}{}{<<Conditional actions
\begin{subtopics}
\item Conditional waiting (e.g., using condition variables)
\end{subtopics}>>}"	\LO{PD}{CommunicationandCoordination}{Core-Tier2}{Usage}{UseAQueue}{<<Usar una apropiada cola de sincronización para almacenar temporalmente datos pasados entre actividades.>>}
	\LO{PD}{CommunicationandCoordination}{Core-Tier2}{Familiarity}{ExplainWhyPreconditions}{<<Explicar por qué verificaciones para precondiciones, y acciones basados en estas verificaciones, deben compartir la misma unidad de atomicidad para ser efectivo.>>}
	\LO{PD}{CommunicationandCoordination}{Core-Tier2}{Usage}{WriteAThat}{<<Escribir un programa de prueba que pueda revelar un error de programación concurrente; por ejemplo, falta una actualización cuando dos actividades intentan incrementar una variable.>>}
	\LO{PD}{CommunicationandCoordination}{Core-Tier2}{Familiarity}{DescribeAtDesign}{<<Describir al menos una técnica de diseño para evitar >>}
	\LO{PD}{CommunicationandCoordination}{Core-Tier2}{Familiarity}{DescribeTheOfConservative}{<<Describir las ventajas relativas del control de concurrencia optimista y conservadora bajo diferentes tipos de carrera entre actualizaciones.>>}
	\LO{PD}{CommunicationandCoordination}{Core-Tier2}{Familiarity}{GiveAnAWhich}{<<Dar un ejemplo de un escenario en el que un intento optimista de actualización puede nunca completarse.>>}
	\LO{PD}{CommunicationandCoordination}{Elective}{Usage}{UseSemaphores}{<<Usar semaforos o variables de condición para bloquear hebras hasta una necesaria precondición de mantenga.>>}
	
\KU{PD}{ParallelAlgorithmsAnalysisandProgramming}{<<Parallel Algorithms, Analysis, and Programming>>}{}{0}{3}	
\KUDescription{PD}{ParallelAlgorithmsAnalysisandProgramming}{<<~>>}	
\KUItem{PD}{ParallelAlgorithmsAnalysisandProgramming}{Core-Tier2}{Critical}{PDParallelPerformance,SDFPerformance}{<<Critical paths, work and span, and the relation to Amdahl’s law>>}	\LO{PD}{ParallelAlgorithmsAnalysisandProgramming}{Core-Tier2}{Familiarity}{DefineCritical}{<<Definir: camino crítico, trabajo y {\it span}.>>}
\KUItem{PD}{ParallelAlgorithmsAnalysisandProgramming}{Core-Tier2}{Speed}{}{<<Speed-up and scalability>>}	\LO{PD}{ParallelAlgorithmsAnalysisandProgramming}{Core-Tier2}{Usage}{ComputeTheSpan}{<<Calcular el trabajo y el {\it span} y determinar el camino crítico con respecto a un diagrama de ejecución paralela. >>}
\KUItem{PD}{ParallelAlgorithmsAnalysisandProgramming}{Core-Tier2}{Naturally}{}{<<Naturally (embarrassingly) parallel algorithms>>}	\LO{PD}{ParallelAlgorithmsAnalysisandProgramming}{Core-Tier2}{Familiarity}{DefineSpeed}{<<Definir {\it speed-up} y explicar la noción de escalabilidad de un algoritmo en este sentido.>>}
"\KUItem{PD}{ParallelAlgorithmsAnalysisandProgramming}{Core-Tier2}{Parallel}{}{<<Parallel algorithmic patterns (divide-and-conquer, map and reduce, master-workers, others)
\begin{subtopics}
\item Specific algorithms (e.g., parallel MergeSort)
\end{subtopics}>>}"	\LO{PD}{ParallelAlgorithmsAnalysisandProgramming}{Core-Tier2}{Usage}{IdentifyIndependent}{<<Identificar tareas independientes en un programa que debe ser paralelizado.>>}
\KUItem{PD}{ParallelAlgorithmsAnalysisandProgramming}{Elective}{ParallelGraph}{ALAlgorithmicStrategies,ALAlgorithmicStrategiesTopicDivide}{<<Parallel graph algorithms (e.g., parallel shortest path, parallel spanning tree) (cross-reference AL/Algorithmic Strategies/Divide-and-conquer)>>}	\LO{PD}{ParallelAlgorithmsAnalysisandProgramming}{Core-Tier2}{Familiarity}{CharacterizeFeatures}{<<Representar características de una carga de trabajo que permita o evite que sea naturalmente paralelizable.>>}
\KUItem{PD}{ParallelAlgorithmsAnalysisandProgramming}{Elective}{ParallelMatrix}{}{<<Parallel matrix computations>>}	\LO{PD}{ParallelAlgorithmsAnalysisandProgramming}{Core-Tier2}{Usage}{ImplementAAnd}{<<Implementar un algoritmo dividir y conquistar paralelo (y/o algoritmo de un grafo) y medir empiricamente su desempeño relativo a su analogo secuencial.>>}
\KUItem{PD}{ParallelAlgorithmsAnalysisandProgramming}{Elective}{Producer}{}{<<Producer-consumer and pipelined algorithms>>}	\LO{PD}{ParallelAlgorithmsAnalysisandProgramming}{Core-Tier2}{Usage}{Decompose}{<<Descomponer un problema (por ejemplo, contar el número de ocurrencias de una palabra en un documento) via operaciones {\it map} y {\it reduce}.>>}
\KUItem{PD}{ParallelAlgorithmsAnalysisandProgramming}{Elective}{Examples}{}{<<Examples of non-scalable parallel algorithms>>}	\LO{PD}{ParallelAlgorithmsAnalysisandProgramming}{Elective}{Familiarity}{ProvideAn}{<<Proporcionar un ejemplo de un problema que se corresponda con el paradigma productor-consumidor.>>}
	\LO{PD}{ParallelAlgorithmsAnalysisandProgramming}{Elective}{Familiarity}{GiveExamplesWhere}{<<Dar ejemplos de problemas donde el uso de {\it pipelining} sería un medio eficaz para la paralelización.>>}
	\LO{PD}{ParallelAlgorithmsAnalysisandProgramming}{Elective}{Usage}{ImplementAAlgorithm}{<<Implementar un algoritmo de matriz paralela.>>}
	\LO{PD}{ParallelAlgorithmsAnalysisandProgramming}{Elective}{Familiarity}{IdentifyIssuesIn}{<<Identificar los problemas que surgen en los algoritmos del tipo productor-consumidor y los mecanismos que pueden utilizarse para superar dichos problemas.>>}
	
\KU{PD}{ParallelArchitecture}{<<Parallel Architecture>>}{}{1}{2}	
\KUDescription{PD}{ParallelArchitecture}{<<The topics listed here are related to knowledge units in the Architecture and Organization (AR) knowledge area (AR/Assembly Level Machine Organization and AR/Multiprocessing and Alternative Architectures). Here, we focus on parallel architecture from the standpoint of applications, whereas the Architecture and Organization knowledge area presents the topic from the hardware perspective.>>}	
\KUItem{PD}{ParallelArchitecture}{Core-Tier1}{Multicore}{}{<<Multicore processors>>}	\LO{PD}{ParallelArchitecture}{Core-Tier1}{Familiarity}{ExplainTheShared}{<<Explicar las diferencias entre memoria distribuida y memoria compartida.>>}
\KUItem{PD}{ParallelArchitecture}{Core-Tier1}{Shared}{}{<<Shared vs distributed memory>>}	\LO{PD}{ParallelArchitecture}{Core-Tier2}{Familiarity}{DescribeTheAndKey}{<<Describir la arquitectura SMP y observar sus principales caracteristicas.>>}
\KUItem{PD}{ParallelArchitecture}{Core-Tier2}{Symmetric}{}{<<Symmetric multiprocessing (SMP)>>}	\LO{PD}{ParallelArchitecture}{Core-Tier2}{Familiarity}{CharacterizeTheTasks}{<<Distinguir los tipos de tareas que son adecuadas para máquinas SIMD.>>}
\KUItem{PD}{ParallelArchitecture}{Core-Tier2}{Simd}{}{<<SIMD, vector processing>>}	\LO{PD}{ParallelArchitecture}{Elective}{Familiarity}{DescribeTheLimitationsVs}{<<Describir las ventajas y limitaciones de GPUs vs CPUs.>>}
\KUItem{PD}{ParallelArchitecture}{Elective}{Gpu}{}{<<GPU, co-processing>>}	\LO{PD}{ParallelArchitecture}{Elective}{Familiarity}{ExplainTheEach}{<<Explicar las caracteristicas de cada clasificación en la taxonomía de Flynn.>>}
\KUItem{PD}{ParallelArchitecture}{Elective}{Flynns}{}{<<Flynn’s taxonomy>>}	\LO{PD}{ParallelArchitecture}{Elective}{Familiarity}{DescribeAssembly}{<<Describir el soporte a de nivel de lenguaje ensamblador para las operaciones atómicas.>>}
"\KUItem{PD}{ParallelArchitecture}{Elective}{Instruction}{}{<<Instruction level support for parallel programming
\begin{subtopics}
\item Atomic instructions such as Compare and Set
\end{subtopics}>>}"	\LO{PD}{ParallelArchitecture}{Elective}{Familiarity}{DescribeTheMaintaining}{<<Describir los desafíos para mantener la coherencia de la caché.>>}
"\KUItem{PD}{ParallelArchitecture}{Elective}{Memory}{}{<<Memory issues
\begin{subtopics}
\item Multiprocessor caches and cache coherence
\item Non-uniform memory access (NUMA) 
\end{subtopics}>>}"	\LO{PD}{ParallelArchitecture}{Elective}{Familiarity}{DescribeTheChallenges}{<<Describir los desafíos clave del desempeño en diferentes memorias y topologías de sistemas distribuidos.>>}
"\KUItem{PD}{ParallelArchitecture}{Elective}{Topologies}{}{<<Topologies
\begin{subtopics}
\item Interconnects
\item Clusters
\item Resource sharing (e.g., buses and interconnects)
\end{subtopics}>>}"	
	
\KU{PD}{ParallelPerformance}{<<Parallel Performance>>}{}{0}{0}	
\KUDescription{PD}{ParallelPerformance}{<<~>>}	
\KUItem{PD}{ParallelPerformance}{Elective}{Load}{}{<<Load balancing>>}	\LO{PD}{ParallelPerformance}{Elective}{Usage}{Detect}{<<Detectar y corregir un desbalanceo de carga.>>}
\KUItem{PD}{ParallelPerformance}{Elective}{Performance}{}{<<Performance measurement>>}	\LO{PD}{ParallelPerformance}{Elective}{Usage}{CalculateThe}{<<Calcular las implicaciones de la ley de Amdahl para un algoritmo paralelo particular.>>}
\KUItem{PD}{ParallelPerformance}{Elective}{Scheduling}{OSSchedulingandDispatch,OSSchedulingandDispatch}{<<Scheduling and contention (cross-reference OS/Scheduling and Dispatch)>>}	\LO{PD}{ParallelPerformance}{Elective}{Familiarity}{DescribeHowLayout}{<<Describir como la distribuición/disposición de datos puede afectar a los costos de comunicación de un algoritmo.>>}
\KUItem{PD}{ParallelPerformance}{Elective}{Evaluating}{}{<<Evaluating communication overhead>>}	\LO{PD}{ParallelPerformance}{Elective}{Usage}{DetectAnd}{<<Detectar y corregir una instancia de uso compartido falso ({\it false sharing}).>>}
"\KUItem{PD}{ParallelPerformance}{Elective}{Data}{SFProximity,SFProximity}{<<Data management
\begin{subtopics}
\item Non-uniform communication costs due to proximity (cross-reference SF/Proximity)
\item Cache effects (e.g., false sharing)
\item Maintaining spatial locality
\end{subtopics}>>}"	\LO{PD}{ParallelPerformance}{Elective}{Familiarity}{ExplainTheScheduling}{<<Explicar el impacto de la planificación en el desempeño paralelo.>>}
\KUItem{PD}{ParallelPerformance}{Elective}{Power}{}{<<Power usage and management>>}	\LO{PD}{ParallelPerformance}{Elective}{Familiarity}{ExplainPerformance}{<<Explicar el impacto en el desempeño de la localidad de datos.>>}
	\LO{PD}{ParallelPerformance}{Elective}{Familiarity}{ExplainTheTrade}{<<Explicar el impacto y los puntos de equilibrio relacionados al uso de energía en el desempeño paralelo>>}
	
\KU{PD}{DistributedSystems}{<<Distributed Systems>>}{}{0}{0}	
\KUDescription{PD}{DistributedSystems}{<<~>>}	
"\KUItem{PD}{DistributedSystems}{Elective}{Faults}{OSFaultTolerance,OSFaultTolerance}{<<Faults (cross-reference OS/Fault Tolerance)
\begin{subtopics}
\item Network-based (including partitions) and node-based failures
\item Impact on system-wide guarantees (e.g., availability)
\end{subtopics}>>}"	\LO{PD}{DistributedSystems}{Elective}{Familiarity}{DistinguishNetwork}{<<Distinguir las fallas de red de otros tipos de fallas.>>}
"\KUItem{PD}{DistributedSystems}{Elective}{Distributed}{}{<<Distributed message sending
\begin{subtopics}
\item Data conversion and transmission
\item Sockets
\item Message sequencing
\item Buffering, retrying, and dropping messages
\end{subtopics}>>}"	\LO{PD}{DistributedSystems}{Elective}{Familiarity}{ExplainWhySuch}{<<Explicar por qué estructuras de sincronización como cerraduras simples ({\it locks}) no son útiles en la presencia de fallas distribuidas.>>}
"\KUItem{PD}{DistributedSystems}{Elective}{DistributedSystem}{}{<<Distributed system design tradeoffs
\begin{subtopics}
\item Latency versus throughput
\item Consistency, availability, partition tolerance
\end{subtopics}>>}"	\LO{PD}{DistributedSystems}{Elective}{Usage}{WriteAPerforms}{<<Escribir un programa que realiza cualquier proceso de {\it marshalling} requerido y la conversión en unidades de mensajes, tales como paquetes, para comunicar datos importantes entre dos {\it hosts}.>>}
"\KUItem{PD}{DistributedSystems}{Elective}{DistributedService}{}{<<Distributed service design
\begin{subtopics}
\item Stateful versus stateless protocols and services
\item Session (connection-based) designs
\item Reactive (IO-triggered) and multithreaded designs
\end{subtopics}>>}"	\LO{PD}{DistributedSystems}{Elective}{Usage}{Measure}{<<Medir el rendimiento observado y la latencia de la respuesta a través de los {\it hosts} en una red dada.>>}
"\KUItem{PD}{DistributedSystems}{Elective}{Core}{}{<<Core distributed algorithms
\begin{subtopics}
\item Election, discovery
\end{subtopics}>>}"	\LO{PD}{DistributedSystems}{Elective}{Familiarity}{ExplainWhySystem}{<<Explicar por qué un sistema distribuido no puede ser simultaneamente Consistente ({\it Consistent}), Disponible ({\it Available}) y Tolerante a fallas ({\it Partition tolerant}). >>}
	\LO{PD}{DistributedSystems}{Elective}{Usage}{ImplementAForSpell}{<<Implementar un servidor sencillo - por ejemplo, un servicio de corrección ortográfica.>>}
	\LO{PD}{DistributedSystems}{Elective}{Familiarity}{ExplainTheOverhead}{<<Explicar las ventajas y desventajas entre: {\it overhead}, escalabilidad y tolerancia a fallas entre escojer un diseño sin estado ({\it stateless}) y un diseño con estado ({\it stateful}) para un determinado servicio.>>}
	\LO{PD}{DistributedSystems}{Elective}{Familiarity}{DescribeTheAssociated}{<<Describir los desafios en la escalabilidad, asociados con un servicio cresciente para soportar muchos clientes, así como los asociados con un servicio que tendrá transitoriamente muchos clientes.>>}
	\LO{PD}{DistributedSystems}{Elective}{Usage}{GiveExamplesFor}{<<Dar ejemplos de problemas donde algoritmos de consenso son requeridos, por ejemplo, la elección de líder.>>}
	
\KU{PD}{CloudComputing}{<<Cloud Computing>>}{}{0}{0}	
\KUDescription{PD}{CloudComputing}{<<~>>}	
"\KUItem{PD}{CloudComputing}{Elective}{Internet}{PDParallelAlgorithmsAnalysisandProgramming,PDParallelAlgorithmsAnalysisandProgramming}{<<Internet-Scale computing
\begin{subtopics}
\item Task partitioning
\item Data access
\item Clusters, grids, and meshes
\end{subtopics}>>}"	\LO{PD}{CloudComputing}{Elective}{Familiarity}{DiscussTheElasticity}{<<Discutir la importancia de la elasticidad y administración de recursos en la Computación en la Nube ({\it Cloud Computing}).>>}
"\KUItem{PD}{CloudComputing}{Elective}{Cloud}{}{<<Cloud services
\begin{subtopics}
\item Infrastructure as a service
\begin{subtopics}
\item Elasticity of resources
\item Platform APIs
\end{subtopics}
\item Software as a service
\item Security
\item Cost management
\end{subtopics}>>}"	\LO{PD}{CloudComputing}{Elective}{Familiarity}{ExplainStrategies}{<<Explicar las estrategias para sincronizar una vista comun de datos compartidos a través de una colección de dispositivos.>>}
"\KUItem{PD}{CloudComputing}{Elective}{Virtualization}{SFVirtualizationandIsolation,OSVirtualMachines,SFVirtualizationandIsolation}{<<Virtualization
\begin{subtopics}
\item Shared resource management
\item Migration of processes
\end{subtopics}>>}"	\LO{PD}{CloudComputing}{Elective}{Familiarity}{ExplainTheDisadvantages}{<<Explicar las ventajas y desventajas de usar una infraestructura vistualizada.>>}
"\KUItem{PD}{CloudComputing}{Elective}{CloudBased}{IMDistributedDatabases,IMDistributedDatabases}{<<Cloud-based data storage
\begin{subtopics}
\item Shared access to weakly consistent data stores
\item Data synchronization
\item Data partitioning
\item Distributed file systems
\item Replication
\end{subtopics}>>}"	\LO{PD}{CloudComputing}{Elective}{Usage}{Deploy}{<<Desplegar una aplicación que usa una infraestructura en la nube para computación y/o recursos de datos.>>}
	\LO{PD}{CloudComputing}{Elective}{Usage}{Appropriately}{<<Apropiadamente particionar una aplicación entre un cliente y los recursos.>>}
	
\KU{PD}{FormalModelsandSemantics}{<<Formal Models and Semantics>>}{}{0}{0}	
\KUDescription{PD}{FormalModelsandSemantics}{<<~>>}	
\KUItem{PD}{FormalModelsandSemantics}{Elective}{Formal}{}{<<Formal models of processes and message passing, including algebras such as Communicating Sequential Processes (CSP) and pi-calculus>>}	\LO{PD}{FormalModelsandSemantics}{Elective}{Usage}{ModelA}{<<Modelar un proceso concurrente usando un modelo formal, por ejemplo, cálculo pi.>>}
\KUItem{PD}{FormalModelsandSemantics}{Elective}{FormalModels}{}{<<Formal models of parallel computation, including the Parallel Random Access Machine (PRAM) and alternatives such as Bulk Synchronous Parallel (BSP)>>}	\LO{PD}{FormalModelsandSemantics}{Elective}{Familiarity}{ExplainTheAParallel}{<<Explicar las caracteristicas de un particular modelo paralelo formal.>>}
\KUItem{PD}{FormalModelsandSemantics}{Elective}{FormalModelsOf}{}{<<Formal models of computational dependencies>>}	\LO{PD}{FormalModelsandSemantics}{Elective}{Usage}{Formally}{<<Formalmente modelar un sistema de memoria compartida para mostrar y éste es consistente.>>}
\KUItem{PD}{FormalModelsandSemantics}{Elective}{Models}{}{<<Models of (relaxed) shared memory consistency and their relation to programming language specifications>>}	\LO{PD}{FormalModelsandSemantics}{Elective}{Usage}{UseAShow}{<<Usar un modelo para mostrar las garantias de progreso en un algoritmo paralelo.>>}
\KUItem{PD}{FormalModelsandSemantics}{Elective}{Algorithmic}{}{<<Algorithmic correctness criteria including linearizability>>}	\LO{PD}{FormalModelsandSemantics}{Elective}{Usage}{UseFormal}{<<Usar técnicas formales para mostrar que un algoritmo paralelo es correcto con respecto a la seguridad o la propiedad {\it liveness}.>>}
\KUItem{PD}{FormalModelsandSemantics}{Elective}{ModelsOf}{}{<<Models of algorithmic progress, including non-blocking guarantees and fairness>>}	\LO{PD}{FormalModelsandSemantics}{Elective}{Usage}{Decide}{<<Decidir si una ejecución específica es linealizable o no.>>}
\KUItem{PD}{FormalModelsandSemantics}{Elective}{Techniques}{}{<<Techniques for specifying and checking correctness properties such as atomicity and freedom from data races>>}	
	
\KA{PL}{<<Lenguajes de programación.>>}{}	
\KADescription{PL}{<<Programming languages are the medium through which programmers precisely describe concepts, formulate algorithms, and reason about solutions. In the course of a career, a computer scientist will work with many different languages, separately or together. Software developers must understand the programming models underlying different languages and make informed design choices in languages supporting multiple complementary approaches. Computer scientists will often need to learn new languages and programming constructs, and must understand the principles underlying how programming language features are defined, composed, and implemented. The effective use of programming languages, and appreciation of their limitations, also requires a basic knowledge of programming language translation and static program analysis, as well as run-time components such as memory management. >>}	
	
\KU{PL}{ObjectOrientedProgramming}{<<Object-Oriented Programming>>}{}{4}{6}	
\KUDescription{PL}{ObjectOrientedProgramming}{<<~>>}	
"\KUItem{PL}{ObjectOrientedProgramming}{Core-Tier1}{Object}{}{<<Object-oriented design
\begin{subtopics}
\item Decomposition into objects carrying state and having behavior
\item Class-hierarchy design for modeling
\end{subtopics}>>}"	\LO{PL}{ObjectOrientedProgramming}{Core-Tier1}{Usage}{DesignAndClass}{<<Diseñar e implementar una clase.>>}
\KUItem{PL}{ObjectOrientedProgramming}{Core-Tier1}{Definition}{}{<<Definition of classes: fields, methods, and constructors>>}	\LO{PL}{ObjectOrientedProgramming}{Core-Tier1}{Usage}{UseSubclassing}{<<Usar subclase para diseñar una jerarquía simple de clases que permita al código ser reusable por diferentes subclases.>>}
\KUItem{PL}{ObjectOrientedProgramming}{Core-Tier1}{Subclasses}{}{<<Subclasses, inheritance, and method overriding>>}	\LO{PL}{ObjectOrientedProgramming}{Core-Tier1}{Usage}{Correctly}{<<Razonar correctamente sobre el flujo de control en un programa mediante el envío dinámico.>>}
\KUItem{PL}{ObjectOrientedProgramming}{Core-Tier1}{Dynamic}{}{<<Dynamic dispatch: definition of method-call>>}	\LO{PL}{ObjectOrientedProgramming}{Core-Tier1}{Assessment}{CompareAndThe}{<<Comparar y contrastar (1) el enfoque procedurar/funcional- definiendo una función por cada operación con el cuerdo de la función proporcionando un caso por cada variación de dato - y (2) el enfoque orientado a objetos - definiendo una clase por cada variación de dato con la definición de la clase proporcionando un método por cada operación. Entender ambos enfoques como una definición de variaciones y operaciones de una matriz.>>}
"\KUItem{PL}{ObjectOrientedProgramming}{Core-Tier2}{Subtyping}{PLTypeSystems,PLTypeSystems}{<<Subtyping
\begin{subtopics}
\item Subtype polymorphism; implicit upcasts in typed languages
\item Notion of behavioral replacement: subtypes acting like supertypes
\item Relationship between subtyping and inheritance
\end{subtopics}>>}"	\LO{PL}{ObjectOrientedProgramming}{Core-Tier2}{Familiarity}{ExplainTheObject}{<<Explicar la relación entre la herencia orientada a objetos (codigo compartido y {\it overriding}) y subtipificación (la idea de un subtipo es ser utilizable en un contexto en el que espera al supertipo).>>}
"\KUItem{PL}{ObjectOrientedProgramming}{Core-Tier2}{ObjectOriented}{}{<<Object-oriented idioms for encapsulation
\begin{subtopics}
\item Privacy and visibility of class members
\item Interfaces revealing only method signatures
\item Abstract base classes
\end{subtopics}>>}"	\LO{PL}{ObjectOrientedProgramming}{Core-Tier2}{Usage}{UseObject}{<<Usar mecanismos de encapsulación orientada a objetos, tal como interfaces y miembros privados.>>}
\KUItem{PL}{ObjectOrientedProgramming}{Core-Tier2}{Using}{}{<<Using collection classes, iterators, and other common library components>>}	\LO{PL}{ObjectOrientedProgramming}{Core-Tier2}{Usage}{DefineAndAnd}{<<Definir y usar iteradores y otras operaciones sobre agregaciones, incluyendo operaciones que tienen funciones como argumentos, en múltiples lenguajes de programación, selecionar la forma mas natural por cada lenguaje.>>}
	
\KU{PL}{FunctionalProgramming}{<<Functional Programming>>}{}{3}{4}	
\KUDescription{PL}{FunctionalProgramming}{<<~>>}	
"\KUItem{PL}{FunctionalProgramming}{Core-Tier1}{Effect}{}{<<Effect-free programming
\begin{subtopics}
\item Function calls have no side effects, facilitating compositional reasoning
\item Variables are immutable, preventing unexpected changes to program data by other code
\item Data can be freely aliased or copied without introducing unintended effects from mutation
\end{subtopics}>>}"	\LO{PL}{FunctionalProgramming}{Core-Tier1}{Usage}{WriteBasic}{<<Escribir algoritmos básicos que eviten asignación a un estado mutable o considerar igualdad de referencia.>>}
"\KUItem{PL}{FunctionalProgramming}{Core-Tier1}{Processing}{}{<<Processing structured data (e.g., trees) via functions with cases for each data variant
\begin{subtopics}
\item Associated language constructs such as discriminated unions and pattern-matching over them
\item Functions defined over compound data in terms of functions applied to the constituent pieces
\end{subtopics}>>}"	\LO{PL}{FunctionalProgramming}{Core-Tier1}{Usage}{WriteUseful}{<<Escribir funciones útiles que puedan tomar y retornar otras funciones.>>}
\KUItem{PL}{FunctionalProgramming}{Core-Tier1}{First}{}{<<First-class functions (taking, returning, and storing functions)>>}	\LO{PL}{FunctionalProgramming}{Core-Tier1}{Assessment}{CompareAndTheApproach}{<<Comparar y contrastar (1) el enfoque procedurar/funcional- definiendo una función por cada operación con el cuerdo de la función proporcionando un caso por cada variación de dato - y (2) el enfoque orientado a objetos - definiendo una clase por cada variación de dato con la definición de la clase proporcionando un método por cada operación. Entender ambos enfoques como una definición de variaciones y operaciones de una matriz.>>}
"\KUItem{PL}{FunctionalProgramming}{Core-Tier2}{Function}{}{<<Function closures (functions using variables in the enclosing lexical environment)
\begin{subtopics}
\item Basic meaning and definition -- creating closures at run-time by capturing the environment
\item Canonical idioms: call-backs, arguments to iterators, reusable code via function arguments
\item Using a closure to encapsulate data in its environment
\item Currying and partial application
\end{subtopics}>>}"	\LO{PL}{FunctionalProgramming}{Core-Tier2}{Usage}{CorrectlyReason}{<<Razonar correctamente sobre variables y el ámbito léxico en un programa usando funciones de cierre ({\it function closures}).>>}
\KUItem{PL}{FunctionalProgramming}{Core-Tier2}{Defining}{}{<<Defining higher-order operations on aggregates, especially map, reduce/fold, and filter>>}	\LO{PL}{FunctionalProgramming}{Core-Tier2}{Usage}{UseFunctional}{<<Usar mecanismos de encapsulamiento funcional, tal como {\it closures} e interfaces modulares.>>}
	\LO{PL}{FunctionalProgramming}{Core-Tier2}{Usage}{DefineAndAndOn}{<<Definir y usar iteradores y otras operaciones sobre agregaciones, incluyendo operaciones que tienen funciones como argumentos, en múltiples lenguajes de programación, seleccionar la forma mas natural por cada lenguaje.>>}
	
\KU{PL}{EventDrivenandReactiveProgramming}{<<Event-Driven and Reactive Programming>>}{}{0}{2}	
\KUDescription{PL}{EventDrivenandReactiveProgramming}{<<This material can stand alone or be integrated with other knowledge units on concurrency, asynchrony, and threading to allow contrasting events with threads.>>}	
\KUItem{PL}{EventDrivenandReactiveProgramming}{Core-Tier2}{Events}{}{<<Events and event handlers>>}	\LO{PL}{EventDrivenandReactiveProgramming}{Core-Tier2}{Usage}{WriteEvent}{<<Escribir manejadores de eventos para su uso en sistemas reactivos tales como GUIs>>}
\KUItem{PL}{EventDrivenandReactiveProgramming}{Core-Tier2}{Canonical}{}{<<Canonical uses such as GUIs, mobile devices, robots, servers>>}	\LO{PL}{EventDrivenandReactiveProgramming}{Core-Tier2}{Familiarity}{ExplainWhyDriven}{<<Explicar porque el estilo de programación manejada por eventos es natural en dominios donde el programa reacciona a eventos externos.>>}
"\KUItem{PL}{EventDrivenandReactiveProgramming}{Core-Tier2}{UsingA}{}{<<Using a reactive framework
\begin{subtopics}
\item Defining event handlers/listeners
\item Main event loop not under event-handler-writer’s control
\end{subtopics}>>}"	\LO{PL}{EventDrivenandReactiveProgramming}{Core-Tier2}{Familiarity}{DescribeAn}{<<Describir un sistema interactivo en términos de un modelo, una vista y un controlador.>>}
\KUItem{PL}{EventDrivenandReactiveProgramming}{Core-Tier2}{Externally}{}{<<Externally-generated events and program-generated events>>}	
\KUItem{PL}{EventDrivenandReactiveProgramming}{Core-Tier2}{Separation}{}{<<Separation of model, view, and controller>>}	
	
\KU{PL}{BasicTypeSystems}{<<Basic Type Systems>>}{}{1}{4}	
\KUDescription{PL}{BasicTypeSystems}{<<The core-tier2 hours would be profitably spent both on the core-tier2 topics and on a less shallow treatment of the core-tier1 topicsand learning outcomes.>>}	
"\KUItem{PL}{BasicTypeSystems}{Core-Tier1}{A}{}{<<A type as a set of values together with a set of operations
\begin{subtopics}
\item Primitive types (e.g., numbers, Booleans)
\item Compound types built from other types (e.g., records, unions, arrays, lists, functions, references)
\end{subtopics}>>}"	\LO{PL}{BasicTypeSystems}{Core-Tier1}{Familiarity}{ForBoth}{<<Tanto para tipo primitivo y un tipo compuesto, describir de manera informal los valores que tiene dicho tipo.>>}
\KUItem{PL}{BasicTypeSystems}{Core-Tier1}{Association}{}{<<Association of types to variables, arguments, results, and fields>>}	\LO{PL}{BasicTypeSystems}{Core-Tier1}{Familiarity}{ForA}{<<Para un lenguaje con sistema de tipos estático, describir las operaciones que están prohibidas de forma estática, como pasar el tipo incorrecto de valor a una función o método.>>}
\KUItem{PL}{BasicTypeSystems}{Core-Tier1}{Type}{}{<<Type safety and errors caused by using values inconsistently given their intended types>>}	\LO{PL}{BasicTypeSystems}{Core-Tier1}{Familiarity}{DescribeExamples}{<<Describir ejemplos de errores de programa detectadas por un sistema de tipos.>>}
"\KUItem{PL}{BasicTypeSystems}{Core-Tier1}{Goals}{}{<<Goals and limitations of static typing
\begin{subtopics}
\item Eliminating some classes of errors without running the program
\item Undecidability means static analysis must conservatively approximate program behavior
\end{subtopics}>>}"	\LO{PL}{BasicTypeSystems}{Core-Tier1}{Usage}{ForMultiple}{<<Para múltiples lenguajes de programación, identificar propiedades de un programa con verificación estática y propiedades de un programa con verificación dinámica.>>}
"\KUItem{PL}{BasicTypeSystems}{Core-Tier2}{Generic}{}{<<Generic types (parametric polymorphism)
\begin{subtopics}
\item Definition
\item Use for generic libraries such as collections
\item Comparison with ad hoc polymorphism (overloading) and subtype polymorphism
\end{subtopics}>>}"	\LO{PL}{BasicTypeSystems}{Core-Tier1}{Familiarity}{GiveAnThat}{<<Dar un ejemplo de un programa que no verifique tipos en un lenguaje particular y sin embargo no tenga error cuando es ejecutado.>>}
"\KUItem{PL}{BasicTypeSystems}{Core-Tier2}{Complementary}{}{<<Complementary benefits of static and dynamic typing
\begin{subtopics}
\item Errors early vs. errors late/avoided
\item Enforce invariants during code development and code maintenance vs. postpone typing decisions while prototyping and conveniently allow flexible coding patterns such as heterogeneous collections
\item Avoid misuse of code vs. allow more code reuse
\item Detect incomplete programs vs. allow incomplete programs to run
\end{subtopics}>>}"	\LO{PL}{BasicTypeSystems}{Core-Tier1}{Usage}{UseTypes}{<<Usar tipos y mensajes de error de tipos para escribir y depurar programas.>>}
	\LO{PL}{BasicTypeSystems}{Core-Tier2}{Familiarity}{ExplainHowDefine}{<<Explicar como las reglas de tipificación definen el conjunto de operaciones que legales para un tipo.>>}
	\LO{PL}{BasicTypeSystems}{Core-Tier2}{Usage}{WriteDown}{<<Escribir las reglas de tipo que rigen el uso de un particular tipo compuesto.>>}
	\LO{PL}{BasicTypeSystems}{Core-Tier2}{Familiarity}{ExplainWhyType}{<<Explicar por qué indecidibilidad requiere sistemas de tipo para conservadoramente aproximar el comportamiento de un programa.>>}
	\LO{PL}{BasicTypeSystems}{Core-Tier2}{Usage}{DefineAndPieces}{<<Definir y usar piezas de programas (tales como, funciones, clases, métodos) que usan tipos genéricos, incluyendo para colecciones.>>}
	\LO{PL}{BasicTypeSystems}{Core-Tier2}{Familiarity}{DiscussTheGenerics}{<<Discutir las diferencias entre, genéricos ({\it generics}), subtipo y sobrecarga.>>}
	\LO{PL}{BasicTypeSystems}{Core-Tier2}{Familiarity}{ExplainMultiple}{<<Explicar múltiples beneficios y limitaciones de tipificación estática en escritura, mantenimiento y depuración de un software.>>}
	
\KU{PL}{ProgramRepresentation}{<<Program Representation>>}{}{0}{1}	
\KUDescription{PL}{ProgramRepresentation}{<<~>>}	
\KUItem{PL}{ProgramRepresentation}{Core-Tier1}{Programs}{}{<<Programs that take (other) programs as input such as interpreters, compilers, type-checkers, documentation generators>>}	\LO{PL}{ProgramRepresentation}{Core-Tier2}{Familiarity}{ExplainHowProcess}{<<Explicar como programas que procesan otros programas tratan a los otros programas como su entrada de datos.>>}
\KUItem{PL}{ProgramRepresentation}{Core-Tier1}{Abstract}{}{<<Abstract syntax trees; contrast with concrete syntax>>}	\LO{PL}{ProgramRepresentation}{Core-Tier2}{Usage}{DescribeAnTree}{<<Describir un árbol de sintaxis abstracto para un lenguaje pequeño.>>}
\KUItem{PL}{ProgramRepresentation}{Core-Tier1}{Data}{}{<<Data structures to represent code for execution, translation, or transmission>>}	\LO{PL}{ProgramRepresentation}{Core-Tier2}{Familiarity}{DescribeTheHaving}{<<Describir los beneficios de tener representaciones de programas que no sean cadenas de código fuente.>>}
	\LO{PL}{ProgramRepresentation}{Core-Tier2}{Usage}{WriteAProcess}{<<Escribir un programa para procesar alguna representación de código para algún propósito, tales como un interprete, una expresión optimizada, o un generador de documentación.>>}
	
\KU{PL}{LanguageTranslationandExecution}{<<Language Translation and Execution>>}{}{0}{3}	
\KUDescription{PL}{LanguageTranslationandExecution}{<<~>>}	
\KUItem{PL}{LanguageTranslationandExecution}{Core-Tier2}{Interpretation}{}{<<Interpretation vs. compilation to native code vs. compilation to portable intermediate representation>>}	\LO{PL}{LanguageTranslationandExecution}{Core-Tier2}{Familiarity}{DistinguishA}{<<Distinguir una definición de un lenguaje de una implementación particular de un lenguaje (compilador vs interprete, tiempo de ejecución de la representación de los objetos de datos, etc).>>}
"\KUItem{PL}{LanguageTranslationandExecution}{Core-Tier2}{Language}{}{<<Language translation pipeline: parsing, optional type-checking, translation, linking, execution
\begin{subtopics}
\item Execution as native code or within a virtual machine
\item Alternatives like dynamic loading and dynamic (or ``just-in-time”) code generation
\end{subtopics}>>}"	\LO{PL}{LanguageTranslationandExecution}{Core-Tier2}{Familiarity}{DistinguishSyntax}{<<Distinguir sintaxis y parseo de la semantica y la evaluación.>>}
"\KUItem{PL}{LanguageTranslationandExecution}{Core-Tier2}{Run}{}{<<Run-time representation of core language constructs such as objects (method tables) and first-class 
functions (closures)>>}"	\LO{PL}{LanguageTranslationandExecution}{Core-Tier2}{Familiarity}{Sketch}{<<Bosqueje una representación de bajo nivel de tiempo de ejecución de construcciones del lenguaje base, tales como objetos o cierres ({\it closures}).>>}
"\KUItem{PL}{LanguageTranslationandExecution}{Core-Tier2}{RunTime}{}{<<Run-time layout of memory: call-stack, heap, static data
\begin{subtopics}
\item Implementing loops, recursion, and tail calls
\end{subtopics}>>}"	\LO{PL}{LanguageTranslationandExecution}{Core-Tier2}{Familiarity}{ExplainHowImplementations}{<<Explicar cómo las implementaciones de los lenguajes de programación tipicamente organizan la memoria en datos globales, texto, {\it heap}, y secciones de pila y cómo las características tales como recursión y administración de memoria son mapeados a esté modelo de memoria.>>}
"\KUItem{PL}{LanguageTranslationandExecution}{Core-Tier2}{Memory}{}{<<Memory management
\begin{subtopics}
\item Manual memory management: allocating, de-allocating, and reusing heap memory
\item Automated memory management: garbage collection as an automated technique using the notion of reachability
\end{subtopics}>>}"	\LO{PL}{LanguageTranslationandExecution}{Core-Tier2}{Usage}{IdentifyAndLeaks}{<<Identificar y corregir las pérdidas de memoria y punteros desreferenciados.>>}
	\LO{PL}{LanguageTranslationandExecution}{Core-Tier2}{Familiarity}{DiscussTheLimitations}{<<Discutir los beneficios y limitaciones de la recolección de basura ({\it garbage collection}), incluyendo la noción de accesibilidad.>>}
	
\KU{PL}{SyntaxAnalysis}{<<Syntax Analysis>>}{}{0}{0}	
\KUDescription{PL}{SyntaxAnalysis}{<<~>>}	
\KUItem{PL}{SyntaxAnalysis}{Elective}{Scanning}{}{<<Scanning (lexical analysis) using regular expressions>>}	\LO{PL}{SyntaxAnalysis}{Elective}{Usage}{UseFormalSpecify}{<<Usar gramáticas formales para especificar la sintaxis de los lenguajes.>>}
\KUItem{PL}{SyntaxAnalysis}{Elective}{Parsing}{}{<<Parsing strategies including top-down (e.g., recursive descent, Earley parsing, or LL) and bottom-up (e.g., backtracking or LR) techniques; role of context-free grammars>>}	\LO{PL}{SyntaxAnalysis}{Elective}{Usage}{UseDeclarative}{<<Usar herramientas declarativas para generar parseadores y escáneres.>>}
\KUItem{PL}{SyntaxAnalysis}{Elective}{Generating}{}{<<Generating scanners and parsers from declarative specifications>>}	\LO{PL}{SyntaxAnalysis}{Elective}{Familiarity}{IdentifyKey}{<<Identificar las características clave en las definiciones de sintaxis: ambiguedad, asociatividad, precedencia.>>}
	
\KU{PL}{CompilerSemanticAnalysis}{<<Compiler Semantic Analysis>>}{}{0}{0}	
\KUDescription{PL}{CompilerSemanticAnalysis}{<<~>>}	
\KUItem{PL}{CompilerSemanticAnalysis}{Elective}{High}{}{<<High-level program representations such as abstract syntax trees>>}	\LO{PL}{CompilerSemanticAnalysis}{Elective}{Usage}{ImplementContext}{<<Implementar analizadores sensibles al contexto y estáticos a nivel de fuente, tales como, verificadores de tipos o resolvedores de identificadores para identificar las ocurrencias de vinculo.>>}
\KUItem{PL}{CompilerSemanticAnalysis}{Elective}{Scope}{}{<<Scope and binding resolution>>}	\LO{PL}{CompilerSemanticAnalysis}{Elective}{Usage}{DescribeSemantic}{<<Describir analizadores semanticos usando una gramatica con atributos.>>}
\KUItem{PL}{CompilerSemanticAnalysis}{Elective}{Type}{}{<<Type checking>>}	
\KUItem{PL}{CompilerSemanticAnalysis}{Elective}{Declarative}{}{<<Declarative specifications such as attribute grammars>>}	
	
\KU{PL}{CodeGeneration}{<<Code Generation>>}{}{0}{0}	
\KUDescription{PL}{CodeGeneration}{<<~>>}	
\KUItem{PL}{CodeGeneration}{Elective}{Procedure}{}{<<Procedure calls and method dispatching>>}	\LO{PL}{CodeGeneration}{Elective}{Familiarity}{IdentifyAllFor}{<<Identificar todos los pasos esenciales para convertir automáticamente código fuente en código emsamblador o otros lenguajes de bajo nivel.>>}
\KUItem{PL}{CodeGeneration}{Elective}{Separate}{}{<<Separate compilation; linking>>}	\LO{PL}{CodeGeneration}{Elective}{Usage}{GenerateThe}{<<Generar código de bajo nivel para llamadas a funciones en lenguajes modernos.>>}
\KUItem{PL}{CodeGeneration}{Elective}{Instruction}{}{<<Instruction selection>>}	\LO{PL}{CodeGeneration}{Elective}{Familiarity}{DiscussWhyRequires}{<<Discutir por qué la compilación separada requiere convenciones de llamadas uniformes.>>}
\KUItem{PL}{CodeGeneration}{Elective}{InstructionScheduling}{}{<<Instruction scheduling>>}	\LO{PL}{CodeGeneration}{Elective}{Familiarity}{DiscussWhyLimits}{<<Discutir por qué la compilación separada limita la optimización debido a efectos de llamadas desconocidas.>>}
\KUItem{PL}{CodeGeneration}{Elective}{Register}{}{<<Register allocation>>}	\LO{PL}{CodeGeneration}{Elective}{Familiarity}{DiscussOpportunities}{<<Discutir oportunidades para optimización introducida por la traducción y enfoques para alcanzar la optimización, tales como la selección de la instrucción, planificación de instruccion, asignación de registros y optimización de tipo mirilla ({\it peephole optimization}).>>}
\KUItem{PL}{CodeGeneration}{Elective}{Peephole}{}{<<Peephole optimization>>}	
	
\KU{PL}{RuntimeSystems}{<<Runtime Systems>>}{}{0}{0}	
\KUDescription{PL}{RuntimeSystems}{<<~>>}	
\KUItem{PL}{RuntimeSystems}{Elective}{Dynamic}{}{<<Dynamic memory management approaches and techniques: malloc/free, garbage collection (mark-sweep, copying, reference counting), regions (also known as arenas or zones)  >>}	\LO{PL}{RuntimeSystems}{Elective}{Familiarity}{CompareTheDifferent}{<<Comparar los beneficios de diferentes esquemas de administración de memoria, usando conceptos tales como, fragmentación, localidad, y sobrecarga de memoria.>>}
\KUItem{PL}{RuntimeSystems}{Elective}{Data}{}{<<Data layout for objects and activation records>>}	\LO{PL}{RuntimeSystems}{Elective}{Familiarity}{DiscussBenefits}{<<Discutir beneficios y limitaciones de la gestión automática de la memoria.>>}
\KUItem{PL}{RuntimeSystems}{Elective}{Just}{}{<<Just-in-time compilation and dynamic recompilation>>}	\LO{PL}{RuntimeSystems}{Elective}{Familiarity}{ExplainTheMetadata}{<<Explicar el uso de metadatos en las representaciones de tiempo de ejecución de objetos y registros de activación, tales como los punteros de la clase, las longitudes de arreglos, direcciones de retorno, y punteros de {\it frame}.>>}
\KUItem{PL}{RuntimeSystems}{Elective}{Other}{}{<<Other common features of virtual machines, such as class loading, threads, and security.>>}	\LO{PL}{RuntimeSystems}{Elective}{Familiarity}{DiscussAdvantages}{<<Discutir las ventajas, desventajas y dificultades del término ({\it just-in-time}) y recompilación automática.>>}
	\LO{PL}{RuntimeSystems}{Elective}{Familiarity}{IdentifyTheBy}{<<Identificar los servicios proporcionados por los sistemas de tiempo de ejecución en lenguajes modernos.>>}
	
\KU{PL}{StaticAnalysis}{<<Static Analysis>>}{}{0}{0}	
\KUDescription{PL}{StaticAnalysis}{<<~>>}	
\KUItem{PL}{StaticAnalysis}{Elective}{Relevant}{}{<<Relevant program representations, such as basic blocks, control-flow graphs, def-use chains, and static single assignment>>}	\LO{PL}{StaticAnalysis}{Elective}{Usage}{DefineUseful}{<<Definir análisis estáticos útiles en términos de un marco conceptual, como el análisis de flujo de datos.>>}
\KUItem{PL}{StaticAnalysis}{Elective}{Undecidability}{}{<<Undecidability and consequences for program analysis>>}	\LO{PL}{StaticAnalysis}{Elective}{Familiarity}{ExplainWhySound}{<<Explicar por qué los análisis estáticos de tipos no triviales ({\it non-trivial sound static analyses}) deben ser aproximados.>>}
\KUItem{PL}{StaticAnalysis}{Elective}{Flow}{}{<<Flow-insensitive analyses, such as type-checking and scalable pointer and alias analyses>>}	\LO{PL}{StaticAnalysis}{Elective}{Usage}{Communicate}{<<Comunicar por qué un análisis es correcto ({\it sound and terminating}).>>}
\KUItem{PL}{StaticAnalysis}{Elective}{FlowSensitive}{}{<<Flow-sensitive analyses, such as forward and backward dataflow analyses>>}	\LO{PL}{StaticAnalysis}{Elective}{Familiarity}{DistinguishMay}{<<Distinguir análisis de tipo: ``puede" y ``debe".>>}
\KUItem{PL}{StaticAnalysis}{Elective}{Path}{}{<<Path-sensitive analyses, such as software model checking>>}	\LO{PL}{StaticAnalysis}{Elective}{Familiarity}{ExplainWhyLimits}{<<Explicar por qué el {\it aliasing} potencial limita el análisis de tipos en los programas y como el análisis de alias puede ayudar.>>}
\KUItem{PL}{StaticAnalysis}{Elective}{Tools}{}{<<Tools and frameworks for defining analyses>>}	\LO{PL}{StaticAnalysis}{Elective}{Usage}{UseTheA}{<<Usar los resultados de un análisis estático para una optimización de un programa y/o la correctitud parcial de dicho programa.>>}
\KUItem{PL}{StaticAnalysis}{Elective}{Role}{}{<<Role of static analysis in program optimization>>}	
\KUItem{PL}{StaticAnalysis}{Elective}{RoleOf}{}{<<Role of static analysis in (partial) verification and bug-finding>>}	
	
\KU{PL}{AdvancedProgrammingConstructs}{<<Advanced Programming Constructs>>}{}{0}{0}	
\KUDescription{PL}{AdvancedProgrammingConstructs}{<<~>>}	
\KUItem{PL}{AdvancedProgrammingConstructs}{Elective}{Lazy}{}{<<Lazy evaluation and infinite streams>>}	\LO{PL}{AdvancedProgrammingConstructs}{Elective}{Usage}{UseVarious}{<<Usar diversas construcciones de programación avanzada correctamente.>>}
\KUItem{PL}{AdvancedProgrammingConstructs}{Elective}{Control}{}{<<Control Abstractions: Exception Handling, Continuations, Monads>>}	\LO{PL}{AdvancedProgrammingConstructs}{Elective}{Familiarity}{DiscussHowProgramming}{<<Discutir cómo diversas construcciones de programación avanzada tienen como objetivo mejorar la estructura del programa, la calidad del software y la productividad del programador.>>}
\KUItem{PL}{AdvancedProgrammingConstructs}{Elective}{Object}{}{<<Object-oriented abstractions: Multiple inheritance, Mixins, Traits, Multimethods>>}	\LO{PL}{AdvancedProgrammingConstructs}{Elective}{Familiarity}{DiscussHowProgrammingWith}{<<Discutir cómo diversas construcciones de programación avanzada interactúan con la definición e implementación de otras características del lenguaje.>>}
\KUItem{PL}{AdvancedProgrammingConstructs}{Elective}{Metaprogramming}{}{<<Metaprogramming: Macros, Generative programming, Model-based development>>}	
\KUItem{PL}{AdvancedProgrammingConstructs}{Elective}{Module}{}{<<Module systems>>}	
\KUItem{PL}{AdvancedProgrammingConstructs}{Elective}{String}{}{<<String manipulation via pattern-matching (regular expressions)>>}	
\KUItem{PL}{AdvancedProgrammingConstructs}{Elective}{Dynamic}{}{<<Dynamic code evaluation (“eval”)>>}	
\KUItem{PL}{AdvancedProgrammingConstructs}{Elective}{Language}{}{<<Language support for checking assertions, invariants, and pre/post-conditions>>}	
	
\KU{PL}{ConcurrencyandParallelism}{<<Concurrency and Parallelism>>}{PDDistributedSystems,PDParallelismFundamentals,PDDistributedSystemsTopicDistributedSystem,PDParallelismFundamentals}{0}{0}	
"\KUDescription{PL}{ConcurrencyandParallelism}{<<Support for concurrency is a fundamental programming-languages issue with rich material in programming language design, language implementation, and language theory. Due to coverage in other Knowledge Areas, this elective Knowledge Unit aims only to complement the material included elsewhere in the Body of Knowledge. Courses on programming languages are an excellent place to include a general treatment of concurrency including this other material.

/cross-reference{PDParallelandDistributedComputing, SFParallelism}.>>}"	
\KUItem{PL}{ConcurrencyandParallelism}{Elective}{Constructs}{}{<<Constructs for thread-shared variables and shared-memory synchronization>>}	\LO{PL}{ConcurrencyandParallelism}{Elective}{Usage}{WriteCorrect}{<<Escribir programas concurrentes correctos usando múltiples modelos de programación, tales como memoria compartida, actores, {\it futures} y primitivas de paralelismo de datos.>>}
\KUItem{PL}{ConcurrencyandParallelism}{Elective}{Actor}{}{<<Actor models>>}	\LO{PL}{ConcurrencyandParallelism}{Elective}{Usage}{UseAModel}{<<Usar un modelo de paso de mensajes para analizar un protocolo de comunicación.>>}
\KUItem{PL}{ConcurrencyandParallelism}{Elective}{Futures}{}{<<Futures>>}	\LO{PL}{ConcurrencyandParallelism}{Elective}{Familiarity}{ExplainWhyDo}{<<Explicar porqué los lenguajes de programación no garantizan consistencia secuencial en la presencia de la carrera de datos ({\it data race}) y qué es lo que los programadores deben hacer como resultado de esto.>>}
\KUItem{PL}{ConcurrencyandParallelism}{Elective}{LanguageSupport}{}{<<Language support for data parallelism>>}	
\KUItem{PL}{ConcurrencyandParallelism}{Elective}{Models}{}{<<Models for passing messages between sequential processes>>}	
\KUItem{PL}{ConcurrencyandParallelism}{Elective}{Effect}{}{<<Effect of memory-consistency models on language semantics and correct code generation>>}	
	
\KU{PL}{TypeSystems}{<<Type Systems>>}{}{0}{0}	
\KUDescription{PL}{TypeSystems}{<<~>>}	
\KUItem{PL}{TypeSystems}{Elective}{Compositional}{}{<<Compositional type constructors, such as product types (for aggregates), sum types (for unions), function types, quantified types, and recursive types>>}	\LO{PL}{TypeSystems}{Elective}{Usage}{DefineAPrecisely}{<<Definir un sistema de tipo de forma precisa y en su composición.>>}
\KUItem{PL}{TypeSystems}{Elective}{Type}{}{<<Type checking>>}	\LO{PL}{TypeSystems}{Elective}{Familiarity}{ForVarious}{<<Para varias construcciones de tipo fundamental, identificar los valores que describen y las invariantes que hacen que se cumplan.>>}
\KUItem{PL}{TypeSystems}{Elective}{TypeSafety}{}{<<Type safety as preservation plus progress>>}	\LO{PL}{TypeSystems}{Elective}{Familiarity}{Precisely}{<<Precisar las invariantes preservadas por un sistema de tipos seguro ({\it sound type system}).>>}
\KUItem{PL}{TypeSystems}{Elective}{TypeInference}{}{<<Type inference>>}	\LO{PL}{TypeSystems}{Elective}{Usage}{ProveType}{<<Demostrar la seguridad de tipos para un lenguaje simple en términos de conservación y progreso teoremas.>>}
\KUItem{PL}{TypeSystems}{Elective}{Static}{}{<<Static overloading>>}	\LO{PL}{TypeSystems}{Elective}{Usage}{ImplementAType}{<<Implementar un algoritmo de inferencia de tipos basado en la unificación para un lenguaje básico.>>}
	\LO{PL}{TypeSystems}{Elective}{Familiarity}{ExplainHowAndAlgorithms}{<<Explicar cómo la sobrecarga estática y algoritmos de resolución asociados influyen el comportamiento dinámico de los programas.>>}
	
\KU{PL}{FormalSemantics}{<<Formal Semantics>>}{}{0}{0}	
\KUDescription{PL}{FormalSemantics}{<<~>>}	
\KUItem{PL}{FormalSemantics}{Elective}{Syntax}{}{<<Syntax vs. semantics>>}	\LO{PL}{FormalSemantics}{Elective}{Usage}{GiveAFor}{<<Define una semántica formal para un lenguaje pequeño.>>}
\KUItem{PL}{FormalSemantics}{Elective}{Lambda}{}{<<Lambda Calculus>>}	\LO{PL}{FormalSemantics}{Elective}{Usage}{WriteAProgram}{<<Escribe un programa en cálculo lambda y muestra su evaluación hacia un forma normal.>>}
\KUItem{PL}{FormalSemantics}{Elective}{Aproaches}{}{<<Aproaches to semantics: Operatoional, Denotational, Axiomatic>>}	\LO{PL}{FormalSemantics}{Elective}{Familiarity}{DiscussTheOf}{<<Discute los diversos enfoques de semánticas operacionales, de notación y axiomáticas.>>}
\KUItem{PL}{FormalSemantics}{Elective}{Proofs}{}{<<Proofs by induction over language semantics>>}	\LO{PL}{FormalSemantics}{Elective}{Usage}{UseInduction}{<<Usa la inducción para demostrar las propiedades de todos los programas de un lenguaje.>>}
\KUItem{PL}{FormalSemantics}{Elective}{Formal}{PLTypeSystems,PLTypeSystems}{<<Formal definitions and proofs for type systems>>}	\LO{PL}{FormalSemantics}{Elective}{Usage}{UseInductionProperaties}{<<Usa inducción para demostrar las propiedades de todos los programas de un lenguaje que es bien tipado de acuerdo a un sistema formalmente definido de tipos.>>}
\KUItem{PL}{FormalSemantics}{Elective}{Parametricity}{PLTypeSystems,PLTypeSystems}{<<Parametricity>>}	\LO{PL}{FormalSemantics}{Elective}{Usage}{UseParametricity}{<<Usa parametricidad para establecer el comportamiento de un código dado solamente su tipo.>>}
\KUItem{PL}{FormalSemantics}{Elective}{Using}{}{<<Using formal semantics for systems modeling>>}	\LO{PL}{FormalSemantics}{Elective}{Usage}{UseFormalBuild}{<<Usa semánticas formales para construir un modelo formal de un sistema de software en vez de un lenguaje de programación.>>}
	
\KU{PL}{LanguagePragmatics}{<<Language Pragmatics>>}{}{0}{0}	
\KUDescription{PL}{LanguagePragmatics}{<<~>>}	
\KUItem{PL}{LanguagePragmatics}{Elective}{Principles}{}{<<Principles of language design such as orthogonality>>}	\LO{PL}{LanguagePragmatics}{Elective}{Familiarity}{DiscussTheConcepts}{<<Discute el rol de conceptos como ortogonalidad y el buen criterio de selección en el diseño de lenguajes.>>}
\KUItem{PL}{LanguagePragmatics}{Elective}{Evaluation}{}{<<Evaluation order, precedence and associativity>>}	\LO{PL}{LanguagePragmatics}{Elective}{Usage}{UseCrisp}{<<Utiliza criterios objetivos y nítidos para evaluar las decisiones en el diseño de un lenguaje.>>}
\KUItem{PL}{LanguagePragmatics}{Elective}{Eager}{}{<<Eager vs. delayed evaluation>>}	\LO{PL}{LanguagePragmatics}{Elective}{Usage}{GiveAnWhose}{<<Da un ejemplo de un programa cuyo resultado puede diferir dado diversas reglas de orden de evaluación, precedencia, o asociatividad.>>}
\KUItem{PL}{LanguagePragmatics}{Elective}{Defining}{}{<<Defining control and iteration constructs>>}	\LO{PL}{LanguagePragmatics}{Elective}{Familiarity}{ShowUses}{<<Muestra el uso de evaluación con retraso, como en el caso de abstracciones definidas y controladas por el usuario.>>}
\KUItem{PL}{LanguagePragmatics}{Elective}{External}{}{<<External calls and system libraries>>}	\LO{PL}{LanguagePragmatics}{Elective}{Familiarity}{DiscussTheAllowing}{<<Discute la necesidad de permitir llamadas a librerias externas y del sistema y las consecuencias de su implementación en un lenguaje.>>}
	
\KU{PL}{LogicProgramming}{<<Logic Programming>>}{}{0}{0}	
\KUDescription{PL}{LogicProgramming}{<<~>>}	
\KUItem{PL}{LogicProgramming}{Elective}{Causal}{}{<<Causal representation of data structures and algorithms>>}	\LO{PL}{LogicProgramming}{Elective}{Usage}{UseAToConventional}{<<Usa un lenguaje lógico para implementar un algoritmo convencional.>>}
\KUItem{PL}{LogicProgramming}{Elective}{Unification}{}{<<Unification>>}	\LO{PL}{LogicProgramming}{Elective}{Usage}{UseAToAlgorithm}{<<Usa un lenguaje lógico para implementar un algoritmo empleando búsqueda implícita usando claúsulas, relaciones, y cortes.>>}
\KUItem{PL}{LogicProgramming}{Elective}{Bactracking}{}{<<Bactracking and search>>}	
\KUItem{PL}{LogicProgramming}{Elective}{Cuts}{}{<<Cuts>>}	
	
\KA{SDF}{<<Fundamentos del desarrollo de software.>>}{}	
"\KADescription{SDF}{<<Fluency in the process of software development is a prerequisite to the study of most of computer science. In order to use computers to solve problems effectively, students must be competent at reading and writing programs in multiple programming languages. Beyond programming skills, however, they must be able to design and analyze algorithms, select appropriate paradigms, and utilize modern development and testing tools. This knowledge area brings together those fundamental concepts and skills related to the software development 
process. As such, it provides a foundation for other software-oriented knowledge areas, most notably Programming Languages, Algorithms and Complexity, and Software Engineering.

It is important to note that this knowledge area is distinct from the old Programming Fundamentals knowledge area from CC2001. Whereas that knowledge area focused exclusively on the programming skills required in an introductory computer science course, this new knowledge area is intended to fill a much broader purpose. It focuses on the entire software development process, identifying those concepts and skills that should be mastered in the first year of a computer science program. This includes the design and simple analysis of algorithms, fundamental programming concepts and data structures, and basic software development methods and tools. As a result of its broader purpose, the Software Development Fundamentals knowledge area includes fundamental concepts and skills that could naturally be listed in other software-oriented knowledge areas (e.g., programming constructs from Programming Languages, simple algorithm analysis from Algorithms & Complexity, simple development methodologies from Software Engineering). Likewise, each of these knowledge areas will contain more advanced material that builds upon the fundamental concepts and skills listed here. 

While broader in scope than the old Programming Fundamentals, this knowledge area still allows for considerable flexibility in the design of first-year curricula. For example, the Fundamental Programming Concepts unit identifies only those concepts that are common to all programming paradigms. It is expected that an instructor would select one or more programming paradigms 
(e.g., object-oriented programming, functional programming, scripting) to illustrate these programming concepts, and would pull paradigm-specific content from the Programming Languages knowledge area to fill out a course. Likewise, an instructor could choose to emphasize formal analysis(e.g., Big-Oh, computability) or design methodologies (e.g., team projects, software life cycle) early, thus integrating hours from the Programming Languages, Algorithms and Complexity, and/or Software Engineering knowledge areas. Thus, the 43 hours of material in this knowledge area will typically be augmented with core material from one or more of these knowledge areas to form a complete and coherent first-year experience. 

When considering the hours allocated to each knowledge unit, it should be noted that these hours reflect the minimal amount of classroom coverage needed to introduce the material. Many software development topics will reappear and be reinforced by later topics (e.g., applying iteration constructs when processing lists). In addition, the mastery of concepts and skills from this knowledge area requires a significant amount of software development experience outside of class.>>}"	
	
\KU{SDF}{AlgorithmsandDesign}{<<Algorithms and Design>>}{}{11}{0}	
"\KUDescription{SDF}{AlgorithmsandDesign}{<<This unit builds the foundation for core concepts in the Algorithms and Complexity Knowledge Area, most notably in the Basic Analysis and Algorithmic Strategies knowledge units.
>>}"	
"\KUItem{SDF}{AlgorithmsandDesign}{Core-Tier1}{The}{}{<<The concept and properties of algorithms
\begin{subtopics}
\item Informal comparison of algorithm efficiency (e.g., operation counts)
\end{subtopics}>>}"	\LO{SDF}{AlgorithmsandDesign}{Core-Tier1}{Familiarity}{DiscussTheAlgorithms}{<<Discute la importancia de los algoritmos en el proceso de solución de un problema.>>}
\KUItem{SDF}{AlgorithmsandDesign}{Core-Tier1}{TheRole}{}{<<The role of algorithms in the problem-solving process>>}	\LO{SDF}{AlgorithmsandDesign}{Core-Tier1}{Familiarity}{DiscussHowMay}{<<Discute como un problema puede ser resuelto por múltiples algoritmos, cada uno con propiedades diferentes.>>}
"\KUItem{SDF}{AlgorithmsandDesign}{Core-Tier1}{Problem}{}{<<Problem-solving strategies
\begin{subtopics}
\item Iterative and recursive mathematical functions 
\item Iterative and recursive traversal of data structures
\item Divide-and-conquer strategies
\end{subtopics}>>}"	\LO{SDF}{AlgorithmsandDesign}{Core-Tier1}{Usage}{CreateAlgorithms}{<<Crea algoritmos para resolver problemas simples.>>}
"\KUItem{SDF}{AlgorithmsandDesign}{Core-Tier1}{Fundamental}{}{<<Fundamental design concepts and principles
\begin{subtopics}
\item Abstraction
\item Program decomposition
\item Encapsulation and information hiding 
\item Separation of behaivor and implementation
\end{subtopics}>>}"	\LO{SDF}{AlgorithmsandDesign}{Core-Tier1}{Usage}{UseAToAnd}{<<Usa un lenguaje de programación para implementar, probar, y depurar algoritmos para resolver problemas simples.>>}
	\LO{SDF}{AlgorithmsandDesign}{Core-Tier1}{Usage}{ImplementTest}{<<Implementa, prueba, y depura funciones recursivas simples y sus procedimientos.>>}
	\LO{SDF}{AlgorithmsandDesign}{Core-Tier1}{Assessment}{DetermineWhetherOr}{<<Determina si una solución iterativa o recursiva es la más apropiada para un problema.>>}
	\LO{SDF}{AlgorithmsandDesign}{Core-Tier1}{Usage}{ImplementAConquer}{<<Implementa un algoritmo de divide y vencerás para resolver un problema.>>}
	\LO{SDF}{AlgorithmsandDesign}{Core-Tier1}{Usage}{ApplyTheDecomposition}{<<Aplica técnicas de descomposición para dividir un programa en partes más pequeñas.>>}
	\LO{SDF}{AlgorithmsandDesign}{Core-Tier1}{Usage}{IdentifyTheAnd}{<<Identifica los componentes de datos y el comportamiento de mútiples tipos de datos abstractos.>>}
	\LO{SDF}{AlgorithmsandDesign}{Core-Tier1}{Usage}{ImplementAData}{<<Implementa un tipo de dato abstracto coherente, con la menor pérdida de acoplamiento entre componentes y comportamientos.>>}
	\LO{SDF}{AlgorithmsandDesign}{Core-Tier1}{Assessment}{IdentifyTheAndMultiple}{<<Identifica las fortalezas y las debilidades relativas entre múltiples diseños e implementaciones de un problema.>>}
	
\KU{SDF}{FundamentalProgrammingConcepts}{<<Fundamental Programming Concepts>>}{}{10}{0}	
\KUDescription{SDF}{FundamentalProgrammingConcepts}{<<This knowledge unit builds the foundation for core concepts in the Programming Languages Knowledge Area, mostnotably in the paradigm-specific units: Object-Oriented Programming, Functional Programming, and Event-Driven & Reactive Programming.>>}	
\KUItem{SDF}{FundamentalProgrammingConcepts}{Core-Tier1}{Basic}{}{<<Basic syntax and semantics of a higher-level language>>}	\LO{SDF}{FundamentalProgrammingConcepts}{Core-Tier1}{Assessment}{AnalyzeAndBehavior}{<<Analiza y explica el comportamiento de programas simples que involucran estructuras fundamentales de programación variables, expresiones, asignaciones, E/S, estructuras de control, funciones, paso de parámetros, y recursividad.>>}
\KUItem{SDF}{FundamentalProgrammingConcepts}{Core-Tier1}{Variables}{}{<<Variables and primitive data types (e.g., numbers, characters, Booleans)>>}	\LO{SDF}{FundamentalProgrammingConcepts}{Core-Tier1}{Familiarity}{IdentifyAndOf}{<<Identifica y describe el uso de tipos de datos primitivos.>>}
\KUItem{SDF}{FundamentalProgrammingConcepts}{Core-Tier1}{Expressions}{}{<<Expressions and assingments>>}	\LO{SDF}{FundamentalProgrammingConcepts}{Core-Tier1}{Usage}{WritePrograms}{<<Escribe programas que usan tipos de datos primitivos.>>}
\KUItem{SDF}{FundamentalProgrammingConcepts}{Core-Tier1}{Simple}{}{<<Simple I/O including file I/O>>}	\LO{SDF}{FundamentalProgrammingConcepts}{Core-Tier1}{Usage}{Modify}{<<Modifica y expande programas cortos que usen estructuras de control condicionales e iterativas así como funciones.>>}
\KUItem{SDF}{FundamentalProgrammingConcepts}{Core-Tier1}{Conditional}{}{<<Conditional and iterative control structures>>}	\LO{SDF}{FundamentalProgrammingConcepts}{Core-Tier1}{Usage}{DesignImplement}{<<Diseña, implementa, prueba, y depura un programa que usa cada una de las siguientes estructuras de datos fundamentales: cálculos básicos, E/S simple, condicional estándar y estructuras iterativas, definición de funciones, y paso de parámetros.>>}
\KUItem{SDF}{FundamentalProgrammingConcepts}{Core-Tier1}{Functions}{}{<<Functions and parameter passing>>}	\LO{SDF}{FundamentalProgrammingConcepts}{Core-Tier1}{Usage}{WriteAUses}{<<Escribe un programa que usa E/S de archivos para brindar persistencia a través de ejecuciones múltiples.>>}
\KUItem{SDF}{FundamentalProgrammingConcepts}{Core-Tier1}{The}{}{<<The concept of recursion>>}	\LO{SDF}{FundamentalProgrammingConcepts}{Core-Tier1}{Assessment}{ChooseAppropriateIteration}{<<Escoje estructuras de condición y repetición adecuadas para una tarea de programación dada.>>}
	\LO{SDF}{FundamentalProgrammingConcepts}{Core-Tier1}{Familiarity}{DescribeTheRecursion}{<<Describe el concepto de recursividad y da ejemplos de su uso.>>}
	\LO{SDF}{FundamentalProgrammingConcepts}{Core-Tier1}{Assessment}{IdentifyTheAndCase}{<<Identifica el caso base y el caso general de un problema basado en recursividad.>>}
	
\KU{SDF}{FundamentalDataStructures}{<<Fundamental Data Structures>>}{}{12}{0}	
\KUDescription{SDF}{FundamentalDataStructures}{<<This unit builds the foundation for core concepts in the Algorithms and Complexity Knowledge Area, most notably in the Fundamental Data Structures and Algorithms and Basic Computability and Complexity knowledge units. >>}	
\KUItem{SDF}{FundamentalDataStructures}{Core-Tier1}{Arrays}{}{<<Arrays>>}	\LO{SDF}{FundamentalDataStructures}{Core-Tier1}{Familiarity}{DiscussTheOfData}{<<Discute el uso apropiado de estructuras de datos incorporadas.>>}
\KUItem{SDF}{FundamentalDataStructures}{Core-Tier1}{Records}{}{<<Records/structs (heterogeneus aggregates)>>}	\LO{SDF}{FundamentalDataStructures}{Core-Tier1}{Familiarity}{DescribeCommon}{<<Describe aplicaciones comunes para cada de las siguientes estructuras de datos: pila, cola, cola de prioridad, conjunto y mapa.>>}
\KUItem{SDF}{FundamentalDataStructures}{Core-Tier1}{Strings}{}{<<Strings and string processing>>}	\LO{SDF}{FundamentalDataStructures}{Core-Tier1}{Usage}{WriteProgramsEach}{<<Escribe programas que usen cada una de las siguientes estructuras de datos: arreglos, registros/estructuras, cadenas, listas enlazadas, pilas, colas, conjuntos, y mapas.>>}
"\KUItem{SDF}{FundamentalDataStructures}{Core-Tier1}{Abstract}{}{<<Abstract data types and their implementation
\begin{subtopics}
\item Stacks
\item Queues
\item Prority Queues
\item Sets
\item Maps
\end{subtopics}>>}"	\LO{SDF}{FundamentalDataStructures}{Core-Tier1}{Assessment}{CompareAlternativeData}{<<Compara implementaciones alternas de estructuras de datos con respecto a su rendimiento.>>}
\KUItem{SDF}{FundamentalDataStructures}{Core-Tier1}{References}{}{<<References and aliasing >>}	\LO{SDF}{FundamentalDataStructures}{Core-Tier1}{Familiarity}{DescribeHowFor}{<<Describe cómo las referencias permiten que los objetos sean accesibles de diversas formas.>>}
\KUItem{SDF}{FundamentalDataStructures}{Core-Tier1}{Linked}{}{<<Linked lists>>}	\LO{SDF}{FundamentalDataStructures}{Core-Tier1}{Assessment}{CompareAndCosts}{<<Compara y contrasta el costo y beneficio de implementar estructuras de datos dinámicas y estáticas.>>}
\KUItem{SDF}{FundamentalDataStructures}{Core-Tier1}{Strategies}{}{<<Strategies for choosing the appropiate data structure>>}	\LO{SDF}{FundamentalDataStructures}{Core-Tier1}{Assessment}{ChooseTheStructure}{<<Escoje la estructura de dato apropiada para modelar un problema determinado.>>}
	
\KU{SDF}{DevelopmentMethods}{<<Development Methods>>}{}{10}{0}	
\KUDescription{SDF}{DevelopmentMethods}{<<This unit builds the foundation for core concepts in the Software Engineering knowledge area, most notably in the Software Processes, Software Design and Software Evolution knowledge units.>>}	
\KUItem{SDF}{DevelopmentMethods}{Core-Tier1}{Program}{}{<<Program comprehension>>}	\LO{SDF}{DevelopmentMethods}{Core-Tier1}{Assessment}{TraceThe}{<<Traza la ejecución de una variedad de segmentos de código y escribir resúmenes de sus cálculos.>>}
"\KUItem{SDF}{DevelopmentMethods}{Core-Tier1}{ProgramCorrecteness}{}{<<Program correcteness
\begin{subtopics}
\item Types of errors (syntax, logic, run-time)
\item The concept of specification
\item Defensive programming (e.g, secure coding, exception handling)
\item Code reviews
\item Testing fundamentals and test-case generation
\item The role and the use of contracts, including pre- and post-conditions
\item Unit testing
\end{subtopics}>>}"	\LO{SDF}{DevelopmentMethods}{Core-Tier1}{Familiarity}{ExplainWhyOf}{<<Explique por qué la creación de componentes de programa correctos es importante en la producción de software de alta calidad.>>}
\KUItem{SDF}{DevelopmentMethods}{Core-Tier1}{Simple}{}{<<Simple refactoring >>}	\LO{SDF}{DevelopmentMethods}{Core-Tier1}{Usage}{IdentifyCommonThat}{<<Identificar los errores de codificación comunes que conducen a programas inseguros (por ejemplo, desbordamientos de buffer, pérdidas de memoria, código malicioso) y aplicar estrategias para evitar este tipo de errores.>>}
"\KUItem{SDF}{DevelopmentMethods}{Core-Tier1}{Modern}{}{<<Modern programming enviroments 
\begin{subtopics}
\item Code search
\item Programming using library components and their APIs
\end{subtopics}>>}"	\LO{SDF}{DevelopmentMethods}{Core-Tier1}{Usage}{ConductAReview}{<<Llevar a cabo una revisión de código personal (centrado en los errores comunes de codificación) en un componente del programa utilizando una lista de verificación.>>}
\KUItem{SDF}{DevelopmentMethods}{Core-Tier1}{Debugging}{}{<<Debugging strategies>>}	\LO{SDF}{DevelopmentMethods}{Core-Tier1}{Usage}{Contribute}{<<Contribuir en un pequeño grupo para una revisión de código centrada en la corrección de componentes.>>}
\KUItem{SDF}{DevelopmentMethods}{Core-Tier1}{Documentation}{}{<<Documentation and program style>>}	\LO{SDF}{DevelopmentMethods}{Core-Tier1}{Familiarity}{DescribeHowCanTo}{<<Describir cómo un contrato se puede utilizar para especificar el comportamiento de un componente del programa.>>}
	\LO{SDF}{DevelopmentMethods}{Core-Tier1}{Usage}{Refactor}{<<Refactorizar un programa mediante la identificación de oportunidades para aplicar la abstracción del procesamiento.>>}
	\LO{SDF}{DevelopmentMethods}{Core-Tier1}{Usage}{ApplyAStrategies}{<<Aplicar una variedad de estrategias para la prueba y depuración de programas sencillos.>>}
	\LO{SDF}{DevelopmentMethods}{Core-Tier1}{Usage}{ConstructExecute}{<<Contruir, ejecutar y depurar programas usando un IDE moderno y herramientas asociadas tales como herramientas de pruebas de unidad y depuradores visuales.>>}
	\LO{SDF}{DevelopmentMethods}{Core-Tier1}{Usage}{ConstructAnd}{<<Construir y depurar programas que utilizan las bibliotecas estándar disponibles con un lenguaje de programación elegido.>>}
	\LO{SDF}{DevelopmentMethods}{Core-Tier1}{Assessment}{AnalyzeTheWhich}{<<Analizar el grado en que el código de otro programador cumple con los estándares de documentación y de estilo de programación.>>}
	\LO{SDF}{DevelopmentMethods}{Core-Tier1}{Usage}{ApplyConsistent}{<<Aplicar los estandares de documentación y estilo de programación que contribuyan a la legibilidad y mantenimiento de software.>>}
	
\KA{SE}{<<Ingeniería de Software.>>}{}	
"\KADescription{SE}{<<In every computing application domain, professionalism, quality, schedule, and cost are critical to producing software systems. Because of this, the elements of software engineering are applicable to developing software in all areas of computing. A wide variety of software engineering practices have been developed and utilized since the need for a discipline of software engineering was first recognized. Many trade-offs between these different practices have also been identified. Practicing software engineers have to select and apply appropriate techniques and practices to a given development effort in order to maximize value. To learn how todo so, they study the elements of software engineering.

Software engineering is the discipline concerned with the application of theory, knowledge, and practice to effectively and efficiently build reliable software systems that satisfy the requirements of customers and users. This discipline is applicable to small, medium, and large-scale systems. It encompasses all phases of the lifecycle of a software system, including requirements elicitation, analysis and specification; design; construction; verification and validation; deployment; and operation and maintenance. Whether small or large, following a traditional plan-driven development process, an agile approach, or some other method, software engineering is concerned with the best way to build good software systems.

Software engineering uses engineering methods, processes, techniques, and measurements. It benefits from the use of tools for managing software development; analyzing and modeling software artifacts; assessing and controlling quality; and for ensuring a disciplined, controlled approach to software evolution and reuse. The software engineering toolbox has evolved over the years. For instance, the use of contracts, with requires and ensure clauses and class invariants, is one good practice that has become more common. Software development, which can involve an individual developer or a team or teams of developers, requires choosing the most appropriate tools, methods, and approaches for a given development environment. 

Students and instructors need to understand the impacts of specialization on software engineering approaches. For example, specialized systems include:

\begin{subtopics}
\item Real time systems
\item Client-server systems
\item Distributed systems
\item Parallel systems
\item Web-based systems
\item High integrity systems
\item Games
\item Mobile computing
\item Domain specific software (e.g., scientific computing or business applications)
\end{subtopics}

Issues raised by each of these specialized systems demand specific treatments in each phase of software engineering. Students must become aware of the differences between general software engineering techniques and principles and the techniques and principles needed to address issues specific to specialized systems.

An important effect of specialization is that different choices of material may need to be made when teaching applications of software engineering, such as between different process models, different approaches to modeling systems, or different choices of techniques for carrying out any of the key activities. This is reflected in the assignment of core and elective material, with the core topics and learning outcomes focusing on the principles underlying the various choices, and the details of the various alternatives from which the choices have to be made being assigned to the elective material.

Another division of the practices of software engineering is between those concerned with the fundamental need to develop systems that implement correctly the functionality that is required for themand those concerned with other qualities for systems and the trade-offs needed to balance these qualities. This division too is reflected in the assignment of core and elective material, so that topics and learning outcomes concerned with the basic methods for developing such system are assigned to the coreand those that are concerned with other qualities and tradeoffs between them are assigned to the elective material. 

In general, students can best learn to apply much of the material defined in the Sofware Engineering KA by participating in a project. Such projects should require students to work on a team to develop a software system through as much of its lifecycle as is possible. Much of software engineering is devoted to effective communication among team members and stakeholders. Utilizing project teams, projects can be sufficiently challenging to require students to use effective software engineering techniques and todevelop and practice their communication skills. While organizing and running effective projects within the academic framework can be challenging, the best way to learn to apply software engineering theory and knowledge is in the practical environment of a project. The minimum hours specified for some knowledge units in this document may appear insufficient to accomplish associated applicationlevel learning outcomes. It should be understood that these outcomes are to be achieved through project experience that may even occur later in the curriculum than when the topics within the knowledge unit are introduced. 

Further, there is increasing evidence that students learn to apply software engineering principles more effectively through an iterative approach, where students have the opportunity to work through a development cycle, assess their work, and then apply the knowledge gained through their assessment to another development cycle. Agile and iterative lifecycle models inherently afford such opportunities. 

Software lifecycle terminology in this document is based on that used in earlier sources, such as the Software Engineering Body of Knowledge (SWEBOK) and the ACM/IEEE-CS Software Engineering 2004 Curriculum Guidelines (SE2004). While some terms were originally defined in the context of plan-driven development processes, they are treated here as generic, and thus equally applicable to agile processes. 

Note: The SDF/Development Methods knowledge unit includes 9 Core-Tier1 hours that constitute an introduction to certain aspects of software engineering. The knowledge units, topics and core hour specifications in this Software Engineering Knowledge Area must be understood as assuming previous exposure to the material described in \xref{SDFDevelopmentMethods} 
>>}"	
	
\KU{SE}{SoftwareProcesses}{<<Software Processes>>}{}{2}{1}	
\KUDescription{SE}{SoftwareProcesses}{<<~>>}	
\KUItem{SE}{SoftwareProcesses}{Core-Tier1}{System}{IASSecureSoftwareEngineering,IASSecureSoftwareEngineering}{<<System level considerations, i.e., the iteraction of software with its intended enviroment>>}	\LO{SE}{SoftwareProcesses}{Core-Tier1}{Familiarity}{DescribeHowInteract}{<<Describa cómo el software puede interactuar y participar en varios sistemas, incluyendo la gestión de información, integración, control de procesos y sistemas de comunicaciones.>>}
"\KUItem{SE}{SoftwareProcesses}{Core-Tier1}{Introduction}{}{<<Introduction to software process models (e.g., waterfall, incremental, agile)
\begin{subtopics}
\item Activities with software lifecycles
\end{subtopics}>>}"	\LO{SE}{SoftwareProcesses}{Core-Tier1}{Familiarity}{DescribeTheAndSeveral}{<<Describir las ventajas y desventajas relativas entre varios modelos importantes de procesos (por ejemplo, la cascada, iterativo y ágil).>>}
\KUItem{SE}{SoftwareProcesses}{Core-Tier1}{Programming}{}{<<Programming in the large vs. individual programming>>}	\LO{SE}{SoftwareProcesses}{Core-Tier1}{Familiarity}{DescribeTheThat}{<<Describir las diferentes prácticas que son componentes clave de los diversos modelos de procesos.>>}
\KUItem{SE}{SoftwareProcesses}{Core-Tier2}{Evaluation}{}{<<Evaluation of software process models>>}	\LO{SE}{SoftwareProcesses}{Core-Tier1}{Familiarity}{DifferentiateAmong}{<<Diferenciar entre las fases de desarrollo de software.>>}
\KUItem{SE}{SoftwareProcesses}{Elective}{Software}{}{<<Software quality concepts>>}	\LO{SE}{SoftwareProcesses}{Core-Tier1}{Familiarity}{DescribeHowThe}{<<Describir cómo la programación en grandes equipos difiere de esfuerzos individuales con respecto a la comprensión de una gran base de código, lectura de código, comprensión de las construcciones, y comprensión de contexto de cambios.>>}
\KUItem{SE}{SoftwareProcesses}{Elective}{Process}{}{<<Process improvement >>}	\LO{SE}{SoftwareProcesses}{Core-Tier2}{Familiarity}{ExplainTheAAndExample}{<<Explicar el concepto de ciclo de vida del software y proporcionar un ejemplo que ilustra sus fases incluyendo los entregables que se producen.>>}
\KUItem{SE}{SoftwareProcesses}{Elective}{SoftwareProcess}{}{<<Software process capability maturity models>>}	\LO{SE}{SoftwareProcesses}{Core-Tier2}{Usage}{CompareSeveral}{<<Comparar varios modelos comunes de procesos con respecto a su valor para el desarrollo de las clases particulares de sistemas de software, teniendo en cuenta diferentes aspectos tales como, estabilidad de los requisitos, tamaño y características no funcionales.>>}
\KUItem{SE}{SoftwareProcesses}{Elective}{SoftwareProcessMeasurements}{}{<<Software process measurements>>}	\LO{SE}{SoftwareProcesses}{Elective}{Familiarity}{DefineSoftware}{<<Definir la calidad del software y describir el papel de las actividades de aseguramiento de la calidad en el proceso de software.>>}
	\LO{SE}{SoftwareProcesses}{Elective}{Familiarity}{DescribeTheFundamental}{<<Describir el objetivo y similitudes fundamentales entre los enfoques de mejora de procesos.>>}
	\LO{SE}{SoftwareProcesses}{Elective}{Assessment}{CompareSeveralModels}{<<Comparar varios modelos de mejora de procesos, tales como CMM, CMMI, CQI, {\it Plan-Do-Check-Act}, o ISO9000.>>}
	\LO{SE}{SoftwareProcesses}{Elective}{Usage}{Assess}{<<Evaluar un esfuerzo de desarrollo y recomendar cambios potenciales al participar en la mejora de procesos (usando un modelo como PSP) o involucración en una retrospectiva de un proyecto.>>}
	\LO{SE}{SoftwareProcesses}{Elective}{Familiarity}{ExplainTheProcess}{<<Explicar el papel de los modelos de madurez de procesos en la mejora de procesos.>>}
	\LO{SE}{SoftwareProcesses}{Elective}{Familiarity}{DescribeSeveralForControlling}{<<Describir varias métricas de procesos para la evaluación y el control de un proyecto.>>}
	\LO{SE}{SoftwareProcesses}{Elective}{Usage}{UseProject}{<<Usar las medidas en proyecto para describir el estado actual de un proyecto.>>}
	
\KU{SE}{SoftwareProjectManagement}{<<Software Project Management>>}{}{0}{2}	
\KUDescription{SE}{SoftwareProjectManagement}{<<~>>}	
"\KUItem{SE}{SoftwareProjectManagement}{Core-Tier2}{Team}{}{<<Team participation
\begin{subtopics}
\item Team processes including responsabilities for task, meeting structure, and work schedule
\item Roles and responsabilities in a software team 
\item Team conflict resolution
\item Risks associated with virtual teams (communication, perception, structure)
\end{subtopics}>>}"	\LO{SE}{SoftwareProjectManagement}{Core-Tier2}{Familiarity}{DiscussCommon}{<<Discutir los comportamientos comunes que contribuyen al buen funcionamiento de un equipo>>}
\KUItem{SE}{SoftwareProjectManagement}{Core-Tier2}{Effort}{}{<<Effort estimation (at the personal level)>>}	\LO{SE}{SoftwareProjectManagement}{Core-Tier2}{Usage}{CreateAndAgenda}{<<Crear y seguir un programa para una reunión del equipo.>>}
"\KUItem{SE}{SoftwareProjectManagement}{Core-Tier2}{Risk}{IASSecureSoftwareEngineering,IASSecureSoftwareEngineering}{<<Risk
\begin{subtopics}
\item The role of risk in the lifecycle
\item Risk categories including security, safety, market, financial, technology, people, quality, structure and process
\end{subtopics}>>}"	\LO{SE}{SoftwareProjectManagement}{Core-Tier2}{Usage}{IdentifyAndRoles}{<<Identificar y justificar las funciones necesarias en un equipo de desarrollo de software.>>}
"\KUItem{SE}{SoftwareProjectManagement}{Elective}{TeamManagement}{}{<<Team management 
\begin{subtopics}
\item Team organization and decision-making 
\item Role identification and assigment
\item Individual and team performance assessment
\end{subtopics}>>}"	\LO{SE}{SoftwareProjectManagement}{Core-Tier2}{Usage}{UnderstandTheAnd}{<<Entender las fuentes, obstáculos y beneficios potenciales de un conflicto de equipo.>>}
"\KUItem{SE}{SoftwareProjectManagement}{Elective}{Project}{}{<<Project management
\begin{subtopics}
\item Scheduling and tracking
\item Project management tools 
\item Cost/benefit analysis
\end{subtopics}>>}"	\LO{SE}{SoftwareProjectManagement}{Core-Tier2}{Usage}{ApplyAStrategy}{<<Aplicar una estrategia de resolución de conflictos en un ambiente de equipo.>>}
\KUItem{SE}{SoftwareProjectManagement}{Elective}{SoftwareMeasurement}{}{<<Software measurement and estimation techniques>>}	\LO{SE}{SoftwareProjectManagement}{Core-Tier2}{Usage}{UseAn}{<<Utilizar un método ad hoc para estimar el esfuerzo de desarrollo del software (ejemplo, tiempo) y comparar con el esfuerzo actual requerido.>>}
\KUItem{SE}{SoftwareProjectManagement}{Elective}{SoftwareQuality}{}{<<Software quality assurance and the role of measurements >>}	\LO{SE}{SoftwareProjectManagement}{Core-Tier2}{Familiarity}{ListSeveral}{<<Listar varios ejemplos de los riesgos del software.>>}
"\KUItem{SE}{SoftwareProjectManagement}{Elective}{RiskS}{}{<<Risk
\begin{subtopics}
\item Risk identification and management 
\item Risk analysis and evaluation
\item Risk tolerance (e.g., risk-adverse, risk-neutral, risk-seeking)
\item Risk planning 
\end{subtopics}>>}"	\LO{SE}{SoftwareProjectManagement}{Core-Tier2}{Familiarity}{DescribeTheRiskSoftware}{<<Describir el impacto del riesgo en el ciclo de vida de desarrollo de software.>>}
\KUItem{SE}{SoftwareProjectManagement}{Elective}{System}{}{<<System-wide approach to risk including hazards associated with tools>>}	\LO{SE}{SoftwareProjectManagement}{Core-Tier2}{Familiarity}{DescribeDifferent}{<<Describir las diferentes categorías de riesgo en los sistemas de software.>>}
	\LO{SE}{SoftwareProjectManagement}{Elective}{Usage}{DemonstrateThrough}{<<Demostrar a través de la colaboración de proyectos de equipo los elementos centrales de la contrucción de equipos y gestión de equipos.>>}
	\LO{SE}{SoftwareProjectManagement}{Elective}{Familiarity}{DescribeHowOfAffects}{<<Describir como la elección de modelos de procesos afectan la estructura organizacional de equipos y procesos de toma de decisiones.>>}
	\LO{SE}{SoftwareProjectManagement}{Elective}{Usage}{CreateAIdentifying}{<<Crear un equipo mediante la identificación de los roles apropiados y la asignación de funciones a los miembros del equipo.>>}
	\LO{SE}{SoftwareProjectManagement}{Elective}{Usage}{AssessAnd}{<<Evaluar y retroalimentar a los equipos e individuos sobre su desempeño en un ambiente de equipo.>>}
	\LO{SE}{SoftwareProjectManagement}{Elective}{Familiarity}{Using}{<<Usando un software particular procesar, describir los aspectos de un proyecto que encesita ser planeado y monitoreado, (ejemplo, estimar el tamaño y esfuerzo, un horario, reasignación de recursos, control de configuración, gestión de cambios, identificación de riesgos en un proyecto y gestión).>>}
	\LO{SE}{SoftwareProjectManagement}{Elective}{Usage}{Track}{<<Realizar el seguimiento del progreso de alguna etapa de un proyecto que utiliza métricas de proyectos apropiados.>>}
	\LO{SE}{SoftwareProjectManagement}{Elective}{Usage}{CompareSimple}{<<Comparar las técnicas simples de tamaño de software y estimación de costos.>>}
	\LO{SE}{SoftwareProjectManagement}{Elective}{Usage}{UseATool}{<<Usar una herramienta de gestión de proyectos para ayudar en la asignación y rastreo de tareas en un proyecto de desarrollo de software.>>}
	\LO{SE}{SoftwareProjectManagement}{Elective}{Assessment}{DescribeTheRiskThe}{<<Describir el impacto de la tolerancia de riesgos en el proceso de desarrollo de software.>>}
	\LO{SE}{SoftwareProjectManagement}{Elective}{Familiarity}{IdentifyRisks}{<<Identificar riesgos y describir enfoques para manejar riesgos (evitar, aceptar, tranferir, mitigar) y caracterizar fortalezas y defectos para cada uno.>>}
	\LO{SE}{SoftwareProjectManagement}{Elective}{Usage}{ExplainHowDecisions}{<<Explicar cómo el riesgo afecta las decisiones en el proceso de desarrollo de software.>>}
	\LO{SE}{SoftwareProjectManagement}{Elective}{Usage}{IdentifySecurity}{<<Identificar los riesgos de seguridad para un sistema de software.>>}
	\LO{SE}{SoftwareProjectManagement}{Elective}{Usage}{DemonstrateA}{<<Demostrar un enfoque sistemático para la tarea de identificar los peligros y riesgos en una situación particular.>>}
	\LO{SE}{SoftwareProjectManagement}{Elective}{Usage}{ApplyTheOf}{<<Aplicar los principios básicos del manejo de riesgos en una variedad de escenarios simples incluyendo una situación de seguridad.>>}
	\LO{SE}{SoftwareProjectManagement}{Elective}{Usage}{ConductAAnalysis}{<<Dirigir un análisis de costo/beneficio para el enfoque de mitigación de riesgos.>>}
	\LO{SE}{SoftwareProjectManagement}{Elective}{Usage}{IdentifyAndOfFor}{<<Identificar y analizar alguno de los riesgos para un sistema entero que surgen de aspectos distintos del software.>>}
	
\KU{SE}{ToolsandEnvironments}{<<Tools and Environments>>}{}{0}{2}	
\KUDescription{SE}{ToolsandEnvironments}{<<~>>}	
\KUItem{SE}{ToolsandEnvironments}{Core-Tier2}{Software}{}{<<Software configuration management and version control>>}	\LO{SE}{ToolsandEnvironments}{Core-Tier2}{Familiarity}{DescribeTheCentralized}{<<Describir la diferencia entre el manejo de configuración de software centralizado y distribuido.>>}
\KUItem{SE}{ToolsandEnvironments}{Core-Tier2}{Release}{}{<<Release management >>}	\LO{SE}{ToolsandEnvironments}{Core-Tier2}{Familiarity}{DescribeHowCanToSoftware}{<<Describir como el control de versión puede ser usado para ayudar a manejar la administración de versiones del software.>>}
\KUItem{SE}{ToolsandEnvironments}{Core-Tier2}{Requierements}{}{<<Requierements analysis and desing modeling tools>>}	\LO{SE}{ToolsandEnvironments}{Core-Tier2}{Usage}{IdentifyConfiguration}{<<Identificar elementos de configuración y usar herramientas de control de código fuente en un equipo de un proyecto pequeño.>>}
\KUItem{SE}{ToolsandEnvironments}{Core-Tier2}{Testing}{}{<<Testing tools including static and dynamic analysis tools >>}	\LO{SE}{ToolsandEnvironments}{Core-Tier2}{Familiarity}{DescribeHowAnd}{<<Describir cómo la disponibilidad de herramientas de pruebas estática y dinámica se puede integrar en el entorno de desarrollo de software.>>}
"\KUItem{SE}{ToolsandEnvironments}{Core-Tier2}{Programming}{}{<<Programming enviroments that automate parts of program construction pocesses (e.g., automated builds)
\begin{subtopics}
\item Continuous integration
\end{subtopics}>>}"	\LO{SE}{ToolsandEnvironments}{Core-Tier2}{Familiarity}{DescribeTheAre}{<<Describir los aspectos que son importantes en la selección de un conjunto de herramientas para el desarrollo de un sistema de software en particular, incluyendo herramientas para el seguimiento de los requisitos, modelado de diseño, implementación, construcción automática y pruebas.>>}
\KUItem{SE}{ToolsandEnvironments}{Core-Tier2}{Tool}{}{<<Tool integration concepts and mechanisms>>}	\LO{SE}{ToolsandEnvironments}{Core-Tier2}{Usage}{DemonstrateTheUse}{<<Demostrar la capacidad de utilizar herramientas de software para apoyar el desarrollo de un producto de software de tamaño medio.>>}
	
\KU{SE}{RequirementsEngineering}{<<Requirements Engineering>>}{}{1}{3}	
"\KUDescription{SE}{RequirementsEngineering}{<<The purpose of requirements engineering is to develop a common understanding of the needs, priorities, and constraints relevant to a software system. Many software failures arise from an incomplete understanding of requirements for the software to be developed or inadequate management of those requirements.

Specifications of requirements range in formality from completely informal (e.g., spoken) to rigorously mathematical (e.g., written in a formal specification language such as Z or first-order logic). In practice, successful software engineering efforts use requirements specifications to reduce ambiguity and improve the consistency and completeness of the development team’s understanding of the vision of the intended software. Plan-driven approaches tend to produce formal documents with numbered requirements. Agile approaches tend to favor less formal specifications that include user stories, use cases, and test cases. >>}"	
\KUItem{SE}{RequirementsEngineering}{Core-Tier1}{Describing}{}{<<Describing functional requirements using, for example, use cases or users stories>>}	\LO{SE}{RequirementsEngineering}{Core-Tier1}{Familiarity}{ListTheOfCase}{<<Enumerar los componentes clave de un caso de uso o una descripción similar de algún comportamiento que es requerido para un sistema.>>}
\KUItem{SE}{RequirementsEngineering}{Core-Tier1}{Properties}{}{<<Properties of requirements including consistency, validity, completeness, and feasibility>>}	\LO{SE}{RequirementsEngineering}{Core-Tier1}{Familiarity}{DescribeHowEngineering}{<<Describir cómo el proceso de ingeniería de requisitos apoya la obtención y validación de los requisitos de comportamiento.>>}
\KUItem{SE}{RequirementsEngineering}{Core-Tier2}{SoftwareRequirements}{}{<<Software requirements elicitation>>}	\LO{SE}{RequirementsEngineering}{Core-Tier1}{Familiarity}{Interpret}{<<Interpretar un modelo de requisitos dada por un sistema de software simple.>>}
\KUItem{SE}{RequirementsEngineering}{Core-Tier2}{DescribingSystem}{}{<<Describing system data using, for example, class diagrams or entity-relationship diagrams>>}	\LO{SE}{RequirementsEngineering}{Core-Tier2}{Familiarity}{DescribeTheOfTechniques}{<<Describir los retos fundamentales y técnicas comunes que se utilizan para la obtención de requisitos.>>}
\KUItem{SE}{RequirementsEngineering}{Core-Tier2}{Non}{IASSecureSoftwareEngineering,IASSecureSoftwareEngineering}{<<Non functional requirements and their relationship to software quality>>}	\LO{SE}{RequirementsEngineering}{Core-Tier2}{Familiarity}{ListTheOfModel}{<<Enumerar los componentes clave de un modelo de datos (por ejemplo, diagramas de clases o diagramas ER).>>}
\KUItem{SE}{RequirementsEngineering}{Core-Tier2}{Evaluation}{}{<<Evaluation and use of requirements specifications>>}	\LO{SE}{RequirementsEngineering}{Core-Tier2}{Usage}{IdentifyBoth}{<<Identificar los requisitos funcionales y no funcionales en una especificación de requisitos dada por un sistema de software.>>}
\KUItem{SE}{RequirementsEngineering}{Elective}{Requirements}{}{<<Requirements analysis modeling techniques>>}	\LO{SE}{RequirementsEngineering}{Core-Tier2}{Usage}{ConductAA}{<<Realizar una revisión de un conjunto de requisitos de software para determinar la calidad de los requisitos con respecto a las características de los buenos requisitos.>>}
\KUItem{SE}{RequirementsEngineering}{Elective}{Acceptability}{}{<<Acceptability of certainty / uncertainty considerations regarding software / system behavior>>}	\LO{SE}{RequirementsEngineering}{Elective}{Usage}{ApplyKey}{<<Aplicar elementos clave y métodos comunes para la obtención y el análisis para producir un conjunto de requisitos de software para un sistema de software de tamaño medio.>>}
\KUItem{SE}{RequirementsEngineering}{Elective}{Prototyping}{}{<<Prototyping>>}	\LO{SE}{RequirementsEngineering}{Elective}{Familiarity}{CompareTheAnd}{<<Comparar los métodos ágiles y el dirigido por planes para la especificación y validación de requisitos y describir los beneficios y riesgos asociados con cada uno.>>}
\KUItem{SE}{RequirementsEngineering}{Elective}{Basic}{}{<<Basic concepts of formal requirements specification>>}	\LO{SE}{RequirementsEngineering}{Elective}{Usage}{UseAFormal}{<<Usar un método común, no formal para modelar y especificar los requisitos para un sistema de software de tamaño medio.>>}
\KUItem{SE}{RequirementsEngineering}{Elective}{RequirementsSpecification}{}{<<Requirements specification>>}	\LO{SE}{RequirementsEngineering}{Elective}{Usage}{TranslateInto}{<<Traducir al lenguaje natural una especificación de requisitos de software (por ejemplo, un contrato de componentes de software) escrito en un lenguaje de especificación formal.>>}
\KUItem{SE}{RequirementsEngineering}{Elective}{RequirementsValidation}{}{<<Requirements validation>>}	\LO{SE}{RequirementsEngineering}{Elective}{Usage}{CreateAA}{<<Crear un prototipo de un sistema de software para reducir el riesgo en los requisitos.>>}
\KUItem{SE}{RequirementsEngineering}{Elective}{RequirementsTracing}{}{<<Requirements tracing>>}	\LO{SE}{RequirementsEngineering}{Elective}{Familiarity}{DifferentiateBetweenBackward}{<<Diferenciar entre el rastreo ({\it tracing}) hacia adelante y hacia atrás y explicar su papel en el proceso de validación de requisitos.>>}
	
\KU{SE}{SoftwareDesign}{<<Software Design>>}{}{3}{5}	
\KUDescription{SE}{SoftwareDesign}{<<~>>}	
\KUItem{SE}{SoftwareDesign}{Core-Tier1}{System}{}{<<System design principles: levels of abstraction (architectural design and detailed design), separation of concerns, information hiding, coupling and cohesion , re-use of standard structures>>}	\LO{SE}{SoftwareDesign}{Core-Tier1}{Familiarity}{ArticulateDesign}{<<Formular los principios de diseño, incluyendo la separación de problemas, ocultación de información, acoplamiento y cohesión, y la encapsulación.>>}
\KUItem{SE}{SoftwareDesign}{Core-Tier1}{Design}{}{<<Design Paradigms such as structured design (top-down functional decomposition), object-oriented analysis and design, event driven design, component-level design, data-structured centered, aspect oriented, function oriented, service oriented>>}	\LO{SE}{SoftwareDesign}{Core-Tier1}{Usage}{UseAToSimple}{<<Usar un paradigma de diseño para diseñar un sistema de software básico y explicar cómo los principios de diseño del sistema se han aplicado en este diseño.>>}
\KUItem{SE}{SoftwareDesign}{Core-Tier1}{Structural}{}{<<Structural and behavioral models of software designs>>}	\LO{SE}{SoftwareDesign}{Core-Tier1}{Usage}{ConstructModels}{<<Construir modelos del diseño de un sistema de software simple los cuales son apropiado para el paradigma utilizado para diseñarlo.>>}
\KUItem{SE}{SoftwareDesign}{Core-Tier1}{DesignPatterns}{}{<<Design patterns>>}	\LO{SE}{SoftwareDesign}{Core-Tier1}{Familiarity}{Within}{<<En el contexto de un paradigma de diseño simple, describir uno o más patrones de diseño que podrían ser aplicables al diseño de un sistema de software simple.>>}
\KUItem{SE}{SoftwareDesign}{Core-Tier2}{Relationships}{}{<<Relationships between requirements and designs: transformation of models, design of contracts, invariants>>}	\LO{SE}{SoftwareDesign}{Core-Tier2}{Usage}{ForASuitable}{<<Para un sistema simple adecuado para una situación dada, discutir y seleccionar un paradigma de diseño apropiado.>>}
\KUItem{SE}{SoftwareDesign}{Core-Tier2}{Software}{}{<<Software architecture concepts and standard architectures (e.g. client-server, n-layer, transform centered, pipes-and-filters)>>}	\LO{SE}{SoftwareDesign}{Core-Tier2}{Usage}{CreateAppropriate}{<<Crear modelos apropiados para la estructura y el comportamiento de los productos de software desde la especificaciones de requisitos.>>}
\KUItem{SE}{SoftwareDesign}{Core-Tier2}{The}{}{<<The use of component desing: component selection, design, adaptation and assembly of components, component and patterns, components and objects (for example, building a GUI using a standar widget set)>>}	\LO{SE}{SoftwareDesign}{Core-Tier2}{Assessment}{ExplainTheTheA}{<<Explicar las relaciones entre los requisitos para un producto de software y su diseño, utilizando los modelos apropiados.>>}
\KUItem{SE}{SoftwareDesign}{Core-Tier2}{Internal}{}{<<Refactoring designs using design patterns>>}	\LO{SE}{SoftwareDesign}{Core-Tier2}{Familiarity}{ForThe}{<<Para el diseño de un sistema de software simple dentro del contexto de un único paradigma de diseño, describir la arquitectura de software de ese sistema.>>}
\KUItem{SE}{SoftwareDesign}{Elective}{InternalDesign}{}{<<Internal design qualities, and models for them: efficiency and performance, redundacy and fault tolerance, traceability of requeriments>>}	\LO{SE}{SoftwareDesign}{Core-Tier2}{Familiarity}{Given}{<<Dado un diseño de alto nivel, identificar la arquitectura de software mediante la diferenciación entre las arquitecturas comunes de software, tales como 3 capas ({\it 3-tier}), {\it pipe-and-filter}, y cliente-servidor.>>}
\KUItem{SE}{SoftwareDesign}{Elective}{Measurement}{}{<<Measurement and analysis of design quality>>}	\LO{SE}{SoftwareDesign}{Core-Tier2}{Assessment}{InvestigateThe}{<<Investigar el impacto de la selección arquitecturas de software en el diseño de un sistema simple.>>}
\KUItem{SE}{SoftwareDesign}{Elective}{Tradeoffs}{}{<<Tradeoffs between different aspects of quality>>}	\LO{SE}{SoftwareDesign}{Core-Tier2}{Usage}{ApplySimple}{<<Aplicar ejemplos simples de patrones en un diseño de software.>>}
\KUItem{SE}{SoftwareDesign}{Elective}{Application}{}{<<Application frameworks>>}	\LO{SE}{SoftwareDesign}{Core-Tier2}{Familiarity}{DescribeARefactoring}{<<Describir una manera de refactorar y discutir cuando esto debe ser aplicado.>>}
\KUItem{SE}{SoftwareDesign}{Elective}{Middleware}{}{<<Middleware: the object-oriented paradigm within middleware, object request brokers and marshalling, transaction processing monitors, workflow systems>>}	\LO{SE}{SoftwareDesign}{Core-Tier2}{Usage}{SelectSuitable}{<<Seleccionar componentes adecuados para el uso en un diseño de un producto de software.>>}
"\KUItem{SE}{SoftwareDesign}{Elective}{Principles}{IASPrinciplesofSecureDesign,IASPrinciplesofSecureDesign}{<<Principles  of secure design and coding
\begin{subtopics}
\item Principle of least privilege
\item Principle of fail-safe defaults
\item Principle of psychological acceptability
\end{subtopics}>>}"	\LO{SE}{SoftwareDesign}{Core-Tier2}{Familiarity}{ExplainHowMight}{<<Explicar cómo los componentes deben ser adaptados para ser usados en el diseño de un producto de software.>>}
	\LO{SE}{SoftwareDesign}{Core-Tier2}{Usage}{DesignAA}{<<Diseñar un contrato para un típico componente de software pequeño para el uso de un dado sistema.>>}
	\LO{SE}{SoftwareDesign}{Elective}{Usage}{DiscussAnd}{<<Discutir y seleccionar la arquitectura de software adecuada para un sistema de software simple para un dado escenario.>>}
	\LO{SE}{SoftwareDesign}{Elective}{Usage}{ApplyModels}{<<Aplicar modelos de cualidades internas y externas en el diseño de componentes de software para lograr un equilibrio aceptable entre los aspectos de calidad en conflictos.>>}
	\LO{SE}{SoftwareDesign}{Elective}{Assessment}{AnalyzeAFrom}{<<Analizar un diseño de software desde la perspectiva de un atributo significativo de la calidad interna.>>}
	\LO{SE}{SoftwareDesign}{Elective}{Assessment}{AnalyzeAFromOf}{<<Analizar un diseño de software desde la perspectiva de un atributo significativo de calidad externa.>>}
	\LO{SE}{SoftwareDesign}{Elective}{Familiarity}{ExplainTheObjects}{<<Explicar el papel de los objetos en los sistemas de middleware y la relación con los componentes.>>}
	\LO{SE}{SoftwareDesign}{Elective}{Usage}{ApplyComponent}{<<Aplicar métodos orientado a componentes para el diseño de una amplia gama de software, tales como el uso de componentes para la concurrencia y transacciones, para los servicios de comunicación confiables, para la interacción con la base de datos que incluye los servicios de consulta remota y gestión de bases de datos, o para la comunicación segura y el acceso.>>}
	\LO{SE}{SoftwareDesign}{Elective}{Usage}{RefactorAn}{<<Refactorizar una implementación de software existente para mejorar algún aspecto de su diseño.>>}
	\LO{SE}{SoftwareDesign}{Elective}{Familiarity}{StateAnd}{<<Determinar y aplicar los principios de mínimo privilegio y defectos-a prueba de errores.>>}
	
\KU{SE}{SoftwareConstruction}{<<Software Construction>>}{}{0}{2}	
\KUDescription{SE}{SoftwareConstruction}{<<~>>}	
"\KUItem{SE}{SoftwareConstruction}{Core-Tier2}{Coding}{IASDefensiveProgramming,SDFDevelopmentMethods,IASDefensiveProgramming,SDFDevelopmentMethods}{<<Coding practices: techniques, idioms/patterns, mechanisms for building quality programs
\begin{subtopics}
\item Defensive coding practices
\item Secure coding practices
\item Using exception handling mechanisms to make programs more robust, fault-tolerant
\end{subtopics}>>}"	\LO{SE}{SoftwareConstruction}{Core-Tier2}{Familiarity}{DescribeTechniques}{<<Describir técnicas, lenguajes de codificación y mecanismos de implementación para conseguir las propiedades deseadas, tales como la confiabilidad, la eficiencia y la robustez.>>}
\KUItem{SE}{SoftwareConstruction}{Core-Tier2}{CodingStandards}{}{<<Coding standards>>}	\LO{SE}{SoftwareConstruction}{Core-Tier2}{Usage}{Build}{<<Construir código robusto utilizando los mecanismos de manejo de excepciones.>>}
\KUItem{SE}{SoftwareConstruction}{Core-Tier2}{Integration}{}{<<Integration strategies>>}	\LO{SE}{SoftwareConstruction}{Core-Tier2}{Familiarity}{DescribeSecure}{<<Describir la codificación segura y prácticas de codificación de defensa.>>}
"\KUItem{SE}{SoftwareConstruction}{Core-Tier2}{Development}{}{<<Development context: “green field” vs. existing code base
\begin{subtopics}
\item Change impact analysis
\item Change actualization
\end{subtopics}>>}"	\LO{SE}{SoftwareConstruction}{Core-Tier2}{Usage}{SelectAndDefined}{<<Seleccionar y utilizar un estándar de codificación definido en un pequeño proyecto de software.>>}
"\KUItem{SE}{SoftwareConstruction}{Elective}{Potential}{}{<<Potential security problems in programs
\begin{subtopics}
\item Buffer and other types of overflows
\item Race conditions
\item Improper initialization, including choice of privileges
\item Checking input
\item Assuming success and correctness
\item Validating assumptions
\end{subtopics}>>}"	\LO{SE}{SoftwareConstruction}{Core-Tier2}{Familiarity}{CompareAndStrategies}{<<Comparar y contrastar las estrategias de integración incluyendo: de arriba hacia abajo ({\it top-down}), de abajo hacia arriba ({\it bottom-up}), y la integración Sándwich.>>}
	\LO{SE}{SoftwareConstruction}{Core-Tier2}{Familiarity}{DescribeTheAnalyzing}{<<Describir el proceso de analizar e implementar los cambios a la base de código desarrollado para un proyecto específico.>>}
	\LO{SE}{SoftwareConstruction}{Core-Tier2}{Familiarity}{DescribeTheAnalyzingChanges}{<<Describir el proceso de analizar e implementar los cambios a una gran base de código existente.>>}
	\LO{SE}{SoftwareConstruction}{Elective}{Usage}{Rewrite}{<<Reescribir un programa sencillo para eliminar vulnerabilidades comunes, tales como desbordamientos de búffer, desbordamientos de enteros y condiciones de carrera.>>}
	\LO{SE}{SoftwareConstruction}{Elective}{Usage}{WriteAThatNon}{<<Escribir un componente de software que realiza alguna tarea no trivial y es resistente a errores en la entrada y en tiempo de ejecución.>>}
	
\KU{SE}{SoftwareVerificationandValidation}{<<Software Verification and Validation>>}{}{0}{3}	
\KUDescription{SE}{SoftwareVerificationandValidation}{<<~>>}	
\KUItem{SE}{SoftwareVerificationandValidation}{Core-Tier2}{Verification}{}{<<Verification and validation concepts>>}	\LO{SE}{SoftwareVerificationandValidation}{Core-Tier2}{Familiarity}{DistinguishBetween}{<<Distinguir entre la validación y verificación del programa.>>}
\KUItem{SE}{SoftwareVerificationandValidation}{Core-Tier2}{Inspections}{}{<<Inspections, reviews, audits>>}	\LO{SE}{SoftwareVerificationandValidation}{Core-Tier2}{Familiarity}{DescribeTheTools}{<<Describir el papel que las herramientas pueden desempeñar en la validación de software.>>}
\KUItem{SE}{SoftwareVerificationandValidation}{Core-Tier2}{Testing}{IASSecureSoftwareEngineering,IASSecureSoftwareEngineering}{<<Testing types, including human computer interface, usability, reliability, security, conformance to specification>>}	\LO{SE}{SoftwareVerificationandValidation}{Core-Tier2}{Usage}{Undertake}{<<Realizar, como parte de una actividad de equipo, una inspección de un segmento de código de tamaño medio.>>}
"\KUItem{SE}{SoftwareVerificationandValidation}{Core-Tier2}{TestingFundamentals}{SDFDevelopmentMethods,SDFDevelopmentMethods}{<<Testing fundamentals
\begin{subtopics}
\item Unit, integration, validation, and system testing
\item Test plan creation and test case generation
\item Black-box and white-box testing techniques
\item Regression testing and test automation
\end{subtopics}>>}"	\LO{SE}{SoftwareVerificationandValidation}{Core-Tier2}{Familiarity}{DescribeAnd}{<<Describir y distinguir entre diferentes tipos y niveles de pruebas (unitaria, integracion, sistemas y aceptacion)>>}
\KUItem{SE}{SoftwareVerificationandValidation}{Core-Tier2}{Defect}{}{<<Defect tracking>>}	\LO{SE}{SoftwareVerificationandValidation}{Core-Tier2}{Familiarity}{DescribeTechniquesSignificant}{<<Describir tecnicas para identificar casos de prueba representativos para integracion, regresion y pruebas del sistema.>>}
\KUItem{SE}{SoftwareVerificationandValidation}{Core-Tier2}{Limitations}{}{<<Limitations of testing in particular domains, such as parallel or safety-critical systems>>}	\LO{SE}{SoftwareVerificationandValidation}{Core-Tier2}{Usage}{CreateAndSet}{<<Crear y documentar un conjunto de pruebas para un segmento de código de mediano tamaño.>>}
\KUItem{SE}{SoftwareVerificationandValidation}{Elective}{Static}{}{<<Static approaches and dynamic approaches to verification>>}	\LO{SE}{SoftwareVerificationandValidation}{Core-Tier2}{Familiarity}{DescribeHowGood}{<<Describir cómo seleccionar buenas pruebas de regresión y automatizarlas.>>}
\KUItem{SE}{SoftwareVerificationandValidation}{Elective}{Test}{}{<<Test-driven development>>}	\LO{SE}{SoftwareVerificationandValidation}{Core-Tier2}{Usage}{UseAToolSoftware}{<<Utilizar una herramienta de seguimiento de defectos para manejar defectos de software en un pequeño proyecto de software.>>}
\KUItem{SE}{SoftwareVerificationandValidation}{Elective}{Validation}{}{<<Validation planning; documentation for validation>>}	\LO{SE}{SoftwareVerificationandValidation}{Core-Tier2}{Familiarity}{DiscussTheTesting}{<<Discutir las limitaciones de las pruebas en un dominio particular.>>}
\KUItem{SE}{SoftwareVerificationandValidation}{Elective}{Object}{}{<<Object-oriented testing; systems testing>>}	\LO{SE}{SoftwareVerificationandValidation}{Elective}{Usage}{EvaluateAFor}{<<Evaluar un banco de pruebas ({\it a test suite}) para un segmento de código de tamaño medio.>>}
\KUItem{SE}{SoftwareVerificationandValidation}{Elective}{VerificationAnd}{}{<<Verification and validation of non-code artifacts (documentation, help files, training materials)>>}	\LO{SE}{SoftwareVerificationandValidation}{Elective}{Familiarity}{CompareStatic}{<<Comparar los enfoques estáticos y dinámicos para la verificación.>>}
\KUItem{SE}{SoftwareVerificationandValidation}{Elective}{Fault}{}{<<Fault logging, fault tracking and technical support for such activities>>}	\LO{SE}{SoftwareVerificationandValidation}{Elective}{Familiarity}{IdentifyTheOfDevelopment}{<<Identificar los principios fundamentales de los métodos de desarrollo basado en pruebas y explicar el papel de las pruebas automatizadas en estos métodos.>>}
\KUItem{SE}{SoftwareVerificationandValidation}{Elective}{FaultEstimation}{}{<<Fault estimation and testing termination including defect seeding>>}	\LO{SE}{SoftwareVerificationandValidation}{Elective}{Usage}{DiscussTheThe}{<<Discutir los temas relacionados con las pruebas de software orientado a objetos.>>}
	\LO{SE}{SoftwareVerificationandValidation}{Elective}{Familiarity}{DescribeTechniquesVerification}{<<Describir las técnicas para la verificación y validación de los artefactos de no código.>>}
	\LO{SE}{SoftwareVerificationandValidation}{Elective}{Familiarity}{DescribeApproachesEstimation}{<<Describir los enfoques para la estimación de fallos.>>}
	\LO{SE}{SoftwareVerificationandValidation}{Elective}{Usage}{EstimateThe}{<<Estimar el número de fallos en una pequeña aplicación de software basada en la densidad de defectos y siembra  de errores.>>}
	\LO{SE}{SoftwareVerificationandValidation}{Elective}{Usage}{ConductAn}{<<Realizar una inspección o revisión del de código fuente de un software para un proyecto de software de tamaño pequeño o mediano.>>}
	
\KU{SE}{SoftwareEvolution}{<<Software Evolution>>}{}{0}{2}	
\KUDescription{SE}{SoftwareEvolution}{<<~>>}	
"\KUItem{SE}{SoftwareEvolution}{Core-Tier2}{Software}{}{<<Software development in the context of large, pre-existing code bases
\begin{subtopics}
\item Software change
\item Concerns and concernlocation 
\item Refactoring
\end{subtopics}>>}"	\LO{SE}{SoftwareEvolution}{Core-Tier2}{Familiarity}{IdentifyTheAssociatedEvolution}{<<Identificar los problemas principales asociados con la evolución del software y explicar su impacto en el ciclo de vida del software.>>}
\KUItem{SE}{SoftwareEvolution}{Core-Tier2}{SoftwareEvolution}{}{<<Software evolution>>}	\LO{SE}{SoftwareEvolution}{Core-Tier2}{Usage}{EstimateTheA}{<<Estimar el impacto del cambio de requerimientos en productos existentes de tamaño medio.>>}
\KUItem{SE}{SoftwareEvolution}{Core-Tier2}{Characteristics}{}{<<Characteristics of maintainable software>>}	\LO{SE}{SoftwareEvolution}{Core-Tier2}{Usage}{UseRefactoring}{<<Usar refactorización en el proceso de modificación de un componente de sosftware.>>}
\KUItem{SE}{SoftwareEvolution}{Core-Tier2}{Reengineering}{}{<<Reengineering systems>>}	\LO{SE}{SoftwareEvolution}{Core-Tier2}{Familiarity}{DiscussTheEvolving}{<<Estudiar los desafios de mejorar sistemas en un entorno cambiante.>>}
"\KUItem{SE}{SoftwareEvolution}{Core-Tier2}{SoftwareReuse}{}{<<Software reuse
\begin{subtopics}
\item Code segments
\item Libraries and frameworks
\item Components
\item Product lines
\end{subtopics}>>}"	\LO{SE}{SoftwareEvolution}{Core-Tier2}{Familiarity}{OutlineTheRegression}{<<Perfilar los procesos de pruebas de regresión y su rol en el manejo de versiones.>>}
	\LO{SE}{SoftwareEvolution}{Core-Tier2}{Familiarity}{DiscussTheDisadvantagesTypes}{<<Estudiar las ventajas y desventajas de diferentes tipos de niveles de confiabilidad.>>}
	
\KU{SE}{SoftwareReliability}{<<Software Reliability>>}{}{0}{1}	
\KUDescription{SE}{SoftwareReliability}{<<~>>}	
\KUItem{SE}{SoftwareReliability}{Core-Tier2}{SoftwareReliability}{}{<<Software reliability engineering concepts>>}	\LO{SE}{SoftwareReliability}{Core-Tier2}{Familiarity}{ExplainTheExist}{<<Estudiar los problemas que existe en lograr niveles muy altos de confiabilidad.>>}
\KUItem{SE}{SoftwareReliability}{Core-Tier2}{SoftwareReliabilitySystem}{SFReliabilitythroughRedundancy,SFReliabilitythroughRedundancy}{<<Software reliability, system reliability and failure behavior>>}	\LO{SE}{SoftwareReliability}{Core-Tier2}{Familiarity}{DescribeHowContributes}{<<Describir como el software confiable contribuye a la confiabilidad del sistema.>>}
\KUItem{SE}{SoftwareReliability}{Core-Tier2}{Fault}{}{<<Fault lifecycle concepts and techniques>>}	\LO{SE}{SoftwareReliability}{Core-Tier2}{Familiarity}{ListApproaches}{<<Listar los enfoques para minimizar fallas que pueden ser aplicadas en cada etapa de el ciclo de vida del software.>>}
\KUItem{SE}{SoftwareReliability}{Elective}{SoftwareReliabilityModels}{}{<<Software reliability models>>}	\LO{SE}{SoftwareReliability}{Elective}{Familiarity}{CompareTheThree}{<<Comparar las caracteristicas de los tres diferentes métodos de modelización confiable.>>}
\KUItem{SE}{SoftwareReliability}{Elective}{SoftwareFault}{}{<<Software fault tolerance techniques and models>>}	\LO{SE}{SoftwareReliability}{Elective}{Usage}{DemonstrateTheApply}{<<Demostrar la capacidad de aplicar multiples métodos para desarrollar estimaciones confiables para un sistema de software.>>}
\KUItem{SE}{SoftwareReliability}{Elective}{SoftwareReliabilityEngineering}{}{<<Software reliability engineering practices>>}	\LO{SE}{SoftwareReliability}{Elective}{Usage}{IdentifyMethods}{<<Identificar métodos que conduzcan a la realización de una arquitectura de software que permita alcanzar un nivel especifico de fiabilidad.>>}
\KUItem{SE}{SoftwareReliability}{Elective}{Measurement}{}{<<Measurement-based analysis of software reliability>>}	\LO{SE}{SoftwareReliability}{Elective}{Usage}{IdentifyWaysRedundancy}{<<Identificar formas de aplicar la redundancia para lograr tolerancia a fallos para una aplicación de tamaño medio.>>}
	
\KU{SE}{FormalMethods}{<<Formal Methods>>}{}{0}{0}	
\KUDescription{SE}{FormalMethods}{<<~>>}	
\KUDescription{SE}{FormalMethods}{<<The topics listed below have a strong dependency on core material from the Discrete Structures (DS) Knowledge Area, particularly knowledge units DS/Functions Relationsand Sets, DS/Basic Logic and DS/Proof Techniques. >>}	
\KUItem{SE}{FormalMethods}{Elective}{Role}{}{<<Role of formal specification and analysis techniques in the software development cycle>>}	\LO{SE}{FormalMethods}{Elective}{Familiarity}{DescribeTheSpecification}{<<Describir la especificación formal del rol y técnicas de análisis que pueden jugar en el desarrollo de software complejo y comparar su uso como técnicas de validación y verificación con pruebas.>>}
\KUItem{SE}{FormalMethods}{Elective}{Program}{}{<<Program assertion languages and analysis approaches (including languages for writing and analyzing pre- and post-conditions, such as OCL, JML)>>}	\LO{SE}{FormalMethods}{Elective}{Usage}{ApplyFormalAnalysis}{<<Aplicar especificación formal y técnicas de análisis para diseños de software y programas con baja complejidad.>>}
"\KUItem{SE}{FormalMethods}{Elective}{Formal}{}{<<Formal approaches to software modeling and analysis
\begin{subtopics}
\item Model checkers
\item Model finders
\end{subtopics}>>}"	\LO{SE}{FormalMethods}{Elective}{Familiarity}{ExplainTheAndUsing}{<<Explicar los beneficios potenciales y desventajas de usar lenguajes de especificación formal.>>}
\KUItem{SE}{FormalMethods}{Elective}{Tools}{}{<<Tools in support of formal methods>>}	\LO{SE}{FormalMethods}{Elective}{Usage}{CreateAndAssertions}{<<Crear y evaluar validaciones de programa para una variedad de comportamientos que van desde lo simple hasta lo complejo.>>}
	\LO{SE}{FormalMethods}{Elective}{Usage}{UsingA}{<<Usando un lenguaje de especificación formal, formular la especificación de un sistema de software simple y derivar ejemplos de casos de prueba a partir de la especificación.>>}
	
\KA{SF}{<<Fundamentos de Sistemas>>}{}	
\KADescription{SF}{<<The underlying hardware and software infrastructure upon which applications are constructed is collectively described by the term "computer systems." Computer systems broadly span the subdisciplines of operating systems, parallel and distributed systems, communications networks, and computer architecture. Traditionally, these areas are taught in a non-integrated way through independent courses. However these sub-disciplines increasingly share important common fundamental concepts within their respective cores. These concepts include computational paradigms, parallelism, cross-layer communications, state and state transition, resource allocation and scheduling, and so on. The Systems Fundamentals Knowledge Area is designed to present an integrative view of these fundamental concepts in a unified albeit simplified fashion, providing a common foundation for the different specialized mechanisms and policies appropriate to the particular domain area.>>}	
	
\KU{SF}{ComputationalParadigms}{<<Computational Paradigms>>}{}{3}{0}	
\KUDescription{SF}{ComputationalParadigms}{<<The view presented here is the multiple representations of a system across layers, from hardware building blocks to application components, and the parallelism available in each representation.>>}	
"\KUItem{SF}{ComputationalParadigms}{Core-Tier1}{Basic}{}{<<Basic building blocks and components of a computer (gates, flip-flops, registers, interconnections; 
Datapath + Control + Memory)>>}"	\LO{SF}{ComputationalParadigms}{Core-Tier1}{Familiarity}{ListCommonly}{<<Enumerar los patrones comúnmente encontrados de cómo los cálculos son organizados.>>}
"\KUItem{SF}{ComputationalParadigms}{Core-Tier1}{Hardware}{}{<<Hardware as a computational paradigm: Fundamental logic building blocks; Logic expressions, 
minimization, sum of product forms>>}"	\LO{SF}{ComputationalParadigms}{Core-Tier1}{Familiarity}{DescribeTheBlocks}{<<Describir los bloques de construcción básicos de las computadoras y su rol en desarrollo histórico de la arquitectura del computador. >>}
\KUItem{SF}{ComputationalParadigms}{Core-Tier1}{Application}{}{<<Application-level sequential processing: single thread >>}	\LO{SF}{ComputationalParadigms}{Core-Tier1}{Familiarity}{ArticulateTheSingle}{<<Articular las diferencias entre un solo thread contra múltiples threads, un solo servidor contra modelos de servidores múltiples, motivados por ejemplos del mundo real (recetas de cocina, lineas de múltiples cajeros y parejas).>>}
"\KUItem{SF}{ComputationalParadigms}{Core-Tier1}{Simple}{}{<<Simple application-level parallel processing: request level (web services/client-server/distributed), single 
thread per server, multiple threads with multiple servers >>}"	\LO{SF}{ComputationalParadigms}{Core-Tier1}{Familiarity}{ArticulateTheStrong}{<<Articular el concepto de escalabilidad fuerte y débil, es decir, cómo el rendimiento se ve afectado por la escala del problema contra escala de los recursos para resolver el problema. Esto puede ser motivado por lo simple, ejemplos en el mundo real.>>}
\KUItem{SF}{ComputationalParadigms}{Core-Tier1}{BasicConcept}{}{<<Basic concept of pipelining, overlapped processing stages.>>}	\LO{SF}{ComputationalParadigms}{Core-Tier1}{Usage}{DesignACircuit}{<<Diseñar un circuito lógico simple usando los bloques de construcción fundamental del diseño lógico.>>}
\KUItem{SF}{ComputationalParadigms}{Core-Tier1}{BasicConceptOf}{}{<< Basic concept of scaling: going faster vs. handling larger problems >>}	\LO{SF}{ComputationalParadigms}{Core-Tier1}{Usage}{UseTools}{<<Usar herramientas para la captura, síntesis, y la simulación para evaluar un diseño lógico.>>}
	\LO{SF}{ComputationalParadigms}{Core-Tier1}{Usage}{WriteAProblem}{<<Escribir problema secuencial simple y una versión paralela simple de un mismo programa.>>}
	\LO{SF}{ComputationalParadigms}{Core-Tier1}{Assessment}{EvaluatePerformance}{<<Evaluar el desempeño de las versiones simples secuenciales y paralelas de un programa con diferentes tamaños de problemas, y ser capaz de describir los planos de velocidad obtenidos.>>}
	
\KU{SF}{CrossLayerCommunications}{<<Cross-Layer Communications>>}{NCIntroduction,OSOperatingSystemPrinciples,NCIntroduction,OSOperatingSystemPrinciples}{3}{0}	
\KUDescription{SF}{CrossLayerCommunications}{<<~>>}	
\KUItem{SF}{CrossLayerCommunications}{Core-Tier1}{Programming}{}{<<Programming abstractions, interfaces, use of libraries >>}	\LO{SF}{CrossLayerCommunications}{Core-Tier1}{Familiarity}{DescribeHowAreLayers}{<<Describir cómo los sistemas computacionales están construídos con capas sobre capas basada en la separación de los problemas, con interfaces bien definidas, ocultando los detalles de las capas bajas a las capas superiores>>}
"\KUItem{SF}{CrossLayerCommunications}{Core-Tier1}{Distinction}{}{<<
Distinction between Application and OS services, Remote Procedure Call 
>>}"	\LO{SF}{CrossLayerCommunications}{Core-Tier1}{Familiarity}{DescribeThat}{<<Describir que el hardware, VM, OS, aplicación son capas adicional interpretación/procesamiento>>}
"\KUItem{SF}{CrossLayerCommunications}{Core-Tier1}{ApplicationVirtual}{}{<<Application-Virtual Machine Interaction 
>>}"	\LO{SF}{CrossLayerCommunications}{Core-Tier1}{Familiarity}{DescribeTheHow}{<<Describir los mecanismos de como los errores se detectan, nos notificados hacia atrás y se manejan a través de capas>>}
\KUItem{SF}{CrossLayerCommunications}{Core-Tier1}{Reliability}{}{<<Reliability>>}	\LO{SF}{CrossLayerCommunications}{Core-Tier1}{Usage}{ConstructAUsing}{<<Construir un programa simple utilizando métodos de capas, la detección y recuperación de errores, y reflexión de la condición de error a través de capas.>>}
	\LO{SF}{CrossLayerCommunications}{Core-Tier1}{Usage}{Find}{<<Encontrar {\it bugs} en un programa multi capas a través de la utilización de programas de rastreo, paso a paso y depuración {\it debugging}>>}
	
\KU{SF}{StateandStateMachines}{<<State and State Machines>>}{ALBasicComputability,ALComplexity,OSStateandStateDiagrams,NCProtocols,ALBasicComputability,ALComplexity,OSStateandStateDiagrams,NCProtocols}{6}{0}	
\KUDescription{SF}{StateandStateMachines}{<<~>>}	
"\KUItem{SF}{StateandStateMachines}{Core-Tier1}{Digital}{}{<<Digital vs Analog and Discrete vs Continuous Systems 
>>}"	\LO{SF}{StateandStateMachines}{Core-Tier1}{Familiarity}{DescribeComputations}{<<Describir los cálculos como un sistema que se caracteriza por un conjunto conocido de configuraciones con las transiciones de una configuración (estado) a otra (estado).>>}
\KUItem{SF}{StateandStateMachines}{Core-Tier1}{Simple}{}{<<Simple logic gates, logical expressions, Boolean logic simplification >>}	\LO{SF}{StateandStateMachines}{Core-Tier1}{Familiarity}{DescribeTheSystems}{<<Describir la distinción entre sistemas cuya salida es sólo una función de su entrada (combinacional) y los que tienen memoria/historia (secuencial)>>}
\KUItem{SF}{StateandStateMachines}{Core-Tier1}{Clocks}{}{<<Clocks, State, Sequencing >>}	\LO{SF}{StateandStateMachines}{Core-Tier1}{Familiarity}{DescribeAA}{<<Describir una computadora como una máquina de estados que interpreta las instrucciones de la máquina>>}
\KUItem{SF}{StateandStateMachines}{Core-Tier1}{Combinational}{}{<<Combinational Logic, Sequential Logic, Registers, Memories >>}	"\LO{SF}{StateandStateMachines}{Core-Tier1}{Familiarity}{ExplainHowOr}{<<Explicar cómo un programa o protocolo de red también se pueden expresar como una 
máquina de estados y que pueden existir representaciones alternativas para el mismo cálculo.>>}"
"\KUItem{SF}{StateandStateMachines}{Core-Tier1}{Computers}{}{<<
Computers and Network Protocols as examples of state machines >>}"	\LO{SF}{StateandStateMachines}{Core-Tier1}{Usage}{DevelopState}{<<Desarrollar descripciones de máquinas de estado para soluciones de problemas de planteamiento simple  (por ejemplo, la secuencia del semáforo, reconocedores de patrones).>>}
	\LO{SF}{StateandStateMachines}{Core-Tier1}{Assessment}{DeriveTime}{<<Deducir el comportamiento de series de tiempo de una máquina de estado a partir de su representación de estados de máquina.>>}
	
\KU{SF}{Parallelism}{<<Parallelism>>}{PDParallelismFundamentals,PDParallelismFundamentals}{1}{0}	
\KUDescription{SF}{Parallelism}{<<~>>}	
\KUItem{SF}{Parallelism}{Core-Tier1}{Sequential}{}{<<Sequential vs parallel processing >>}	\LO{SF}{Parallelism}{Core-Tier1}{Familiarity}{ForADistinguish}{<<Dado un programa, distinguir entre su ejecución secuencial y paralela y las implicaciones en el desempeño de los mismos.>>}
\KUItem{SF}{Parallelism}{Core-Tier1}{Parallel}{}{<<Parallel programming vs. concurrent programming >>}	\LO{SF}{Parallelism}{Core-Tier1}{Familiarity}{DemonstrateOn}{<<Demostrar sobre una linea de tiempo de ejecución que los eventos y operaciones paralelas pueden tomar lugar simultaneamente (al mismo tiempo). Explicar como la carga de trabajo puede ser realizada en menos tiempo si se explora el paralelismo.>>}
\KUItem{SF}{Parallelism}{Core-Tier1}{Request}{}{<<Request parallelism vs. Task parallelism>>}	\LO{SF}{Parallelism}{Core-Tier1}{Familiarity}{ExplainOther}{<<Explicar otros usos del paralelismo, tales como la confiabilidad/redundancia de la ejecución.>>}
\KUItem{SF}{Parallelism}{Core-Tier1}{Client}{}{<<Client-Server/Web Services, Thread (Fork-Join), Pipelining>>}	\LO{SF}{Parallelism}{Core-Tier1}{Familiarity}{DefineTheThe}{<<Definir las diferencias entre los conceptos de Paralelismo a nivel de Instrucción, Paralelismo a nivel de datos, Paralelimos/Multitareas a nivel de hebras, Paralelimos a nivel de Procesos/Peticiones.>>}
\KUItem{SF}{Parallelism}{Core-Tier1}{Multicore}{}{<<Multicore architectures and hardware support for synchronization >>}	\LO{SF}{Parallelism}{Core-Tier1}{Usage}{WriteMore}{<<Escribir mas de un programa en paralelo (por ejemplo, un programa paralelo en mas de un paradigma de programación paralela; un programa paralelo que administre recursos compartidos a través de primitivas de sincronización; un programa paralelo que realiza operaciones simultaneas sobre datos particionados a través de paralelización de tareas/procesos (por ejemplo, busqueda de términos en paralelo; un programa que realiza paso a paso un procesamiento {\it pipeline} a través de paso de mensajes)).>>}
	\LO{SF}{Parallelism}{Core-Tier1}{Assessment}{UsePerformance}{<<Usar herramientas de desempeño para medir el {\it speed-up} alcanzado por un programa paralelo en términos de tamaño de los datos y número de recursos.>>}
	
\KU{SF}{Evaluation}{<<Evaluation>>}{PDParallelPerformance,PDParallelPerformance}{3}{0}	
\KUDescription{SF}{Evaluation}{<<~>>}	
\KUItem{SF}{Evaluation}{Core-Tier1}{Performance}{}{<<Performance figures of merit >>}	\LO{SF}{Evaluation}{Core-Tier1}{Familiarity}{ExplainHowOfContribute}{<<Explique cómo los componentes de la arquitectura del sistema contribuyen a la mejora del rendimiento.>>}
\KUItem{SF}{Evaluation}{Core-Tier1}{Workloads}{}{<<Workloads and representative benchmarks, and methods of collecting and analyzing performance figures of merit>>}	\LO{SF}{Evaluation}{Core-Tier1}{Familiarity}{DescribeAmdahls}{<<Describir la ley de Amdahl y discutir sus limitaciones.>>}
"\KUItem{SF}{Evaluation}{Core-Tier1}{Cpi}{}{<<CPI (Cycles per Instruction) equation as tool for understanding tradeoffs in the design of instruction sets, 
processor pipelines, and memory system organizations.>>}"	\LO{SF}{Evaluation}{Core-Tier1}{Usage}{DesignAndPerformance}{<<Diseñar e implementar un experimento orientado al desempeño.>>}
\KUItem{SF}{Evaluation}{Core-Tier1}{Amdahls}{}{<<Amdahl’s Law: the part of the computation that cannot be sped up limits the effect of the parts that can >>}	\LO{SF}{Evaluation}{Core-Tier1}{Assessment}{UseSoftware}{<<Usar herramientas de software para perfilar y medir el desempeño de un programa.>>}
	
\KU{SF}{ResourceAllocationandScheduling}{<<Resource Allocation and Scheduling>>}{}{0}{2}	
\KUDescription{SF}{ResourceAllocationandScheduling}{<<~>>}	
\KUItem{SF}{ResourceAllocationandScheduling}{Core-Tier2}{Kinds}{}{<<Kinds of resources (e.g., processor share, memory, disk, net bandwidth)>>}	\LO{SF}{ResourceAllocationandScheduling}{Core-Tier2}{Familiarity}{DefineHow}{<<Definir como recursos computacionales limitados (por ejemplo, participación de procesador, memoria, almacenamiento y ancho de banda) son gestionadas por una cuidadosa asignación para entidades existentes.>>}
\KUItem{SF}{ResourceAllocationandScheduling}{Core-Tier2}{KindsOf}{}{<<Kinds of scheduling (e.g., first-come, priority)>>}	\LO{SF}{ResourceAllocationandScheduling}{Core-Tier2}{Familiarity}{DescribeTheBy}{<<Describir los algoritmos de planificación mediante el cual, recursos son asignados a entidades competentes, y los factores de calidad por el cual se evaluan estos algoritmos, tal como equidad ({\it fairness}).>>}
\KUItem{SF}{ResourceAllocationandScheduling}{Core-Tier2}{Advantages}{}{<<Advantages of fair scheduling, preemptive scheduling>>}	\LO{SF}{ResourceAllocationandScheduling}{Core-Tier2}{Usage}{ImplementSimple}{<<Implementar un algoritmo básico de planificación.>>}
	\LO{SF}{ResourceAllocationandScheduling}{Core-Tier2}{Assessment}{UseFigures}{<<Usar factores de calidad de implementaciones de planificadores alternativos.>>}
	
\KU{SF}{Proximity}{<<Proximity>>}{ARMemoryManagement,OSVirtualMachines,ARMemoryManagement,OSVirtualMachines}{0}{3}	
\KUDescription{SF}{Proximity}{<<~>>}	
\KUItem{SF}{Proximity}{Core-Tier2}{Speed}{}{<<Speed of light and computers (one foot per nanosecond vs. one GHz clocks)>>}	\LO{SF}{Proximity}{Core-Tier2}{Familiarity}{ExplainTheLocality}{<<Explicar la importancia de localidad en la determinación de desempeño.>>}
\KUItem{SF}{Proximity}{Core-Tier2}{Latencies}{}{<<Latencies in computer systems: memory vs. disk latencies vs. across the network memory >>}	\LO{SF}{Proximity}{Core-Tier2}{Familiarity}{DescribeWhyAre}{<<Describir por qué las cosas que están cerca en espacio toman menos tiempo para su acceso.>>}
\KUItem{SF}{Proximity}{Core-Tier2}{Caches}{}{<<Caches and the effects of spatial and temporal locality on performance in processors and systems >>}	\LO{SF}{Proximity}{Core-Tier2}{Assessment}{CalculateAverage}{<<Calcular el tiempo promedio de acceso a la memoria y describir los {\t tradeoffs} en el desempeño jerarquico de la memoria en términos de capacidad, tasa de fallos/éxitos y el tiempo de acceso.>>}
"\KUItem{SF}{Proximity}{Core-Tier2}{CachesAnd}{}{<<Caches and cache coherency in databases, operating systems, distributed systems, and computer 
architecture >>}"	
\KUItem{SF}{Proximity}{Core-Tier2}{Introduction}{}{<<Introduction into the processor memory hierarchy and the formula for average memory access time >>}	
	
\KU{SF}{VirtualizationandIsolation}{<<Virtualization and Isolation>>}{}{0}{2}	
\KUDescription{SF}{VirtualizationandIsolation}{<<~>>}	
\KUItem{SF}{VirtualizationandIsolation}{Core-Tier2}{Rationale}{}{<<Rationale for protection and predictable performance>>}	\LO{SF}{VirtualizationandIsolation}{Core-Tier2}{Familiarity}{ExplainWhyImportant}{<<Explicar por qué es importante isolar y proteger la ejecución de programas individuales y ambientes que comparten recursos subyacentes comunes.>>}
\KUItem{SF}{VirtualizationandIsolation}{Core-Tier2}{Levels}{}{<<Levels of indirection, illustrated by virtual memory for managing physical memory resources  >>}	\LO{SF}{VirtualizationandIsolation}{Core-Tier2}{Familiarity}{DescribeHowOfCreate}{<<Describa cómo el concepto de indirección puede crear la ilusión de un equipo y recursos dedicados, incluso cuando físicamente esté compartida entre varios programas y entornos.>>}
\KUItem{SF}{VirtualizationandIsolation}{Core-Tier2}{Methods}{}{<<Methods for implementing virtual memory and virtual machines>>}	\LO{SF}{VirtualizationandIsolation}{Core-Tier2}{Assessment}{MeasureThe}{<<Medir el desempeño de dos instancias de aplicaciones que se ejecutan en máquinas virtuales independientes y determinar el efecto de aislamiento rendimiento.>>}
	
\KU{SF}{ReliabilitythroughRedundancy}{<<Reliability through Redundancy>>}{}{0}{2}	
\KUDescription{SF}{ReliabilitythroughRedundancy}{<<~>>}	
\KUItem{SF}{ReliabilitythroughRedundancy}{Core-Tier2}{Distinction}{}{<<Distinction between bugs and faults >>}	\LO{SF}{ReliabilitythroughRedundancy}{Core-Tier2}{Familiarity}{ExplainTheProgram}{<<Explique la diferencia entre los errores del programa, errores del sistema y fallos de hardware (por ejemplo, mala memoria) y excepciones (por ejemplo, intento de dividir por cero).>>}
\KUItem{SF}{ReliabilitythroughRedundancy}{Core-Tier2}{Redundancy}{}{<<Redundancy through check and retry>>}	\LO{SF}{ReliabilitythroughRedundancy}{Core-Tier2}{Familiarity}{ArticulateTheDetecting}{<<Articular la distinción entre la detección, manejo y recuperación de fallas y los métodos para su aplicación. >>}
\KUItem{SF}{ReliabilitythroughRedundancy}{Core-Tier2}{RedundancyThrough}{}{<<Redundancy through redundant encoding (error correcting codes, CRC, FEC) >>}	\LO{SF}{ReliabilitythroughRedundancy}{Core-Tier2}{Familiarity}{DescribeTheError}{<<Describir el papel de los códigos de corrección de errores en la prestación de técnicas de control y corrección de errores en la memoria, almacenamiento y redes. >>}
\KUItem{SF}{ReliabilitythroughRedundancy}{Core-Tier2}{Duplication}{}{<<Duplication/mirroring/replicas >>}	\LO{SF}{ReliabilitythroughRedundancy}{Core-Tier2}{Usage}{ApplySimpleExploiting}{<<Aplicar algoritmos simples para la explotación de la información redundante para los propósitos de corrección de datos. >>}
\KUItem{SF}{ReliabilitythroughRedundancy}{Core-Tier2}{Other}{}{<<Other approaches to fault tolerance and availability>>}	\LO{SF}{ReliabilitythroughRedundancy}{Core-Tier2}{Assessment}{CompareDifferent}{<<Comparar los diferentes métodos de detección de errores y de corrección para sus sobre gastos de datos, complejidad de implementación y el tiempo de ejecución para la codificación relativa, detección y corrección de errores.>>}
	
\KU{SF}{QuantitativeEvaluation}{<<Quantitative Evaluation>>}{}{0}{0}	
\KUDescription{SF}{QuantitativeEvaluation}{<<~>>}	
\KUItem{SF}{QuantitativeEvaluation}{Elective}{Analytical}{}{<<Analytical tools to guide quantitative evaluation>>}	\LO{SF}{QuantitativeEvaluation}{Elective}{Familiarity}{ExplainTheWhich}{<<Explicar las circunstancias en las que una figura de una métrica del rendimiento del sistema es útil.>>}
\KUItem{SF}{QuantitativeEvaluation}{Elective}{Order}{}{<<Order of magnitude analysis (Big-Oh notation)>>}	\LO{SF}{QuantitativeEvaluation}{Elective}{Familiarity}{ExplainTheBenchmarks}{<<Explicar las insuficiencias de los puntos de referencia como medida de rendimiento del sistema. >>}
\KUItem{SF}{QuantitativeEvaluation}{Elective}{Analysis}{}{<<Analysis of slow and fast paths of a system >>}	\LO{SF}{QuantitativeEvaluation}{Elective}{Usage}{UseLimit}{<<Utilice estudios limitados o cálculos sencillos para producir estimaciones de orden de magnitud para una métrica de rendimiento en un contexto dado. >>}
\KUItem{SF}{QuantitativeEvaluation}{Elective}{Events}{}{<<Events on their effect on performance (e.g., instruction stalls, cache misses, page faults) >>}	\LO{SF}{QuantitativeEvaluation}{Elective}{Assessment}{ConductAOn}{<<Llevar a cabo un experimento de rendimiento en un sistema de capas para determinar el efecto de un parámetro del sistema en la figura del rendimiento del sistema.>>}
"\KUItem{SF}{QuantitativeEvaluation}{Elective}{Understanding}{}{<<Understanding layered systems, workloads, and platforms, their implications for performance, and the 
challenges they represent for evaluation>>}"	
\KUItem{SF}{QuantitativeEvaluation}{Elective}{Microbenchmarking}{}{<<Microbenchmarking pitfalls >>}	
	
\KA{SP}{<<Asuntos sociales y práctica profesional.>>}{}	
"\KADescription{SP}{<<While technical issues are central to the computing curriculum, they do not constitute a complete educational program in the field. 
Students must also be exposed to the larger societal context of computing to develop an understanding of the relevant social, ethical, 
legal and professional issues. This need to incorporate the study of these non-technical issues into the ACM 
curriculum was formally recognized in 1991, as can be seen from the following except \cite{xxx}: 

\textit{Undergraduates also need to understand the basic cultural, social, legal, and ethical issues inherent in the discipline of computing. 
They should understand where the discipline has been, where it is, and where it is heading. They should also understand their 
individual roles in this process, as well as appreciate the philosophical questions, technical problems, and aesthetic 
values that play an important part in the development of the discipline.

Students also need to develop the ability to ask serious questions about the social impact of computing and to evaluate 
proposed answers to those questions. Future practitioners must be able to anticipate the impact of introducing a given 
product into a given environment. Will that product enhance or degrade the quality of life? What will the impact be upon 
individuals, groups, and institutions? 

Finally, students need to be aware of the basic legal rights of software and hardware vendors and users, and they also need 
to appreciate the ethical values that are the basis for those rights. Future practitioners must understand the responsibility 
that they will bear, and the possible consequences of failure. They must understand their own limitations as well as the 
limitations of their tools. All practitioners must make a longterm commitment to remaining current in their chosen specialties 
and in the discipline of computing as a whole} 

As technological advances continue to significantly impact the way we live and work, the critical importance of social
issues and professional practicecontinues to increase; new computer-based 
products and venues pose ever more challenging problems each year. It is our students who must enter the workforce 
and academia with intentional regard for the identification and resolution of these problems. 

Computer science educators may opt to deliver this core and elective material in stand-alone courses, integrated into traditional 
technical and theoretical courses, or as special units in capstone and professional practice courses. The material in this 
familiarity area is best covered through a combination of one required course along with short modules in other courses. On the 
one hand, some units listed as Core Tier-1 (in particular, Social Context, Analytical Tools, Professional Ethics, and Intellectual Property) 
do not readily lend themselves to being covered in other traditional courses. Without a standalone course, it is difficult to cover these 
topics appropriately. On the other hand, if ethical and social considerations are coveredonly in the standalone course and not “in context,” 
it will reinforce the false notion that technical processes are void of these other relevant issues. Because of this broad relevance, it is important 
that several traditionalcourses include modules with case studies that analyze the ethical, legal, social and professional considerations in the 
context of the technical subject matter of the course. Courses in areas such as software engineering, databases,computer networks, 
information assurance andsecurity, and introduction to computing provide obvious context for analysis of ethical issues. However, an 
ethics-related module could be developed for almost any course in the curriculum. It would be explicitly against the spirit of the recommendationsto have only a standalone course. Running through all of the issues in this area is the need to speak to the 
computing practitioner’s responsibility to proactively address theseissues by both moral and technical actions. The ethical issues discussed in any class should be directly related to and arise naturally from the subject matter of that class. Examples include a discussion in the database course of data aggregation or data mining, or a discussion in the software engineering course of the potential conflicts between obligations to the customer and obligations to the user and others affected by their work. Programming assignments built around applications such ascontrolling the movement of a laser during eye surgery can help to address the professional, ethical and social impacts of computing. Computing faculty who are unfamiliar with the content and/or pedagogy of applied ethics are urged to take advantage of the considerable resources from ACM,IEEE-CS, SIGCAS(special interest group on computers and society), and other organizations.

It should be noted that the applicationof ethical analysis underlies every subsection of this Social and Professional knowledge area in computing. The ACM Code of Ethics and Professional Conduct (http://www.acm.org/about/code-of-ethics) provides guidelines that serve as the basis for the conduct of our professional work. The General Moral Imperatives provide an understanding of our commitment to personal responsibility, professional conduct, and our leadership roles.>>}"	
	
\KU{SP}{SocialContext}{<<Social Context>>}{}{1}{2}	
"\KUDescription{SP}{SocialContext}{<<Computers and the Internet, perhaps more than any other technologies, have transformed 
society over the past 75 years, with dramatic increases in human productivity; an explosion of 
options for news, entertainment, and communication; and fundamental breakthroughs in almost 
every branch of science and engineering.Social Context provides the foundation for all other 
SP knowledge units, especially Professional Ethics. 
>>}"	
\KUItem{SP}{SocialContext}{Core-Tier1}{Social}{HCIFoundations,IASFoundationalConceptsinSecurity,HCIFoundationsTopicSocial,IASFoundationalConceptsinSecurity}{<<Social implications of computing in a networked world >>}	\LO{SP}{SocialContext}{Core-Tier1}{Familiarity}{DescribePositive}{<<Describir las formas positivas y negativas en las que la tecnología computacional (redes, computación móvil, {\it cloud computing}) altera los modos de interacción social en el plano personal.>>}
\KUItem{SP}{SocialContext}{Core-Tier1}{Impact}{}{<<Impact of social media on individualism, collectivism and culture>>}	\LO{SP}{SocialContext}{Core-Tier1}{Familiarity}{IdentifyDevelopers}{<<Identificar los supuestos y valores incorporados en el hardware y el software de diseño de los desarrolladores, especialmente lo que se refiere a la facilidad de uso para diversas poblaciones incluyendo minorías poblaciones y los discapacitados>>}
\KUItem{SP}{SocialContext}{Core-Tier2}{Growth}{NCIntroduction,NCIntroduction}{<<Growth and control of the Internet>>}	\LO{SP}{SocialContext}{Core-Tier1}{Familiarity}{InterpretThe}{<<Interpretar el contexto social de un determinado diseño y su aplicación>>}
"\KUItem{SP}{SocialContext}{Core-Tier2}{Often}{}{<<Often referred to as the digital divide, differences in access to digital technology resources and its resulting 
ramifications for gender, class, ethnicity, geography, and/or underdeveloped countries>>}"	\LO{SP}{SocialContext}{Core-Tier1}{Assessment}{EvaluateTheA}{<<Evaluar la eficacia de un diseño y aplicación dada a partir de datos empíricos>>}
"\KUItem{SP}{SocialContext}{Core-Tier2}{Accessibility}{}{<<Accessibility issues, including legal requirements 
>>}"	\LO{SP}{SocialContext}{Core-Tier1}{Usage}{SummarizeTheSocial}{<<Resumir las implicaciones de los medios sociales en el individualismo frente al colectivismo y la cultura.>>}
\KUItem{SP}{SocialContext}{Core-Tier2}{Context}{HCIDesigningInteraction,HCIDesigningInteraction}{<< Context-aware computing>>}	\LO{SP}{SocialContext}{Core-Tier2}{Familiarity}{DiscussHowServes}{<<Discuta cómo el acceso a Internet sirve como una fuerza liberadora para las personas que viven bajo las formas opresivas de gobierno; explicar la utilización los límites al acceso a Internet como herramientas de represión política y social>>}
	\LO{SP}{SocialContext}{Core-Tier2}{Assessment}{AnalyzeTheCons}{<<Analizar los pros y los contras de la dependencia de la computación en la implementación de la democracia (por ejemplo, prestación de servicios sociales, votación electrónica)>>}
	\LO{SP}{SocialContext}{Core-Tier2}{Familiarity}{DescribeTheTheOf}{<<Describir el impacto de la escasa representación de las diversas poblaciones en la profesión (por ejemplo, la cultura de la industria, la diversidad de productos)>>}
	\LO{SP}{SocialContext}{Core-Tier2}{Familiarity}{ExplainTheContext}{<<Explicar las consecuencias de la sensibilidad al contexto en los sistemas de computación ubicua>>}
	
\KU{SP}{AnalyticalTools}{<<Analytical Tools>>}{}{2}{0}	
\KUDescription{SP}{AnalyticalTools}{<<Ethical theories and principles are the foundations of ethical analysis because they are the viewpoints from which guidance can be obtained along the pathway to a decision. Each theory emphasizes different points such as predicting the outcome and following one's duties to others in order to reach an ethically guided decision. However, in order for an ethical theory to be useful, the theory must be directed towards a common set of goals. Ethical principles are the common goals that each theory tries to achieve in order to be successful. These goals include beneficence, least harm, respect for autonomy, and justice.>>}	
\KUItem{SP}{AnalyticalTools}{Core-Tier1}{Ethical}{}{<<Ethical argumentation >>}	\LO{SP}{AnalyticalTools}{Core-Tier1}{Assessment}{EvaluateStakeholder}{<<Evaluar las posiciones de las partes interesadas en una situación dada.>>}
\KUItem{SP}{AnalyticalTools}{Core-Tier1}{EthicalTheories}{}{<<Ethical theories and decision-making >>}	\LO{SP}{AnalyticalTools}{Core-Tier1}{Assessment}{AnalyzeBasic}{<<Analizar errores lógicos básicos en una discusión.>>}
\KUItem{SP}{AnalyticalTools}{Core-Tier1}{Moral}{}{<<Moral assumptions and values>>}	\LO{SP}{AnalyticalTools}{Core-Tier1}{Assessment}{AnalyzeAn}{<<Analizar un argumento para identificar premisas y la conclusión.>>}
	\LO{SP}{AnalyticalTools}{Core-Tier1}{Usage}{IllustrateThe}{<<Ilustrar el uso de ejemplo y analogía en el argumento ético>>}
	\LO{SP}{AnalyticalTools}{Core-Tier1}{Assessment}{EvaluateEthical}{<<Evaluar compensaciones éticos / sociales en las decisiones técnicas.>>}
	
\KU{SP}{ProfessionalEthics}{<<Professional Ethics>>}{}{2}{2}	
\KUDescription{SP}{ProfessionalEthics}{<<Computer ethics is a branch of practical philosophy thatdeals with how computing professionals should make decisions regarding professional and social conduct. There are three primary influences: 1) anindividual's own personal code; 2) any informal code of ethical behavior existing in the work place; and 3) exposure to formal codes of ethics. Ver \xref{Information Assurance and Security (IAS) KA}>>}	
\KUItem{SP}{ProfessionalEthics}{Core-Tier1}{Community}{}{<<Community values and the laws by which we live>>}	\LO{SP}{ProfessionalEthics}{Core-Tier1}{Familiarity}{IdentifyEthical}{<<Identificar los problemas éticos que se plantean en el desarrollo de software y determinar cómo abordarlos técnica y éticamente.>>}
\KUItem{SP}{ProfessionalEthics}{Core-Tier1}{The}{}{<<The nature of professionalism including care, attention and discipline, fiduciary responsibility, andmentoring>>}	\LO{SP}{ProfessionalEthics}{Core-Tier1}{Familiarity}{ExplainTheOfCorrectness}{<<Explicar la responsabilidad ética de velar por la corrección de software, confiabilidad y seguridad.>>}
\KUItem{SP}{ProfessionalEthics}{Core-Tier1}{Keeping}{}{<<Keeping up-to-date as a computing professional in terms of familiarity, tools, skills, legal and professional framework as well as the ability to self-assess and progress in the computing field>>}	\LO{SP}{ProfessionalEthics}{Core-Tier1}{Familiarity}{DescribeTheTypically}{<<Describir los mecanismos que normalmente existen para que profesional se mantenga al día>>}
\KUItem{SP}{ProfessionalEthics}{Core-Tier1}{Professional}{IASFoundationalConceptsinSecurity,IASFoundationalConceptsinSecurity}{<<Professional certification, codes of ethics, conduct, and practice, such as the ACM/IEEE-CS, SE, AITP, IFIP and international societies>>}	\LO{SP}{ProfessionalEthics}{Core-Tier1}{Familiarity}{DescribeTheWeaknesses}{<<Describir las fortalezas y debilidades de códigos profesionales relevantes como expresiones de profesionalismo y guías para la toma de decisiones>>}
\KUItem{SP}{ProfessionalEthics}{Core-Tier1}{Accountability}{}{<<Accountability, responsibility and liability (e.g. software correctness, reliability and safety, as well as ethical confidentiality of cybersecurity professionals)>>}	\LO{SP}{ProfessionalEthics}{Core-Tier1}{Assessment}{AnalyzeAIssue}{<<Analizar un problema mundial de computación, observando el papel de los profesionales y funcionarios del gobierno en el manejo de este problema.>>}
\KUItem{SP}{ProfessionalEthics}{Core-Tier2}{TheRole}{}{<<The role of the computing professional in public policy>>}	\LO{SP}{ProfessionalEthics}{Core-Tier1}{Assessment}{EvaluateTheOf}{<<Evaluar los códigos de ética profesional de la ACM, la Sociedad de Computación de la IEEE, y otras organizaciones.>>}
\KUItem{SP}{ProfessionalEthics}{Core-Tier2}{Maintaining}{}{<<Maintaining awareness of consequences>>}	\LO{SP}{ProfessionalEthics}{Core-Tier2}{Familiarity}{DescribeWays}{<<Describir las formas en que los profesionales pueden contribuir a las políticas públicas.>>}
\KUItem{SP}{ProfessionalEthics}{Core-Tier2}{EthicalDissent}{}{<<Ethical dissent and whistle-blowing>>}	\LO{SP}{ProfessionalEthics}{Core-Tier2}{Familiarity}{DescribeTheInappropriate}{<<Describir las consecuencias de la conducta profesional inadecuada.>>}
\KUItem{SP}{ProfessionalEthics}{Core-Tier2}{TheRelationship}{}{<<The relationship between regional culture and ethical dilemmas>>}	\LO{SP}{ProfessionalEthics}{Core-Tier2}{Familiarity}{IdentifyProgressive}{<<Identificar las etapas progresivas en un incidente de denuncia de irregularidades.>>}
\KUItem{SP}{ProfessionalEthics}{Core-Tier2}{Dealing}{}{<<Dealing with harassment and discrimination>>}	\LO{SP}{ProfessionalEthics}{Core-Tier2}{Familiarity}{IdentifyExamplesRegional}{<<Identificar ejemplos de cómo interactúa la cultura regional con dilemas éticos.>>}
\KUItem{SP}{ProfessionalEthics}{Core-Tier2}{Forms}{}{<<Forms of professional credentialing>>}	\LO{SP}{ProfessionalEthics}{Core-Tier2}{Usage}{InvestigateForms}{<<Investigar las formas de acoso, discriminación y formas de ayuda >>}
\KUItem{SP}{ProfessionalEthics}{Core-Tier2}{Acceptable}{}{<<Acceptable use policies for computing in the workplace>>}	\LO{SP}{ProfessionalEthics}{Core-Tier2}{Usage}{Examine}{<<Examine las diversas formas de acreditación de profesionales.>>}
\KUItem{SP}{ProfessionalEthics}{Core-Tier2}{Ergonomics}{}{<<Ergonomics and healthy computing environments>>}	\LO{SP}{ProfessionalEthics}{Core-Tier2}{Familiarity}{ExplainTheErgonomics}{<<Explicar la relación entre la ergonomía en los ambientes y la salud de las personas de computación>>}
\KUItem{SP}{ProfessionalEthics}{Core-Tier2}{Time}{}{<<Time to market and cost considerations versus quality professional standards>>}	\LO{SP}{ProfessionalEthics}{Core-Tier2}{Assessment}{DevelopA}{<<Desarrollar un uso del computador/política de uso aceptable con medidas coercitivas>>}
	"\LO{SP}{ProfessionalEthics}{Core-Tier2}{Familiarity}{DescribeIssuesIndustries}{<<Describir los problemas asociados con la presión de la industrias para centrarse 
en el tiempo de comercialización en comparación con la aplicación de 
normas de calidad profesional>>}"
	
\KU{SP}{IntellectualProperty}{<<Intellectual Property>>}{}{2}{0}	
\KUDescription{SP}{IntellectualProperty}{<<Intellectual property refers to a range of intangible rights of ownership in an asset such as a software program. Each intellectual property ``right" is itself an asset. The law provides different methods for protecting these rights of ownership based on their type. There are essentially four types of intellectual property rights relevant to software: patents, copyrights, trade secrets and trademarks. Each affords a different type of legal protection. See \xref{InformationManagement (IM) KA}.>>}	
\KUItem{SP}{IntellectualProperty}{Core-Tier1}{Philosophical}{}{<<Philosophical foundations of intellectual property>>}	\LO{SP}{IntellectualProperty}{Core-Tier1}{Familiarity}{DiscussTheOf}{<<Discute las bases filosóficas de la propiedad intelectual.>>}
"\KUItem{SP}{IntellectualProperty}{Core-Tier1}{Intellectual}{IMInformationStorageandRetrieval,IMInformationStorageandRetrievalTopicIntellectualProperty}{<<Intellectual property rights (cross-reference IM/Information Storage and Retrieval/intellectual property and 
protection) >>}"	\LO{SP}{IntellectualProperty}{Core-Tier1}{Familiarity}{DiscussTheTheOf}{<<Discute la racionalidad de la protección legal de la propiedad intelectual.>>}
\KUItem{SP}{IntellectualProperty}{Core-Tier1}{Intangible}{}{<<Intangible digital intellectual property (IDIP) >>}	\LO{SP}{IntellectualProperty}{Core-Tier1}{Familiarity}{DescribeLegislation}{<<Decribe la legislación orientada a los delitos de derechos de autor digitales.>>}
\KUItem{SP}{IntellectualProperty}{Core-Tier1}{Legal}{}{<<Legal foundations for intellectual property protection >>}	\LO{SP}{IntellectualProperty}{Core-Tier1}{Assessment}{CritiqueLegislation}{<<Critica la legislación orientada a los delitos digitales de derechos de autor.>>}
\KUItem{SP}{IntellectualProperty}{Core-Tier1}{Digital}{}{<<Digital rights management >>}	\LO{SP}{IntellectualProperty}{Core-Tier1}{Familiarity}{IdentifyContemporary}{<<Identifica ejemplos contemporáneos de propiedad intelectual digital intangible.>>}
\KUItem{SP}{IntellectualProperty}{Core-Tier1}{Copyrights}{}{<<Copyrights, patents, trade secrets, trademarks>>}	\LO{SP}{IntellectualProperty}{Core-Tier1}{Assessment}{Justify}{<<Justifica el uso de material con derechos de autor.>>}
\KUItem{SP}{IntellectualProperty}{Core-Tier1}{Plagiarism}{}{<<Plagiarism>>}	\LO{SP}{IntellectualProperty}{Core-Tier1}{Assessment}{EvaluateTheInherent}{<<Evalúa los asuntos éticos inherentes a diversos mecanismos de detección de plagio.>>}
\KUItem{SP}{IntellectualProperty}{Elective}{Foundations}{}{<<Foundations of the open source movement >>}	\LO{SP}{IntellectualProperty}{Core-Tier1}{Familiarity}{InterpretTheImplementation}{<<Interpreta el intento y la implementación de licencias de software.>>}
\KUItem{SP}{IntellectualProperty}{Elective}{Software}{}{<<Software piracy>>}	\LO{SP}{IntellectualProperty}{Core-Tier1}{Familiarity}{DiscussTheInPatents}{<<Discute asuntos que involucran la seguridad de patentes en software.>>}
	\LO{SP}{IntellectualProperty}{Core-Tier1}{Assessment}{CharacterizeAndConcepts}{<<Caracteriza y contrasta los conceptos de derechos de autor, patentes y de marcas comerciales.>>}
	\LO{SP}{IntellectualProperty}{Elective}{Familiarity}{IdentifyTheTheMovement}{<<Identifica los objetivos del movimiento de software libre.>>}
	\LO{SP}{IntellectualProperty}{Elective}{Familiarity}{IdentifyTheOf}{<<Identifica la naturaleza global de la piratería de software.>>}
	
\KU{SP}{PrivacyandCivilLiberties}{<<Privacy and Civil Liberties>>}{}{2}{0}	
\KUDescription{SP}{PrivacyandCivilLiberties}{<<Electronic information sharing highlights the need to balance privacy protections with information access. The ease of digital access to many types of data makes privacy rights and civil liberties more complex, differing among the variety of cultures worldwide.>>}	
\KUItem{SP}{PrivacyandCivilLiberties}{Core-Tier1}{PhilosophicalFoundations}{ISFundamentalIssues,ISFundamentalIssuesTopicPhilosophical}{<<Philosophical foundations of privacy rights>>}	\LO{SP}{PrivacyandCivilLiberties}{Core-Tier1}{Familiarity}{DiscussTheFor}{<<Discute las bases filosóficas para la protección legal de la privacidad personal.>>}
\KUItem{SP}{PrivacyandCivilLiberties}{Core-Tier1}{LegalFoundations}{}{<<Legal foundations of privacy protection>>}	\LO{SP}{PrivacyandCivilLiberties}{Core-Tier1}{Assessment}{EvaluateSolutions}{<<Evalúa soluciones para amenazas a la privacidad en bases de datos transaccionales y almacenes de datos.>>}
\KUItem{SP}{PrivacyandCivilLiberties}{Core-Tier1}{Privacy}{IMDatabaseSystems,IMDataMining,IMDatabaseSystems,IMDataMiningTopicDataCleaning}{<<Privacy implications of widespread data collection for transactional databases, data warehouses, surveillance systems, and cloud computing>>}	\LO{SP}{PrivacyandCivilLiberties}{Core-Tier1}{Familiarity}{DescribeTheDataThe}{<<Describe los roles de la recolección de datos en la implementación de sistemas de vigilancia intrusiva (ejm. RFID, reconocimiento de rostro, cobro electrónico, computación móvil).>>}
\KUItem{SP}{PrivacyandCivilLiberties}{Core-Tier1}{Ramifications}{}{<<Ramifications of differential privacy>>}	\LO{SP}{PrivacyandCivilLiberties}{Core-Tier1}{Familiarity}{DescribeTheDifferential}{<<Describe las ramificaciones de la privacidad diferenciada.>>}
\KUItem{SP}{PrivacyandCivilLiberties}{Core-Tier1}{Technology}{IASThreatsandAttacks,IASThreatsandAttacksTopicAttacker}{<<Technology-based solutions for privacy protection>>}	\LO{SP}{PrivacyandCivilLiberties}{Core-Tier1}{Usage}{InvestigateTheTechnological}{<<Investica el impacto de soluciones tecnológicas a los problemas de privacidad.>>}
\KUItem{SP}{PrivacyandCivilLiberties}{Elective}{PrivacyLegislation}{}{<<Privacy legislation in areas of practice>>}	\LO{SP}{PrivacyandCivilLiberties}{Elective}{Assessment}{CritiqueThe}{<<Critica la intención, el valor potencial y la implementación de las diversas formas de legislación en privacidad.>>}
\KUItem{SP}{PrivacyandCivilLiberties}{Elective}{Civil}{}{<<Civil liberties and cultural differences>>}	\LO{SP}{PrivacyandCivilLiberties}{Elective}{Familiarity}{IdentifyStrategies}{<<Identifica estrategias que permitan la apropiada libertad de expresión.>>}
\KUItem{SP}{PrivacyandCivilLiberties}{Elective}{Freedom}{}{<<Freedom of expression and its limitations>>}	
	
\KU{SP}{ProfessionalCommunication}{<<Professional Communication>>}{}{1}{0}	
\KUDescription{SP}{ProfessionalCommunication}{<<Professional communication conveys technical information to various audiences who may have very different goals and needs for that information. Effective professional communication of technical information is rarely an inherited gift, but rather needs to be taught in context throughout the undergraduate curriculum.>>}	
\KUItem{SP}{ProfessionalCommunication}{Core-Tier1}{Reading}{}{<<Reading, understanding and summarizing technical material, including source code and documentation >>}	\LO{SP}{ProfessionalCommunication}{Core-Tier1}{Usage}{WriteClear}{<<Escribe documentos técnicos claros, concisos y exactos siguiendo estándares bien definidos para su formato y para la inclusión de tablas, figuras y referencias adecuadas.>>}
\KUItem{SP}{ProfessionalCommunication}{Core-Tier1}{Writing}{}{<<Writing effective technical documentation and materials >>}	\LO{SP}{ProfessionalCommunication}{Core-Tier1}{Assessment}{EvaluateWritten}{<<Evalúa documentación técnica escrita para detectar problemas de diversos tipos.>>}
\KUItem{SP}{ProfessionalCommunication}{Core-Tier1}{Dynamics}{HCICollaborationandcommunication,SESoftwareProjectManagement,HCICollaborationandcommunication,SESoftwareProjectManagementTopicTeam}{<<Dynamics of oral, written, and electronic team and group communication>>}	\LO{SP}{ProfessionalCommunication}{Core-Tier1}{Assessment}{DevelopAnd}{<<Desarrolla y brinda una presentación formal de buena calidad.>>}
\KUItem{SP}{ProfessionalCommunication}{Core-Tier1}{Communicating}{}{<<Communicating professionally with stakeholders >>}	\LO{SP}{ProfessionalCommunication}{Core-Tier1}{Usage}{Plan}{<<Interacciones del plan (por ejemplo, cara a cara, documentos compartidos virtuales) con otros en los que son capaces de obtener su punto de vista, escuchar con atención y apreciar los puntos de los demás, incluso cuando no están de acuerdo y son capaces de transmitir a los demás que han oído.>>}
\KUItem{SP}{ProfessionalCommunication}{Core-Tier1}{Utilizing}{HCICollaborationandcommunicationTopicOnline,ISAgents,HCICollaborationandcommunicationTopicOnline,ISAgents}{<<Utilizing collaboration tools>>}	\LO{SP}{ProfessionalCommunication}{Core-Tier1}{Familiarity}{DescribeTheWeaknessesForms}{<<Describir las fortalezas y debilidades de las diversas formas de comunicación (por ejemplo, cara a cara, documentos compartidos virtuales).>>}
"\KUItem{SP}{ProfessionalCommunication}{Elective}{Dealing}{HCIUsercentereddesignandtestingTopicInternationalization,HCIUsercentereddesignandtesting,HCOTestingcross}{<<Dealing with cross-cultural environments 

>>}"	\LO{SP}{ProfessionalCommunication}{Core-Tier1}{Usage}{ExamineAppropriate}{<<Examinar las medidas adecuadas que se utilizan para comunicarse con las partes involucrados en un proyecto.>>}
"\KUItem{SP}{ProfessionalCommunication}{Elective}{Tradeoffs}{SESoftwareProjectManagementTopic,SESoftwareProjectManagementTopicRisk}{<<Tradeoffs of competing risks in software projects, such as technology, structure/process, quality, people, 
market and financial 
>>}"	\LO{SP}{ProfessionalCommunication}{Core-Tier1}{Assessment}{CompareAndCollaboration}{<<   Comparar y contrastar diversas herramientas de colaboración.>>}
	\LO{SP}{ProfessionalCommunication}{Elective}{Familiarity}{DiscussWays}{<<Discutir formas de influir en el rendimiento y los resultados en equipos multi-culturales.>>}
	\LO{SP}{ProfessionalCommunication}{Elective}{Usage}{ExamineThe}{<<Examine los puntos de equilibrio y las fuentes comunes de riesgo en proyectos relacionados con el software de tecnología, estructura/proceso, la calidad, la gente, el mercado y la parte financiera>>}
	\LO{SP}{ProfessionalCommunication}{Elective}{Assessment}{EvaluatePersonal}{<<Evaluar las fortalezas y debilidades personales para trabajar de forma remota como parte de un equipo multinacional.>>}
	
\KU{SP}{Sustainability}{<<Sustainability>>}{}{1}{1}	
\KUDescription{SP}{Sustainability}{<<Sustainability is characterized by the United Nations as ``development that meets the needs of the present without compromising the ability of future generations to meet their own needs." Sustainability was first introduced in the CS2008 curricular guidelines. Topics in this emerging area can be naturally integrated into other familiarity areas and units, such as human-computer interaction and software evolution. See \xref{HCI}, \xref{SE}.>>}	
\KUItem{SP}{Sustainability}{Core-Tier1}{Being}{}{<<Being a sustainable practitioner by taking into consideration cultural and environmental impacts of implementation decisions (e.g. organizational policies, economic viability, and resource consumption).>>}	\LO{SP}{Sustainability}{Core-Tier1}{Familiarity}{IdentifyWaysA}{<<Identificar maneras para ser un practicante sostenible.>>}
\KUItem{SP}{Sustainability}{Core-Tier1}{Explore}{}{<<Explore global social and environmental impacts of computer use and disposal (e-waste)>>}	\LO{SP}{Sustainability}{Core-Tier1}{Usage}{IllustrateGlobal}{<<Ilustrar los impactos sociales y ambientales globales de uso y la eliminación de computadores (e-waste)>>}
\KUItem{SP}{Sustainability}{Core-Tier2}{Environmental}{SESoftwareEvolution,HCIDesignorientedHCI,SESoftwareEvolution,HCIDesignorientedHCI}{<<Environmental impacts of design choices in specific areas such as algorithms, operating systems, networks, databases, or human-computer interaction>>}	\LO{SP}{Sustainability}{Core-Tier2}{Familiarity}{DescribeTheOfWithin}{<<Describir los impactos ambientales de las opciones de diseño en el campo de la informática que se relacionan con el diseño de algoritmo, el diseño del sistema operativo, diseño de redes, diseño de bases de datos, etc>>}
\KUItem{SP}{Sustainability}{Elective}{Guidelines}{}{<<Guidelines for sustainable design standards>>}	\LO{SP}{Sustainability}{Core-Tier2}{Usage}{InvestigateTheEnvironmental}{<<Investigar los impactos sociales y ambientales de los nuevos diseños de sistemas a través de proyectos.>>}
\KUItem{SP}{Sustainability}{Elective}{Systemic}{}{<<Systemic effects of complex computer-mediated phenomena (e.g. telecommuting or web shopping)>>}	\LO{SP}{Sustainability}{Elective}{Familiarity}{IdentifyGuidelines}{<<Identificar los lineamientos para el diseño o despliegue de TI sostenible.>>}
\KUItem{SP}{Sustainability}{Elective}{Pervasive}{}{<<Pervasive computing; information processing integrated into everyday objects and activities, such as smart energy systems, social networking and feedback systems to promote sustainable behavior, transportation, environmental monitoring, citizen science and activism.>>}	\LO{SP}{Sustainability}{Elective}{Familiarity}{ListTheOfWeb}{<<Enumerar los efectos sostenibles de teletrabajo o de compras web.>>}
\KUItem{SP}{Sustainability}{Elective}{Research}{}{<<Research on applications of computing to environmental issues, such as energy, pollution, resource usage, recycling and reuse, food management, farming and others.>>}	\LO{SP}{Sustainability}{Elective}{Usage}{InvestigatePervasive}{<<Investigar la computación ubicua en áreas como los sistemas inteligentes de energía, redes sociales, el transporte, la agricultura, los sistemas de la cadena de suministro, monitoreo ambiental y el activismo ciudadano.>>}
\KUItem{SP}{Sustainability}{Elective}{The}{}{<<The interdependence of the sustainability of software systems with social systems, including the knowledge and skills of its users, organizational processes and policies, and its societal context (e.g., market forces, government policies).>>}	\LO{SP}{Sustainability}{Elective}{Assessment}{DevelopApplications}{<<Desarrollar aplicaciones de computación  y evaluar a través de areas de investigación relacionadas a cuestiones ambientales (ejemplo energia, contaminación, uso de recursos, reciclaje y reutilización, gestión de alimentos y agricultura).>>}
	
\KU{SP}{History}{<<History>>}{}{0}{0}	
\KUDescription{SP}{History}{<<This history of computing is taught to provide a sense of how the rapid change in computing impacts society on a global scale. It is often taught in context with foundational concepts, such as system fundamentals and software developmental fundamentals.>>}	
\KUItem{SP}{History}{Elective}{Prehistory}{}{<<Prehistory, the world before 1946>>}	\LO{SP}{History}{Elective}{Familiarity}{IdentifySignificant}{<<Identificar importantes tendencias en la historia del campo de la computación.>>}
\KUItem{SP}{History}{Elective}{History}{ARDigitallogicanddigitalsystems,ARDigitallogicanddigitalsystems}{<<History of computer hardware, software, networking>>}	\LO{SP}{History}{Elective}{Familiarity}{IdentifyTheSeveral}{<<Identificar las contribuciones de varios pioneros en el campo de la computación.>>}
\KUItem{SP}{History}{Elective}{Pioneers}{}{<<Pioneers of computing>>}	\LO{SP}{History}{Elective}{Familiarity}{DiscussTheForLanguage}{<<Discutir el contexto histórico de los paradigmas de diversos lenguajes de programación.>>}
\KUItem{SP}{History}{Elective}{HistoryOf}{}{<<History of the Internet>>}	\LO{SP}{History}{Elective}{Assessment}{CompareDaily}{<<Comparar la vida diaria antes y después de la llegada de los ordenadores personales y el Internet.>>}
	
\KU{SP}{EconomiesofComputing}{<<Economies of Computing>>}{}{0}{0}	
\KUDescription{SP}{EconomiesofComputing}{<<Economics of computing encompasses the metrics and best practices for personnel and financial management surrounding computer information systems.>>}	
\KUItem{SP}{EconomiesofComputing}{Elective}{Monopolies}{}{<<Monopolies and their economic implications>>}	\LO{SP}{EconomiesofComputing}{Elective}{Familiarity}{SummarizeTheAntimonopoly}{<<Resumir los fundamentos para los esfuerzos antimonopolio.>>}
\KUItem{SP}{EconomiesofComputing}{Elective}{Effect}{}{<<Effect of skilled labor supply and demand on the quality of computing products>>}	\LO{SP}{EconomiesofComputing}{Elective}{Familiarity}{IdentifySeveral}{<<Identificar diversas maneras en que la industria de la tecnología de la información está afectada por la escasez de la oferta de trabajo.>>}
\KUItem{SP}{EconomiesofComputing}{Elective}{Pricing}{}{<<Pricing strategies in the computing domain>>}	\LO{SP}{EconomiesofComputing}{Elective}{Familiarity}{IdentifyThePricing}{<<Identificar la evolución de la estrategía de precios para el cálculo de los bienes y servicios.>>}
\KUItem{SP}{EconomiesofComputing}{Elective}{ThePhenomenon}{}{<<The phenomenon of outsourcing and off-shoring software development; impacts on employment and on economics>>}	\LO{SP}{EconomiesofComputing}{Elective}{Familiarity}{DiscussTheDrawbacks}{<<Discutir los beneficios, los inconvenientes y las implicaciones de {\it off-shoring} y {\it outsourcing}.>>}
\KUItem{SP}{EconomiesofComputing}{Elective}{Consequences}{}{<<Consequences of globalization for the computer science profession>>}	\LO{SP}{EconomiesofComputing}{Elective}{Usage}{InvestigateAnd}{<<Investigar y defender maneras de tratar las limitaciones en el acceso a la computación. >>}
\KUItem{SP}{EconomiesofComputing}{Elective}{Differences}{}{<<Differences in access to computing resources and the possible effects thereof>>}	\LO{SP}{EconomiesofComputing}{Elective}{Familiarity}{DescribeTheOf}{<<Describir los beneficios económicos de efectos de la red.>>}
\KUItem{SP}{EconomiesofComputing}{Elective}{Cost}{}{<<Cost/benefit analysis of jobs with considerations to manufacturing, hardware, software, and engineering implications>>}	
\KUItem{SP}{EconomiesofComputing}{Elective}{CostEstimates}{}{<<Cost estimates versus actual costs in relation to total costs>>}	
\KUItem{SP}{EconomiesofComputing}{Elective}{Entrepreneurship}{}{<<Entrepreneurship: prospects and pitfalls>>}	
\KUItem{SP}{EconomiesofComputing}{Elective}{Network}{}{<<Network effect or demand-side economies of scale>>}	
\KUItem{SP}{EconomiesofComputing}{Elective}{Use}{}{<<Use of engineering economics in dealing with finances>>}	
	
\KU{SP}{SecurityPoliciesLawsandComputerCrimes}{<<Security Policies, Laws and Computer Crimes>>}{}{0}{0}	
\KUDescription{SP}{SecurityPoliciesLawsandComputerCrimes}{<<While security policies, laws and computer crimes are important subjects, it is essential they are viewed with the foundation of other Social and Professional knowledge units, such as Intellectual Property, Privacy and Civil Liberties, Social Context, and Professional Ethics. Computers and the Internet, perhaps more than any other technology, have transformed society over the past 75 years. At the same time, they have contributed to unprecedented threats to privacy; whole new categories of crime and anti-social behavior; major disruptions to organizations; and the largescale concentration of risk into information systems. See \xref{HCI}, \xref{IAS}.>>}	
\KUItem{SP}{SecurityPoliciesLawsandComputerCrimes}{Elective}{Examples}{IASDigitalForensics,IASDigitalForens}{<<Examples of computer crimes and legal redress for computer criminals>>}	\LO{SP}{SecurityPoliciesLawsandComputerCrimes}{Elective}{Familiarity}{ListClassic}{<<Listar ejemplos clásicos de delitos informáticos y incidentes de ingeniería social con impacto social.>>}
\KUItem{SP}{SecurityPoliciesLawsandComputerCrimes}{Elective}{Social}{HCIHumanfactorsandsecurity,HCIHumanFactorsandSecuritytrust}{<<Social engineering, identity theft and recovery>>}	\LO{SP}{SecurityPoliciesLawsandComputerCrimes}{Elective}{Familiarity}{IdentifyLaws}{<<Indentificar leyes que se aplican a delitos informáticos.>>}
\KUItem{SP}{SecurityPoliciesLawsandComputerCrimes}{Elective}{Issues}{}{<<Issues surrounding the misuse of access and breaches in security >>}	\LO{SP}{SecurityPoliciesLawsandComputerCrimes}{Elective}{Familiarity}{DescribeTheRamifications}{<<Describir la motivación y ramificaciones de cyberterrorismo y hackeo criminal.>>}
\KUItem{SP}{SecurityPoliciesLawsandComputerCrimes}{Elective}{Motivations}{}{<<Motivations and ramifications of cyber terrorism and criminal hacking, “cracking”>>}	\LO{SP}{SecurityPoliciesLawsandComputerCrimes}{Elective}{Usage}{ExamineTheLegal}{<<Examinar los problemas éticos y legales relacionados con el mal uso de accesos y diversas violaciones en la seguridad.>>}
\KUItem{SP}{SecurityPoliciesLawsandComputerCrimes}{Elective}{Effects}{}{<<Effects of malware, such as viruses, worms and Trojan horses >>}	\LO{SP}{SecurityPoliciesLawsandComputerCrimes}{Elective}{Familiarity}{DiscussTheRole}{<<Discutir el rol del profesional en seguridad y los problemas que están envueltos.>>}
\KUItem{SP}{SecurityPoliciesLawsandComputerCrimes}{Elective}{Crime}{}{<<Crime prevention strategies >>}	\LO{SP}{SecurityPoliciesLawsandComputerCrimes}{Elective}{Usage}{InvestigateMeasures}{<<Investigar medidas que puedan ser consideradas por personas y organizaciones incluyendo al gobierno para prevenir o mitigar efectos indeseables de los delitos informáticos y robo de identidad.>>}
\KUItem{SP}{SecurityPoliciesLawsandComputerCrimes}{Elective}{Security}{IASSecurityPolicyandGovernance,IASSecurityPolicyandGovernanceTopicPolicies}{<<Security policies >>}	\LO{SP}{SecurityPoliciesLawsandComputerCrimes}{Elective}{Usage}{WriteASecurity}{<<Escribir una politica de seguridad de una empresa, la cual incluye procedimientos para administrar contraseñas y monitorizar a los empleados.>>}
	